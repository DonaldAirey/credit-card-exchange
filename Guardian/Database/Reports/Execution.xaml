<ReportGrid Split="0,37"
            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
            xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
            xmlns:guardian="http://schemas.fluidtrade.com/winfx/2006/xaml/guardian/presentation"
            xmlns:mh="urn:schemas-fluidtrade-com:guardian:execution-header"
            xmlns:m="urn:schemas-fluidtrade-com:guardian:execution"
            xmlns:fluidtrade="http://schemas.fluidtrade.com/winfx/2006/xaml/fluidtrade/presentation">
	<!-- Resources -->
	<ReportGrid.Resources>
		<!-- Body Mouse Hover Brush -->
		<LinearGradientBrush EndPoint="0,1"
                         x:Key="BodyMouseHoverBrush"
                         StartPoint="0,0">
			<LinearGradientBrush.GradientStops>
				<GradientStop Color="#E6F5FD"
                      Offset="0" />
				<GradientStop Color="#D9F0FC"
                      Offset="0.5" />
				<GradientStop Color="#BEE6FD"
                      Offset="0.5" />
				<GradientStop Color="#BEE6FD"
                      Offset="1" />
			</LinearGradientBrush.GradientStops>
		</LinearGradientBrush>
		<!-- HeaderMouseHoverBrush -->
		<LinearGradientBrush EndPoint="0,1"
                         x:Key="HeaderMouseHoverBrush"
                         StartPoint="0,0">
			<LinearGradientBrush.GradientStops>
				<GradientStop Color="#DFE2E4"
                      Offset="0" />
				<GradientStop Color="#BCC5D2"
                      Offset="1" />
			</LinearGradientBrush.GradientStops>
		</LinearGradientBrush>
		<!-- ChangeUpBrush -->
		<LinearGradientBrush EndPoint="0,1"
                         x:Key="ChangeUpBrush"
                         StartPoint="0,0">
			<LinearGradientBrush.GradientStops>
				<GradientStop Color="#00FF00"
                      Offset="0" />
				<GradientStop Color="#00C000"
                      Offset="1" />
			</LinearGradientBrush.GradientStops>
		</LinearGradientBrush>
		<!-- ChangeDownBrush -->
		<LinearGradientBrush EndPoint="0,1"
                         x:Key="ChangeDownBrush"
                         StartPoint="0,0">
			<LinearGradientBrush.GradientStops>
				<GradientStop Color="#FF0000"
                      Offset="0" />
				<GradientStop Color="#C00000"
                      Offset="1" />
			</LinearGradientBrush.GradientStops>
		</LinearGradientBrush>
		<!-- Selected Brush -->
		<SolidColorBrush Color="#59C2CBE5"
                     x:Key="SelectedBrush" />
		<!-- Styles -->
		<!-- CommonStyle -->
		<Style x:Key="CommonStyle">
			<Setter Property="TextElement.FontFamily"
              Value="Segoe UI" />
			<Setter Property="TextElement.FontSize"
              Value="12" />
			<Style.Triggers>
				<Trigger Property="DynamicReport.IsActive"
                 Value="false">
					<Setter Property="TextElement.Foreground"
                  Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
				</Trigger>
			</Style.Triggers>
		</Style>
		<!-- CellStyle -->
		<Style BasedOn="{StaticResource CommonStyle}"
           x:Key="CellStyle">
			<Setter Property="Control.IsTabStop"
              Value="false" />
			<Setter Property="Control.BorderThickness"
              Value="0,0,1,1" />
			<Setter Property="Control.BorderBrush"
              Value="#D0D7E5" />
			<Setter Property="Control.Padding"
              Value="1" />
		</Style>
		<!-- BodyCellStyle -->
		<Style BasedOn="{StaticResource CellStyle}"
           x:Key="BodyCellStyle">
			<Setter Property="Control.Background"
              Value="White" />
			<Style.Triggers>
				<Trigger Property="DynamicReport.IsEven"
                 Value="true">
					<Setter Property="Control.Background"
                  Value="Beige" />
				</Trigger>
			</Style.Triggers>
		</Style>
		<!-- BodyValueStyle -->
		<Style BasedOn="{StaticResource BodyCellStyle}"
           x:Key="BodyValueStyle"
           TargetType="{x:Type ValueBlock}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ValueBlock}">
						<UserControl Background="{TemplateBinding Background}"
                         BorderBrush="{TemplateBinding BorderBrush}"
                         BorderThickness="{TemplateBinding BorderThickness}"
                         x:Name="Frame">
							<Grid>
								<UserControl Background="{StaticResource SelectedBrush}"
                             x:Name="SelectedMask"
                             Opacity="0.0" />
								<UserControl Padding="{TemplateBinding Padding}">
									<TextBlock x:Name="TextBlock"
                             Text="{TemplateBinding Text}"
                             TextAlignment="{TemplateBinding TextAlignment}"
                             VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
								</UserControl>
							</Grid>
						</UserControl>
						<ControlTemplate.Triggers>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="DynamicReport.IsSelected"
                             Value="True" />
									<Condition Property="UIElement.IsKeyboardFocusWithin"
                             Value="False" />
								</MultiTrigger.Conditions>
								<Setter TargetName="SelectedMask"
                        Property="Opacity"
                        Value="1.0" />
							</MultiTrigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<!-- HeaderCellStyle -->
		<Style BasedOn="{StaticResource CellStyle}"
           x:Key="HeaderCellStyle"
           TargetType="{x:Type UserControl}">
			<Setter Property="Background">
				<Setter.Value>
					<LinearGradientBrush EndPoint="0.5,1"
                               StartPoint="0.5,0">
						<LinearGradientBrush.GradientStops>
							<GradientStop Color="#F9FCFD"
                            Offset="0" />
							<GradientStop Color="#D3DBE9"
                            Offset="1" />
						</LinearGradientBrush.GradientStops>
					</LinearGradientBrush>
				</Setter.Value>
			</Setter>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type UserControl}">
						<UserControl Background="{TemplateBinding Background}"
                         BorderBrush="{TemplateBinding BorderBrush}"
                         BorderThickness="{TemplateBinding BorderThickness}"
                         Name="Frame">
							<Grid>
								<UserControl Background="{StaticResource SelectedBrush}"
                             Name="SelectedMask"
                             Opacity="0.0" />
								<UserControl Background="{StaticResource HeaderMouseHoverBrush}"
                             Name="InputMask"
                             Opacity="0.0" />
								<UserControl Padding="{TemplateBinding Padding}">
									<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
								</UserControl>
							</Grid>
						</UserControl>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver"
                       Value="True">
								<Trigger.EnterActions>
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation Duration="0:0:0.1"
                                       Storyboard.TargetName="InputMask"
                                       Storyboard.TargetProperty="Opacity"
                                       To="1" />
										</Storyboard>
									</BeginStoryboard>
								</Trigger.EnterActions>
								<Trigger.ExitActions>
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation Duration="0:0:0.1"
                                       Storyboard.TargetName="InputMask"
                                       Storyboard.TargetProperty="Opacity"
                                       To="0.0" />
										</Storyboard>
									</BeginStoryboard>
								</Trigger.ExitActions>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Triggers>
				<Trigger Property="DynamicReport.IsSelected"
                 Value="true">
					<Setter Property="BorderBrush"
                  Value="White" />
					<Setter Property="Background"
                  Value="#F4CB7B" />
				</Trigger>
				<Trigger Property="DynamicReport.IsPopup"
                 Value="true">
					<Setter Property="Foreground"
                  Value="White" />
					<Setter Property="Background"
                  Value="Black" />
				</Trigger>
			</Style.Triggers>
		</Style>
		<!-- LeftTextStyle -->
		<Style BasedOn="{StaticResource BodyValueStyle}"
           x:Key="LeftTextStyle"
           TargetType="{x:Type ValueBlock}">
			<Setter Property="Format" Value="{}{0}" />
			<Setter Property="HorizontalContentAlignment" Value="Left" />
			<Setter Property="VerticalContentAlignment" Value="Center" />
		</Style>
		<Style BasedOn="{StaticResource BodyCellStyle}"
           x:Key="PriceStyle"
           TargetType="{x:Type ValueBlock}">
			<Setter Property="HorizontalContentAlignment" Value="Right" />
			<Setter Property="Format" Value="{}{0:#,##0.00;-#,##0.00;}" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ValueBlock}">
						<UserControl Background="{TemplateBinding Background}"
                         BorderBrush="{TemplateBinding BorderBrush}"
                         BorderThickness="{TemplateBinding BorderThickness}"
                         x:Name="Frame">
							<Grid>
								<UserControl Background="{StaticResource SelectedBrush}"
                             x:Name="SelectedMask"
                             Opacity="0.0" />
								<UserControl x:Name="ChangeMask"
                             Opacity="0.0" />
								<UserControl Padding="{TemplateBinding Padding}">
									<TextBlock x:Name="TextBlock"
                             Foreground="Black"
                             Text="{TemplateBinding Text}"
                             TextAlignment="{TemplateBinding TextAlignment}"
                             VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
								</UserControl>
							</Grid>
						</UserControl>
						<ControlTemplate.Triggers>
							<Trigger Property="DynamicReport.IsActive"
                       Value="false">
								<Setter TargetName="TextBlock"
                        Property="Foreground"
                        Value="Gray" />
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="DynamicReport.IsSelected"
                             Value="True" />
									<Condition Property="UIElement.IsKeyboardFocusWithin"
                             Value="False" />
								</MultiTrigger.Conditions>
								<Setter TargetName="SelectedMask"
                        Property="Opacity"
                        Value="1.0" />
							</MultiTrigger>
							<Trigger Property="IsUp"
                       Value="true">
								<Setter TargetName="ChangeMask"
                        Property="Background"
                        Value="{StaticResource ChangeUpBrush}" />
							</Trigger>
							<Trigger Property="IsDown"
                       Value="true">
								<Setter TargetName="ChangeMask"
                        Property="Background"
                        Value="{StaticResource ChangeDownBrush}" />
							</Trigger>
							<EventTrigger RoutedEvent="ValueBlock.Increase">
								<BeginStoryboard>
									<Storyboard Timeline.DesiredFrameRate="10">
										<DoubleAnimation Duration="0:0:10.0"
                                     Storyboard.TargetName="ChangeMask"
                                     Storyboard.TargetProperty="Opacity"
                                     From="0.60" />
										<ColorAnimation Duration="0:0:01.0"
                                    Storyboard.TargetName="TextBlock"
                                    Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)"
                                    From="White" />
									</Storyboard>
								</BeginStoryboard>
							</EventTrigger>
							<EventTrigger RoutedEvent="ValueBlock.Decrease">
								<BeginStoryboard>
									<Storyboard Timeline.DesiredFrameRate="10">
										<DoubleAnimation Duration="0:0:10.0"
                                     Storyboard.TargetName="ChangeMask"
                                     Storyboard.TargetProperty="Opacity"
                                     From="0.60" />
										<ColorAnimation Duration="0:0:01.0"
                                    Storyboard.TargetName="TextBlock"
                                    Storyboard.TargetProperty="Foreground.(SolidColorBrush.Color)"
                                    From="White" />
									</Storyboard>
								</BeginStoryboard>
							</EventTrigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="VerticalContentAlignment" Value="Center" />
		</Style>
		<!-- QuantityStyle -->
		<Style BasedOn="{StaticResource BodyValueStyle}"
           x:Key="QuantityStyle"
           TargetType="{x:Type ValueBlock}">
			<Setter Property="Format" Value="{}{0:#,##0}" />
			<Setter Property="HorizontalContentAlignment" Value="Right" />
			<Setter Property="VerticalContentAlignment" Value="Center" />
		</Style>
		<!-- Data Templates -->
		<!-- Accrued Interest Header Data Template -->
		<DataTemplate DataType="{x:Type mh:AccruedInterest}">
			<UserControl Style="{StaticResource HeaderCellStyle}">
				<TextBlock Style="{StaticResource CommonStyle}"
               TextAlignment="Left"
               VerticalAlignment="Top">
					Accrued<LineBreak/>Interest
				</TextBlock>
			</UserControl>
		</DataTemplate>
		<!-- Accrued Interest Data Template -->
		<DataTemplate DataType="{x:Type m:AccruedInterest}">
			<ValueBlock Content="{Binding Path=Text}"
              Style="{StaticResource PriceStyle}" />
		</DataTemplate>
		<!-- Broker Account Id Data Template -->
		<DataTemplate DataType="{x:Type mh:BrokerAccountId}">
			<UserControl Style="{StaticResource HeaderCellStyle}">
				<TextBlock Style="{StaticResource CommonStyle}"
               TextAlignment="Left"
               VerticalAlignment="Top">
					Broker<LineBreak/>Account
				</TextBlock>
			</UserControl>
		</DataTemplate>
		<!-- Broker Account Id Data Template -->
		<DataTemplate DataType="{x:Type m:BrokerAccountId}">
			<ValueBlock Content="{Binding Path=Text}"
              Style="{StaticResource LeftTextStyle}" />
		</DataTemplate>
		<!-- Commission Data Template -->
		<DataTemplate DataType="{x:Type mh:Commission}">
			<UserControl Style="{StaticResource HeaderCellStyle}">
				<TextBlock Style="{StaticResource CommonStyle}"
               TextAlignment="Left"
               VerticalAlignment="Top">
					Commission
				</TextBlock>
			</UserControl>
		</DataTemplate>
		<!-- Commission  Data Template -->
		<DataTemplate DataType="{x:Type m:Commission}">
			<ValueBlock Content="{Binding Path=Text}"
              Style="{StaticResource PriceStyle}" />
		</DataTemplate>
		<!-- CreatedTime Header Data Template -->
		<DataTemplate DataType="{x:Type mh:CreatedTime}">
			<UserControl Style="{StaticResource HeaderCellStyle}">
				<TextBlock Style="{StaticResource CommonStyle}"
               TextAlignment="Left"
               VerticalAlignment="Top">
					Executed<LineBreak/>Time
				</TextBlock>
			</UserControl>
		</DataTemplate>
		<!-- CreatedTime Data Template -->
		<DataTemplate DataType="{x:Type m:CreatedTime}">
			<ValueBlock Content="{Binding Path=Text}"
              Style="{StaticResource LeftTextStyle}" />
		</DataTemplate>
		<!-- DestinationStateCode Header Data Template -->
		<DataTemplate DataType="{x:Type mh:DestinationStateCode}">
			<UserControl Style="{StaticResource HeaderCellStyle}">
				<TextBlock Style="{StaticResource CommonStyle}"
               TextAlignment="Left"
               VerticalAlignment="Top">
					Status
				</TextBlock>
			</UserControl>
		</DataTemplate>
		<!-- DestinationStateCode Data Template -->
		<DataTemplate DataType="{x:Type m:DestinationStateCode}">
			<ValueBlock Content="{Binding Path=Text}"
              Style="{StaticResource LeftTextStyle}" />
		</DataTemplate>
		<!-- ExecutionPrice Header Data Template -->
		<DataTemplate DataType="{x:Type mh:ExecutionPrice}">
			<UserControl Style="{StaticResource HeaderCellStyle}">
				<TextBlock Style="{StaticResource CommonStyle}"
               TextAlignment="Left"
               VerticalAlignment="Top">
					Execution<LineBreak/>Price
				</TextBlock>
			</UserControl>
		</DataTemplate>
		<!-- ExecutionPrice Data Template -->
		<DataTemplate DataType="{x:Type m:ExecutionPrice}">
			<ValueBlock Content="{Binding Path=Text}"
              Style="{StaticResource PriceStyle}" />
		</DataTemplate>
		<!-- ExecutionQuantity Header Data Template -->
		<DataTemplate DataType="{x:Type mh:ExecutionQuantity}">
			<UserControl Style="{StaticResource HeaderCellStyle}">
				<TextBlock Style="{StaticResource CommonStyle}"
               TextAlignment="Left"
               VerticalAlignment="Top">
					Execution<LineBreak/>Quantity
				</TextBlock>
			</UserControl>
		</DataTemplate>
		<!-- ExecutionQuantity Data Template -->
		<DataTemplate DataType="{x:Type m:ExecutionQuantity}">
			<ValueBlock Content="{Binding Path=Text}"
              Style="{StaticResource QuantityStyle}" />
		</DataTemplate>
		<!-- FixMessageId Header Data Template -->
		<DataTemplate DataType="{x:Type mh:FixMessageId}">
			<UserControl Style="{StaticResource HeaderCellStyle}">
				<TextBlock Style="{StaticResource CommonStyle}"
               TextAlignment="Left"
               VerticalAlignment="Top">
					Fix<LineBreak/>Message
				</TextBlock>
			</UserControl>
		</DataTemplate>
		<!-- FixMessageId Data Template -->
		<DataTemplate DataType="{x:Type m:FixMessageId}">
			<ValueBlock Content="{Binding Path=Text}"
              Style="{StaticResource LeftTextStyle}" />
		</DataTemplate>
		<!-- IsHidden Header Data Template -->
		<DataTemplate DataType="{x:Type mh:IsHidden}">
			<UserControl Style="{StaticResource HeaderCellStyle}">
				<TextBlock Style="{StaticResource CommonStyle}"
               TextAlignment="Left"
               VerticalAlignment="Top">
					IsHidden
				</TextBlock>
			</UserControl>
		</DataTemplate>
		<!-- IsHidden Data Template -->
		<DataTemplate DataType="{x:Type m:IsHidden}">
			<ValueBlock Content="{Binding Path=Text}"
              Style="{StaticResource LeftTextStyle}" />
		</DataTemplate>
		<!-- ModifiedTime Header Data Template -->
		<DataTemplate DataType="{x:Type mh:ModifiedTime}">
			<UserControl Style="{StaticResource HeaderCellStyle}">
				<TextBlock Style="{StaticResource CommonStyle}"
               TextAlignment="Left"
               VerticalAlignment="Top">
					Modified<LineBreak/>Time
				</TextBlock>
			</UserControl>
		</DataTemplate>
		<!-- ModifiedTime Data Template -->
		<DataTemplate DataType="{x:Type m:ModifiedTime}">
			<ValueBlock Content="{Binding Path=Text}"
              Style="{StaticResource LeftTextStyle}" />
		</DataTemplate>
		<!-- ModifiedUserId Header Data Template -->
		<DataTemplate DataType="{x:Type mh:ModifiedUserId}">
			<UserControl Style="{StaticResource HeaderCellStyle}">
				<TextBlock Style="{StaticResource CommonStyle}"
               TextAlignment="Left"
               VerticalAlignment="Top">
					Modified<LineBreak/>by
				</TextBlock>
			</UserControl>
		</DataTemplate>
		<!-- ModifiedUserId Data Template -->
		<DataTemplate DataType="{x:Type m:ModifiedUserId}">
			<ValueBlock Content="{Binding Path=Text}"
              Style="{StaticResource LeftTextStyle}" />
		</DataTemplate>
		<!-- OriginalPrice Header Data Template -->
		<DataTemplate DataType="{x:Type mh:OriginalPrice}">
			<UserControl Style="{StaticResource HeaderCellStyle}">
				<TextBlock Style="{StaticResource CommonStyle}"
               TextAlignment="Left"
               VerticalAlignment="Top">
					Original<LineBreak/>Price
				</TextBlock>
			</UserControl>
		</DataTemplate>
		<!-- OriginalPrice Data Template -->
		<DataTemplate DataType="{x:Type m:OriginalPrice}">
			<ValueBlock Content="{Binding Path=Text}"
              Style="{StaticResource PriceStyle}" />
		</DataTemplate>
		<!-- OriginalQuantity Header Data Template -->
		<DataTemplate DataType="{x:Type mh:OriginalQuantity}">
			<UserControl Style="{StaticResource HeaderCellStyle}">
				<TextBlock Style="{StaticResource CommonStyle}"
               TextAlignment="Left"
               VerticalAlignment="Top">
					Original<LineBreak/>Quantity
				</TextBlock>
			</UserControl>
		</DataTemplate>
		<!-- OriginalQuantity Data Template -->
		<DataTemplate DataType="{x:Type m:OriginalQuantity}">
			<ValueBlock Content="{Binding Path=Text}"
              Style="{StaticResource QuantityStyle}" />
		</DataTemplate>
		<!-- SourceStateCode Header Data Template -->
		<DataTemplate DataType="{x:Type mh:SourceStateCode}">
			<UserControl Style="{StaticResource HeaderCellStyle}">
				<TextBlock Style="{StaticResource CommonStyle}"
               TextAlignment="Left"
               VerticalAlignment="Top">
					Source
				</TextBlock>
			</UserControl>
		</DataTemplate>
		<!-- SourceStateCode Data Template -->
		<DataTemplate DataType="{x:Type m:SourceStateCode}">
			<ValueBlock Content="{Binding Path=Text}"
              Style="{StaticResource LeftTextStyle}" />
		</DataTemplate>
		<!-- UserFee0 Header Data Template -->
		<DataTemplate DataType="{x:Type mh:UserFee0}">
			<UserControl Style="{StaticResource HeaderCellStyle}">
				<TextBlock Style="{StaticResource CommonStyle}"
               TextAlignment="Left"
               VerticalAlignment="Top">
					UserFee
				</TextBlock>
			</UserControl>
		</DataTemplate>
		<!-- UserFee0 Data Template -->
		<DataTemplate DataType="{x:Type m:UserFee0}">
			<ValueBlock Content="{Binding Path=Text}"
              Style="{StaticResource PriceStyle}" />
		</DataTemplate>
		<!-- UserFee1 Header Data Template -->
		<DataTemplate DataType="{x:Type mh:UserFee1}">
			<UserControl Style="{StaticResource HeaderCellStyle}">
				<TextBlock Style="{StaticResource CommonStyle}"
               TextAlignment="Left"
               VerticalAlignment="Top">
					UserFee1
				</TextBlock>
			</UserControl>
		</DataTemplate>
		<!-- UserFee1 Data Template -->
		<DataTemplate DataType="{x:Type m:UserFee1}">
			<ValueBlock Content="{Binding Path=Text}"
              Style="{StaticResource PriceStyle}" />
		</DataTemplate>
		<!-- UserFee2 Header Data Template -->
		<DataTemplate DataType="{x:Type mh:UserFee2}">
			<UserControl Style="{StaticResource HeaderCellStyle}">
				<TextBlock Style="{StaticResource CommonStyle}"
               TextAlignment="Left"
               VerticalAlignment="Top">
					UserFee2
				</TextBlock>
			</UserControl>
		</DataTemplate>
		<!-- UserFee2 Data Template -->
		<DataTemplate DataType="{x:Type m:UserFee2}">
			<ValueBlock Content="{Binding Path=Text}"
              Style="{StaticResource PriceStyle}" />
		</DataTemplate>
		<!-- UserFee3 Header Data Template -->
		<DataTemplate DataType="{x:Type mh:UserFee3}">
			<UserControl Style="{StaticResource HeaderCellStyle}">
				<TextBlock Style="{StaticResource CommonStyle}"
               TextAlignment="Left"
               VerticalAlignment="Top">
					UserFee3
				</TextBlock>
			</UserControl>
		</DataTemplate>
		<!-- UserFee3 Data Template -->
		<DataTemplate DataType="{x:Type m:UserFee3}">
			<ValueBlock Content="{Binding Path=Text}"
              Style="{StaticResource PriceStyle}" />
		</DataTemplate>
	</ReportGrid.Resources>
	<!-- Fields -->
	<ReportGrid.Fields>
		<ReportField ColumnId="AccruedInterestColumn"
                 Description="AccruedInterest"
                 Width="60">
			<x:Type TypeName="mh:AccruedInterest" />
			<x:Type TypeName="m:AccruedInterest" />
		</ReportField>	
		<ReportField ColumnId="BrokerAccountIdColumn"
                 Description="BrokerAccountId"
                 Width="80">
			<x:Type TypeName="mh:BrokerAccountId" />
			<x:Type TypeName="m:BrokerAccountId" />
		</ReportField>
		<ReportField ColumnId="CommissionColumn"
                 Description="Commission"
                 Width="70">
			<x:Type TypeName="mh:Commission" />
			<x:Type TypeName="m:Commission" />
		</ReportField>
		<ReportField ColumnId="CreatedTimeColumn"
                 Description="Execution Time"
                 Width="140">
			<x:Type TypeName="mh:CreatedTime" />
			<x:Type TypeName="m:CreatedTime" />
		</ReportField>
		<ReportField ColumnId="CreatedUserIdColumn"
                 Description="CreatedUserId"
                 Width="80">
			<x:Type TypeName="mh:CreatedUserId" />
			<x:Type TypeName="m:CreatedUserId" />
		</ReportField>
		<ReportField ColumnId="DestinationOrderIdColumn"
                 Description="DestinationOrderId"
                 Width="80">
			<x:Type TypeName="mh:DestinationOrderId" />
			<x:Type TypeName="m:DestinationOrderId" />
		</ReportField>
			<ReportField ColumnId="DestinationStateCodeColumn"
                 Description="Status"
                 Width="90">
			<x:Type TypeName="mh:DestinationStateCode" />
			<x:Type TypeName="m:DestinationStateCode" />
		</ReportField>
		<ReportField ColumnId="ExecutionPriceColumn"
                 Description="ExecutionPrice"
                 Width="60">
			<x:Type TypeName="mh:ExecutionPrice" />
			<x:Type TypeName="m:ExecutionPrice" />
		</ReportField>
		<ReportField ColumnId="ExecutionQuantityColumn"
                 Description="ExecutionQuantity"
                 Width="80">
			<x:Type TypeName="mh:ExecutionQuantity" />
			<x:Type TypeName="m:ExecutionQuantity" />
		</ReportField>
		<ReportField ColumnId="FixMessageIdColumn"
                 Description="FixMessageId"
                 Width="80">
			<x:Type TypeName="mh:FixMessageId" />
			<x:Type TypeName="m:FixMessageId" />
		</ReportField>
		<ReportField ColumnId="IsHiddenColumn"
                 Description="IsHidden"
                 Width="80">
			<x:Type TypeName="mh:IsHidden" />
			<x:Type TypeName="m:IsHidden" />
		</ReportField>
		<ReportField ColumnId="ModifiedTimeColumn"
                 Description="ModifiedTime"
                 Width="80">
			<x:Type TypeName="mh:ModifiedTime" />
			<x:Type TypeName="m:ModifiedTime" />
		</ReportField>
		<ReportField ColumnId="ModifiedUserIdColumn"
                 Description="ModifiedUserId"
                 Width="80">
			<x:Type TypeName="mh:ModifiedUserId" />
			<x:Type TypeName="m:ModifiedUserId" />
		</ReportField>
		<ReportField ColumnId="OriginalPriceColumn"
                 Description="OriginalPrice"
                 Width="60">
			<x:Type TypeName="mh:OriginalPrice" />
			<x:Type TypeName="m:OriginalPrice" />
		</ReportField>
		<ReportField ColumnId="OriginalQuantityColumn"
                 Description="OriginalQuantity"
                 Width="60">
			<x:Type TypeName="mh:OriginalQuantity" />
			<x:Type TypeName="m:OriginalQuantity" />
		</ReportField>
		<ReportField ColumnId="SourceStateCodeColumn"
                 Description="SourceStateCode"
                 Width="80">
			<x:Type TypeName="mh:SourceStateCode" />
			<x:Type TypeName="m:SourceStateCode" />
		</ReportField>
		<ReportField ColumnId="UserFee0Column"
                 Description="UserFee0"
                 Width="60">
			<x:Type TypeName="mh:UserFee0" />
			<x:Type TypeName="m:UserFee0" />
		</ReportField>
		<ReportField ColumnId="UserFee1Column"
                 Description="UserFee1"
                 Width="60">
			<x:Type TypeName="mh:UserFee1" />
			<x:Type TypeName="m:UserFee1" />
		</ReportField>
		<ReportField ColumnId="UserFee2Column"
                 Description="UserFee2"
                 Width="60">
			<x:Type TypeName="mh:UserFee2" />
			<x:Type TypeName="m:UserFee2" />
		</ReportField>
		<ReportField ColumnId="UserFee3Column"
                 Description="UserFee3"
                 Width="60">
			<x:Type TypeName="mh:UserFee3" />
			<x:Type TypeName="m:UserFee3" />
		</ReportField>
	</ReportGrid.Fields>
	<!-- Visible Columns -->
	<ReportGrid.Columns>
		<ReportColumn ColumnId="DestinationStateCodeColumn"/>
		<ReportColumn ColumnId="CreatedTimeColumn"/>
		<ReportColumn ColumnId="AccruedInterestColumn" />
		<ReportColumn ColumnId="CommissionColumn"/>
		<ReportColumn ColumnId="ExecutionPriceColumn"/>
		<ReportColumn ColumnId="ExecutionQuantityColumn"/>
		<ReportColumn ColumnId="IsHiddenColumn"/>
		<ReportColumn ColumnId="OriginalPriceColumn"/>
		<ReportColumn ColumnId="OriginalQuantityColumn"/>
		<ReportColumn ColumnId="UserFee0Column"/>
		<ReportColumn ColumnId="UserFee1Column"/>
		<ReportColumn ColumnId="UserFee2Column"/>
		<ReportColumn ColumnId="UserFee3Column"/>
	</ReportGrid.Columns>
	<!-- Rows Templates -->
	<ReportGrid.RowTemplates>
		<RowTemplate Height="37">
			<RowTemplate Height="20"
                   Path="ExecutionList" />
		</RowTemplate>
	</ReportGrid.RowTemplates>
</ReportGrid>