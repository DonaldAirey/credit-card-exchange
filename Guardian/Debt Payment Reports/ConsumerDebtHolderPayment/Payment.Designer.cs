//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3074
//  f
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Windows.Markup.XmlnsDefinitionAttribute("urn:schemas-fluidtrade-com:guardian:debt-holder-payment-summary", "FluidTrade.Guardian.Schema.DebtHolderPaymentSummary")]

namespace FluidTrade.Guardian.Schema.DebtHolderPaymentSummary
{
	
	
	/// <summary>
	/// This class provides the ActiveFlag data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class ActiveFlag : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool active;
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ActiveFlag, FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ActiveFlag> selectSelf;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static ActiveFlag()
		{
			FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ActiveFlag.selectSelf = new System.Func<FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ActiveFlag, FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ActiveFlag>(FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ActiveFlag.SelectFromSelf);
		}
		
		/// <summary>
		/// Active
		/// </summary>
		public bool Active
		{
			get
			{
				return this.active;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ActiveFlag records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ActiveFlag, FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ActiveFlag> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ActiveFlag.selectSelf;
			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ActiveFlag to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ActiveFlag activeFlag = ((FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ActiveFlag)(iContent));
			if ((this.isActive != activeFlag.isActive))
			{
				this.isActive = activeFlag.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.active != activeFlag.active))
			{
				this.active = activeFlag.active;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Active"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ActiveFlag SelectFromSelf(FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ActiveFlag activeFlag)
		{
			return activeFlag;
		}
	}
	
	/// <summary>
	/// This class provides the ActualPaymentDate data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class ActualPaymentDate : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ActualPaymentDate, FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ActualPaymentDate> selectSelf;
		
		internal string text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static ActualPaymentDate()
		{
			FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ActualPaymentDate.selectSelf = new System.Func<FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ActualPaymentDate, FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ActualPaymentDate>(FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ActualPaymentDate.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ActualPaymentDate records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ActualPaymentDate, FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ActualPaymentDate> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ActualPaymentDate.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public string Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ActualPaymentDate to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ActualPaymentDate actualPaymentDate = ((FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ActualPaymentDate)(iContent));
			if ((this.isActive != actualPaymentDate.isActive))
			{
				this.isActive = actualPaymentDate.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != actualPaymentDate.text))
			{
				this.text = actualPaymentDate.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ActualPaymentDate SelectFromSelf(FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ActualPaymentDate actualPaymentDate)
		{
			return actualPaymentDate;
		}
	}
	
	/// <summary>
	/// This class provides the ActualPaymentValue data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class ActualPaymentValue : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ActualPaymentValue, FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ActualPaymentValue> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static ActualPaymentValue()
		{
			FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ActualPaymentValue.selectSelf = new System.Func<FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ActualPaymentValue, FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ActualPaymentValue>(FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ActualPaymentValue.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ActualPaymentValue records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ActualPaymentValue, FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ActualPaymentValue> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ActualPaymentValue.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ActualPaymentValue to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ActualPaymentValue actualPaymentValue = ((FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ActualPaymentValue)(iContent));
			if ((this.isActive != actualPaymentValue.isActive))
			{
				this.isActive = actualPaymentValue.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != actualPaymentValue.text))
			{
				this.text = actualPaymentValue.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ActualPaymentValue SelectFromSelf(FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ActualPaymentValue actualPaymentValue)
		{
			return actualPaymentValue;
		}
	}
	
	/// <summary>
	/// This class provides the CheckId data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class CheckId : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.CheckId, FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.CheckId> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static CheckId()
		{
			FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.CheckId.selectSelf = new System.Func<FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.CheckId, FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.CheckId>(FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.CheckId.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.CheckId records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.CheckId, FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.CheckId> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.CheckId.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.CheckId to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.CheckId checkId = ((FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.CheckId)(iContent));
			if ((this.isActive != checkId.isActive))
			{
				this.isActive = checkId.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != checkId.text))
			{
				this.text = checkId.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.CheckId SelectFromSelf(FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.CheckId checkId)
		{
			return checkId;
		}
	}
	
	/// <summary>
	/// This class provides the ClearedDate data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class ClearedDate : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ClearedDate, FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ClearedDate> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static ClearedDate()
		{
			FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ClearedDate.selectSelf = new System.Func<FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ClearedDate, FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ClearedDate>(FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ClearedDate.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ClearedDate records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ClearedDate, FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ClearedDate> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ClearedDate.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ClearedDate to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ClearedDate clearedDate = ((FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ClearedDate)(iContent));
			if ((this.isActive != clearedDate.isActive))
			{
				this.isActive = clearedDate.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != clearedDate.text))
			{
				this.text = clearedDate.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ClearedDate SelectFromSelf(FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ClearedDate clearedDate)
		{
			return clearedDate;
		}
	}
	
	/// <summary>
	/// This class provides the CreatedDateTime data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class CreatedDateTime : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.CreatedDateTime, FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.CreatedDateTime> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static CreatedDateTime()
		{
			FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.CreatedDateTime.selectSelf = new System.Func<FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.CreatedDateTime, FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.CreatedDateTime>(FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.CreatedDateTime.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.CreatedDateTime records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.CreatedDateTime, FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.CreatedDateTime> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.CreatedDateTime.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.CreatedDateTime to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.CreatedDateTime createdDateTime = ((FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.CreatedDateTime)(iContent));
			if ((this.isActive != createdDateTime.isActive))
			{
				this.isActive = createdDateTime.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != createdDateTime.text))
			{
				this.text = createdDateTime.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.CreatedDateTime SelectFromSelf(FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.CreatedDateTime createdDateTime)
		{
			return createdDateTime;
		}
	}
	
	/// <summary>
	/// This class provides the CreatedUserId data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class CreatedUserId : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		internal string name;
		
		private static System.Func<FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.CreatedUserId, FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.CreatedUserId> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static CreatedUserId()
		{
			FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.CreatedUserId.selectSelf = new System.Func<FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.CreatedUserId, FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.CreatedUserId>(FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.CreatedUserId.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Name
		/// </summary>
		public string Name
		{
			get
			{
				return this.name;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.CreatedUserId records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.CreatedUserId, FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.CreatedUserId> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.CreatedUserId.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.CreatedUserId to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.CreatedUserId createdUserId = ((FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.CreatedUserId)(iContent));
			if ((this.isActive != createdUserId.isActive))
			{
				this.isActive = createdUserId.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != createdUserId.text))
			{
				this.text = createdUserId.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
			if ((this.name != createdUserId.name))
			{
				this.name = createdUserId.name;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Name"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.CreatedUserId SelectFromSelf(FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.CreatedUserId createdUserId)
		{
			return createdUserId;
		}
	}
	
	/// <summary>
	/// This class provides the EffectivePaymentDate data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class EffectivePaymentDate : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.EffectivePaymentDate, FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.EffectivePaymentDate> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static EffectivePaymentDate()
		{
			FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.EffectivePaymentDate.selectSelf = new System.Func<FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.EffectivePaymentDate, FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.EffectivePaymentDate>(FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.EffectivePaymentDate.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.EffectivePaymentDate records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.EffectivePaymentDate, FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.EffectivePaymentDate> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.EffectivePaymentDate.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.EffectivePaymentDate to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.EffectivePaymentDate effectivePaymentDate = ((FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.EffectivePaymentDate)(iContent));
			if ((this.isActive != effectivePaymentDate.isActive))
			{
				this.isActive = effectivePaymentDate.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != effectivePaymentDate.text))
			{
				this.text = effectivePaymentDate.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.EffectivePaymentDate SelectFromSelf(FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.EffectivePaymentDate effectivePaymentDate)
		{
			return effectivePaymentDate;
		}
	}
	
	/// <summary>
	/// This class provides the EffectivePaymentValue data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class EffectivePaymentValue : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.EffectivePaymentValue, FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.EffectivePaymentValue> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static EffectivePaymentValue()
		{
			FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.EffectivePaymentValue.selectSelf = new System.Func<FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.EffectivePaymentValue, FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.EffectivePaymentValue>(FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.EffectivePaymentValue.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.EffectivePaymentValue records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.EffectivePaymentValue, FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.EffectivePaymentValue> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.EffectivePaymentValue.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.EffectivePaymentValue to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.EffectivePaymentValue effectivePaymentValue = ((FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.EffectivePaymentValue)(iContent));
			if ((this.isActive != effectivePaymentValue.isActive))
			{
				this.isActive = effectivePaymentValue.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != effectivePaymentValue.text))
			{
				this.text = effectivePaymentValue.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.EffectivePaymentValue SelectFromSelf(FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.EffectivePaymentValue effectivePaymentValue)
		{
			return effectivePaymentValue;
		}
	}
	
	/// <summary>
	/// This class provides the Fee0 data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class Fee0 : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Fee0, FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Fee0> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static Fee0()
		{
			FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Fee0.selectSelf = new System.Func<FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Fee0, FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Fee0>(FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Fee0.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Fee0 records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Fee0, FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Fee0> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Fee0.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Fee0 to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Fee0 fee0 = ((FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Fee0)(iContent));
			if ((this.isActive != fee0.isActive))
			{
				this.isActive = fee0.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != fee0.text))
			{
				this.text = fee0.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Fee0 SelectFromSelf(FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Fee0 fee0)
		{
			return fee0;
		}
	}
	
	/// <summary>
	/// This class provides the IsCleared data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class IsCleared : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool cleared;
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.IsCleared, FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.IsCleared> selectSelf;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static IsCleared()
		{
			FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.IsCleared.selectSelf = new System.Func<FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.IsCleared, FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.IsCleared>(FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.IsCleared.SelectFromSelf);
		}
		
		/// <summary>
		/// Cleared
		/// </summary>
		public bool Cleared
		{
			get
			{
				return this.cleared;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.IsCleared records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.IsCleared, FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.IsCleared> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.IsCleared.selectSelf;
			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.IsCleared to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.IsCleared isCleared = ((FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.IsCleared)(iContent));
			if ((this.isActive != isCleared.isActive))
			{
				this.isActive = isCleared.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.cleared != isCleared.cleared))
			{
				this.cleared = isCleared.cleared;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Cleared"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.IsCleared SelectFromSelf(FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.IsCleared isCleared)
		{
			return isCleared;
		}
	}
	
	/// <summary>
	/// This class provides the Memo0 data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class Memo0 : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Memo0, FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Memo0> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static Memo0()
		{
			FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Memo0.selectSelf = new System.Func<FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Memo0, FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Memo0>(FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Memo0.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Memo0 records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Memo0, FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Memo0> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Memo0.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Memo0 to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Memo0 memo0 = ((FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Memo0)(iContent));
			if ((this.isActive != memo0.isActive))
			{
				this.isActive = memo0.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != memo0.text))
			{
				this.text = memo0.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Memo0 SelectFromSelf(FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Memo0 memo0)
		{
			return memo0;
		}
	}
	
	/// <summary>
	/// This class provides the Memo1 data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class Memo1 : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Memo1, FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Memo1> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static Memo1()
		{
			FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Memo1.selectSelf = new System.Func<FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Memo1, FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Memo1>(FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Memo1.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Memo1 records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Memo1, FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Memo1> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Memo1.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Memo1 to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Memo1 memo1 = ((FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Memo1)(iContent));
			if ((this.isActive != memo1.isActive))
			{
				this.isActive = memo1.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != memo1.text))
			{
				this.text = memo1.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Memo1 SelectFromSelf(FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Memo1 memo1)
		{
			return memo1;
		}
	}
	
	/// <summary>
	/// This class provides the Memo2 data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class Memo2 : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Memo2, FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Memo2> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static Memo2()
		{
			FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Memo2.selectSelf = new System.Func<FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Memo2, FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Memo2>(FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Memo2.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Memo2 records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Memo2, FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Memo2> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Memo2.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Memo2 to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Memo2 memo2 = ((FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Memo2)(iContent));
			if ((this.isActive != memo2.isActive))
			{
				this.isActive = memo2.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != memo2.text))
			{
				this.text = memo2.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Memo2 SelectFromSelf(FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Memo2 memo2)
		{
			return memo2;
		}
	}
	
	/// <summary>
	/// This class provides the ModifiedDateTime data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class ModifiedDateTime : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ModifiedDateTime, FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ModifiedDateTime> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static ModifiedDateTime()
		{
			FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ModifiedDateTime.selectSelf = new System.Func<FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ModifiedDateTime, FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ModifiedDateTime>(FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ModifiedDateTime.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ModifiedDateTime records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ModifiedDateTime, FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ModifiedDateTime> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ModifiedDateTime.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ModifiedDateTime to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ModifiedDateTime modifiedDateTime = ((FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ModifiedDateTime)(iContent));
			if ((this.isActive != modifiedDateTime.isActive))
			{
				this.isActive = modifiedDateTime.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != modifiedDateTime.text))
			{
				this.text = modifiedDateTime.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ModifiedDateTime SelectFromSelf(FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ModifiedDateTime modifiedDateTime)
		{
			return modifiedDateTime;
		}
	}
	
	/// <summary>
	/// This class provides the ModifiedUserId data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class ModifiedUserId : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		internal string name;
		
		private static System.Func<FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ModifiedUserId, FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ModifiedUserId> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static ModifiedUserId()
		{
			FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ModifiedUserId.selectSelf = new System.Func<FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ModifiedUserId, FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ModifiedUserId>(FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ModifiedUserId.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Name
		/// </summary>
		public string Name
		{
			get
			{
				return this.name;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ModifiedUserId records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ModifiedUserId, FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ModifiedUserId> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ModifiedUserId.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ModifiedUserId to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ModifiedUserId modifiedUserId = ((FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ModifiedUserId)(iContent));
			if ((this.isActive != modifiedUserId.isActive))
			{
				this.isActive = modifiedUserId.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.name != modifiedUserId.name))
			{
				this.name = modifiedUserId.name;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Name"));
				}
			}
			if ((this.text != modifiedUserId.text))
			{
				this.text = modifiedUserId.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ModifiedUserId SelectFromSelf(FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ModifiedUserId modifiedUserId)
		{
			return modifiedUserId;
		}
	}
	
	/// <summary>
	/// This class provides the SelectRow data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class SelectRow : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		internal string name;
		
		private static System.Func<FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.SelectRow, FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.SelectRow> selectSelf;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static SelectRow()
		{
			FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.SelectRow.selectSelf = new System.Func<FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.SelectRow, FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.SelectRow>(FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.SelectRow.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Name
		/// </summary>
		public string Name
		{
			get
			{
				return this.name;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.SelectRow records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.SelectRow, FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.SelectRow> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.SelectRow.selectSelf;
			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.SelectRow to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.SelectRow selectRow = ((FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.SelectRow)(iContent));
			if ((this.isActive != selectRow.isActive))
			{
				this.isActive = selectRow.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.name != selectRow.name))
			{
				this.name = selectRow.name;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Name"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.SelectRow SelectFromSelf(FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.SelectRow selectRow)
		{
			return selectRow;
		}
	}
	
	/// <summary>
	/// This class provides the StatusId data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class StatusId : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		internal string mnemonic;
		
		private static System.Func<FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.StatusId, FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.StatusId> selectSelf;
		
		internal FluidTrade.Guardian.Status statusCode;
		
		internal object statusIdEnum;
		
		internal string statusSortOrder;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static StatusId()
		{
			FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.StatusId.selectSelf = new System.Func<FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.StatusId, FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.StatusId>(FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.StatusId.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Mnemonic
		/// </summary>
		public string Mnemonic
		{
			get
			{
				return this.mnemonic;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.StatusId records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.StatusId, FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.StatusId> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.StatusId.selectSelf;
			}
		}
		
		/// <summary>
		/// StatusCode
		/// </summary>
		public FluidTrade.Guardian.Status StatusCode
		{
			get
			{
				return this.statusCode;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// StatusIdEnum
		/// </summary>
		public object StatusIdEnum
		{
			get
			{
				return this.statusIdEnum;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// StatusSortOrder
		/// </summary>
		public string StatusSortOrder
		{
			get
			{
				return this.statusSortOrder;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.StatusId to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.StatusId statusId = ((FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.StatusId)(iContent));
			if ((this.isActive != statusId.isActive))
			{
				this.isActive = statusId.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.statusIdEnum != statusId.statusIdEnum))
			{
				this.statusIdEnum = statusId.statusIdEnum;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("StatusIdEnum"));
				}
			}
			if ((this.mnemonic != statusId.mnemonic))
			{
				this.mnemonic = statusId.mnemonic;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Mnemonic"));
				}
			}
			if ((this.statusSortOrder != statusId.statusSortOrder))
			{
				this.statusSortOrder = statusId.statusSortOrder;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("StatusSortOrder"));
				}
			}
			if ((this.statusCode != statusId.statusCode))
			{
				this.statusCode = statusId.statusCode;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("StatusCode"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.StatusId SelectFromSelf(FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.StatusId statusId)
		{
			return statusId;
		}
	}
	
	/// <summary>
	/// This class provides the TrackingNumber data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class TrackingNumber : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.TrackingNumber, FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.TrackingNumber> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static TrackingNumber()
		{
			FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.TrackingNumber.selectSelf = new System.Func<FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.TrackingNumber, FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.TrackingNumber>(FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.TrackingNumber.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.TrackingNumber records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.TrackingNumber, FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.TrackingNumber> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.TrackingNumber.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.TrackingNumber to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.TrackingNumber trackingNumber = ((FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.TrackingNumber)(iContent));
			if ((this.isActive != trackingNumber.isActive))
			{
				this.isActive = trackingNumber.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != trackingNumber.text))
			{
				this.text = trackingNumber.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.TrackingNumber SelectFromSelf(FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.TrackingNumber trackingNumber)
		{
			return trackingNumber;
		}
	}
	
	/// <summary>
	/// This class provides the PaymentSummary data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class PaymentSummary : FluidTrade.Core.IContent
	{
		
		internal FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ActiveFlag activeFlag;
		
		internal FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ActualPaymentDate actualPaymentDate;
		
		internal FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ActualPaymentValue actualPaymentValue;
		
		internal FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.CheckId checkId;
		
		internal FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ClearedDate clearedDate;
		
		internal FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.CreatedDateTime createdDateTime;
		
		internal FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.CreatedUserId createdUserId;
		
		internal FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.EffectivePaymentDate effectivePaymentDate;
		
		internal FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.EffectivePaymentValue effectivePaymentValue;
		
		internal FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Fee0 fee0;
		
		internal FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.IsCleared isCleared;
		
		internal object key;
		
		internal FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Memo0 memo0;
		
		internal FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Memo1 memo1;
		
		internal FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Memo2 memo2;
		
		internal FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ModifiedDateTime modifiedDateTime;
		
		internal FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ModifiedUserId modifiedUserId;
		
		internal FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.SelectRow selectRow;
		
		private static System.Func<FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.PaymentSummary, FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.PaymentSummary> selectSelf;
		
		internal FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.StatusId statusId;
		
		internal FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.TrackingNumber trackingNumber;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static PaymentSummary()
		{
			FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.PaymentSummary.selectSelf = new System.Func<FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.PaymentSummary, FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.PaymentSummary>(FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.PaymentSummary.SelectFromSelf);
		}
		
		/// <summary>
		/// Creates a FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.PaymentSummary.
		/// </summary>
		public PaymentSummary()
		{
			this.activeFlag = new FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ActiveFlag();
			this.actualPaymentDate = new FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ActualPaymentDate();
			this.actualPaymentValue = new FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ActualPaymentValue();
			this.checkId = new FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.CheckId();
			this.clearedDate = new FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ClearedDate();
			this.createdDateTime = new FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.CreatedDateTime();
			this.createdUserId = new FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.CreatedUserId();
			this.effectivePaymentDate = new FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.EffectivePaymentDate();
			this.effectivePaymentValue = new FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.EffectivePaymentValue();
			this.fee0 = new FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Fee0();
			this.isCleared = new FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.IsCleared();
			this.memo0 = new FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Memo0();
			this.memo1 = new FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Memo1();
			this.memo2 = new FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Memo2();
			this.modifiedDateTime = new FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ModifiedDateTime();
			this.modifiedUserId = new FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ModifiedUserId();
			this.selectRow = new FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.SelectRow();
			this.statusId = new FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.StatusId();
			this.trackingNumber = new FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.TrackingNumber();
		}
		
		/// <summary>
		/// ActiveFlag
		/// </summary>
		public FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ActiveFlag ActiveFlag
		{
			get
			{
				return this.activeFlag;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// ActualPaymentDate
		/// </summary>
		public FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ActualPaymentDate ActualPaymentDate
		{
			get
			{
				return this.actualPaymentDate;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// ActualPaymentValue
		/// </summary>
		public FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ActualPaymentValue ActualPaymentValue
		{
			get
			{
				return this.actualPaymentValue;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// CheckId
		/// </summary>
		public FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.CheckId CheckId
		{
			get
			{
				return this.checkId;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// ClearedDate
		/// </summary>
		public FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ClearedDate ClearedDate
		{
			get
			{
				return this.clearedDate;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// CreatedDateTime
		/// </summary>
		public FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.CreatedDateTime CreatedDateTime
		{
			get
			{
				return this.createdDateTime;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// CreatedUserId
		/// </summary>
		public FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.CreatedUserId CreatedUserId
		{
			get
			{
				return this.createdUserId;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// EffectivePaymentDate
		/// </summary>
		public FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.EffectivePaymentDate EffectivePaymentDate
		{
			get
			{
				return this.effectivePaymentDate;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// EffectivePaymentValue
		/// </summary>
		public FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.EffectivePaymentValue EffectivePaymentValue
		{
			get
			{
				return this.effectivePaymentValue;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Fee0
		/// </summary>
		public FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Fee0 Fee0
		{
			get
			{
				return this.fee0;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// IsCleared
		/// </summary>
		public FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.IsCleared IsCleared
		{
			get
			{
				return this.isCleared;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Memo0
		/// </summary>
		public FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Memo0 Memo0
		{
			get
			{
				return this.memo0;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Memo1
		/// </summary>
		public FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Memo1 Memo1
		{
			get
			{
				return this.memo1;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Memo2
		/// </summary>
		public FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.Memo2 Memo2
		{
			get
			{
				return this.memo2;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// ModifiedDateTime
		/// </summary>
		public FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ModifiedDateTime ModifiedDateTime
		{
			get
			{
				return this.modifiedDateTime;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// ModifiedUserId
		/// </summary>
		public FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.ModifiedUserId ModifiedUserId
		{
			get
			{
				return this.modifiedUserId;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// SelectRow
		/// </summary>
		public FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.SelectRow SelectRow
		{
			get
			{
				return this.selectRow;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.PaymentSummary records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.PaymentSummary, FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.PaymentSummary> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.PaymentSummary.selectSelf;
			}
		}
		
		/// <summary>
		/// StatusId
		/// </summary>
		public FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.StatusId StatusId
		{
			get
			{
				return this.statusId;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// TrackingNumber
		/// </summary>
		public FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.TrackingNumber TrackingNumber
		{
			get
			{
				return this.trackingNumber;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.PaymentSummary to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.PaymentSummary paymentSummary = ((FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.PaymentSummary)(iContent));
			this.activeFlag.Copy(paymentSummary.activeFlag);
			this.actualPaymentDate.Copy(paymentSummary.actualPaymentDate);
			this.actualPaymentValue.Copy(paymentSummary.actualPaymentValue);
			this.checkId.Copy(paymentSummary.checkId);
			this.clearedDate.Copy(paymentSummary.clearedDate);
			this.createdDateTime.Copy(paymentSummary.createdDateTime);
			this.createdUserId.Copy(paymentSummary.createdUserId);
			this.effectivePaymentDate.Copy(paymentSummary.effectivePaymentDate);
			this.effectivePaymentValue.Copy(paymentSummary.effectivePaymentValue);
			this.fee0.Copy(paymentSummary.fee0);
			this.isCleared.Copy(paymentSummary.isCleared);
			this.memo0.Copy(paymentSummary.memo0);
			this.memo1.Copy(paymentSummary.memo1);
			this.memo2.Copy(paymentSummary.memo2);
			this.modifiedDateTime.Copy(paymentSummary.modifiedDateTime);
			this.modifiedUserId.Copy(paymentSummary.modifiedUserId);
			this.selectRow.Copy(paymentSummary.selectRow);
			this.statusId.Copy(paymentSummary.statusId);
			this.trackingNumber.Copy(paymentSummary.trackingNumber);
		}
		
		/// <summary>
		/// Creates a FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.PaymentSummary.
		/// </summary>
		public FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.PaymentSummary Select(FluidTrade.Guardian.ConsumerDebtPaymentRow paymentRow)
		{
			this.key = paymentRow;
			this.activeFlag.key = new FluidTrade.Core.DataTableCoordinate(paymentRow, DataModel.ConsumerDebtPayment.IsActiveColumn);
			this.activeFlag.isActive = !paymentRow.IsActive;
			this.actualPaymentDate.isActive = !paymentRow.IsActive;
			this.actualPaymentDate.key = new FluidTrade.Core.DataTableCoordinate(paymentRow, DataModel.ConsumerDebtPayment.ActualPaymentDateColumn);
			this.actualPaymentDate.text = paymentRow.IsActualPaymentDateNull() ? "" : paymentRow.ActualPaymentDate.ToString("d");
			this.actualPaymentValue.isActive = !paymentRow.IsActive;
			this.actualPaymentValue.key = new FluidTrade.Core.DataTableCoordinate(paymentRow, DataModel.ConsumerDebtPayment.ActualPaymentValueColumn);
			this.actualPaymentValue.text = paymentRow.IsActualPaymentValueNull() ? 0.0m :paymentRow.ActualPaymentValue;
			this.checkId.isActive = !paymentRow.IsActive;
			this.checkId.key = new FluidTrade.Core.DataTableCoordinate(paymentRow, DataModel.ConsumerDebtPayment.CheckIdColumn);
			this.checkId.text = paymentRow.IsCheckIdNull() ? "" : paymentRow.CheckId;
			this.clearedDate.isActive = !paymentRow.IsActive;
			this.clearedDate.key = new FluidTrade.Core.DataTableCoordinate(paymentRow, DataModel.ConsumerDebtPayment.ClearedDateColumn);
			this.clearedDate.text = paymentRow.ClearedDate;
			this.createdDateTime.isActive = !paymentRow.IsActive;
			this.createdDateTime.key = new FluidTrade.Core.DataTableCoordinate(paymentRow, DataModel.ConsumerDebtPayment.CreatedTimeColumn);
			this.createdDateTime.text = paymentRow.CreatedTime.ToLocalTime();
			this.createdUserId.isActive = !paymentRow.IsActive;
			this.createdUserId.key = new FluidTrade.Core.DataTableCoordinate(paymentRow, DataModel.ConsumerDebtPayment.CreatedUserIdColumn);
			this.createdUserId.name = DataModel.Entity.EntityKey.Find(paymentRow.CreatedUserId).Name;
			this.createdUserId.text = paymentRow.CreatedUserId;
			this.effectivePaymentDate.isActive = !paymentRow.IsActive;
			this.effectivePaymentDate.text = paymentRow.EffectivePaymentDate.ToLocalTime();
			this.effectivePaymentValue.isActive = !paymentRow.IsActive;
			this.effectivePaymentValue.text = paymentRow.EffectivePaymentValue;
			this.fee0.isActive = !paymentRow.IsActive;
			this.fee0.text = paymentRow.IsFee0Null() ? 0.0m : paymentRow.Fee0;
			this.isCleared.isActive = !paymentRow.IsActive;
			this.isCleared.key = new FluidTrade.Core.DataTableCoordinate(paymentRow, DataModel.ConsumerDebtPayment.IsClearedColumn);
			this.isCleared.cleared = paymentRow.IsCleared;
			this.memo0.isActive = !paymentRow.IsActive;
			this.memo0.key = new FluidTrade.Core.DataTableCoordinate(paymentRow, DataModel.ConsumerDebtPayment.Memo0Column);
			this.memo0.text = paymentRow.IsMemo0Null() ? "" : paymentRow.Memo0;
			this.memo1.isActive = !paymentRow.IsActive;
			this.memo1.key = new FluidTrade.Core.DataTableCoordinate(paymentRow, DataModel.ConsumerDebtPayment.Memo1Column);
			this.memo1.text = paymentRow.IsMemo1Null() ? "" : paymentRow.Memo1;
			this.memo2.isActive = !paymentRow.IsActive;
			this.memo2.key = new FluidTrade.Core.DataTableCoordinate(paymentRow, DataModel.ConsumerDebtPayment.Memo2Column);
			this.memo2.text = paymentRow.IsMemo2Null() ? "" : paymentRow.Memo2;
			this.modifiedDateTime.isActive = !paymentRow.IsActive;
			this.modifiedDateTime.key = new FluidTrade.Core.DataTableCoordinate(paymentRow, DataModel.ConsumerDebtPayment.ModifiedTimeColumn);
			this.modifiedDateTime.text = paymentRow.ModifiedTime.ToLocalTime();
			this.modifiedUserId.isActive = !paymentRow.IsActive;
			this.modifiedUserId.key = new FluidTrade.Core.DataTableCoordinate(paymentRow, DataModel.ConsumerDebtPayment.ModifiedUserIdColumn);
			this.modifiedUserId.name = DataModel.Entity.EntityKey.Find(paymentRow.ModifiedUserId).Name;
			this.modifiedUserId.text = paymentRow.ModifiedUserId;
			this.selectRow.isActive = !paymentRow.IsActive;
			this.statusId.isActive = !paymentRow.IsActive;
			this.statusId.key = new FluidTrade.Core.DataTableCoordinate(paymentRow, DataModel.ConsumerDebtPayment.StatusIdColumn);
			this.statusId.mnemonic = paymentRow.StatusRow.Mnemonic;
			this.statusId.statusSortOrder = paymentRow.StatusRow.SortOrder.ToString();
			this.statusId.statusCode = paymentRow.StatusRow.StatusCode;
			this.statusId.statusIdEnum = paymentRow.StatusId;
			this.trackingNumber.isActive = !paymentRow.IsActive;
			this.trackingNumber.key = new FluidTrade.Core.DataTableCoordinate(paymentRow, DataModel.ConsumerDebtPayment.TrackingNumberColumn);
			this.trackingNumber.text = paymentRow.IsTrackingNumberNull() ? "" : paymentRow.TrackingNumber;
			return this;
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.PaymentSummary SelectFromSelf(FluidTrade.Guardian.Schema.DebtHolderPaymentSummary.PaymentSummary paymentSummary)
		{
			return paymentSummary;
		}
	}
}
