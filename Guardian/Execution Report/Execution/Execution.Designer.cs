//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Windows.Markup.XmlnsDefinitionAttribute("urn:schemas-fluidtrade-com:guardian:execution", "FluidTrade.Guardian.Schema.Execution")]

namespace FluidTrade.Guardian.Schema.Execution
{
	
	
	/// <summary>
	/// This class provides the AccruedInterest data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class AccruedInterest : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.Execution.AccruedInterest, FluidTrade.Guardian.Schema.Execution.AccruedInterest> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static AccruedInterest()
		{
			FluidTrade.Guardian.Schema.Execution.AccruedInterest.selectSelf = new System.Func<FluidTrade.Guardian.Schema.Execution.AccruedInterest, FluidTrade.Guardian.Schema.Execution.AccruedInterest>(FluidTrade.Guardian.Schema.Execution.AccruedInterest.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.Execution.AccruedInterest records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.Execution.AccruedInterest, FluidTrade.Guardian.Schema.Execution.AccruedInterest> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.Execution.AccruedInterest.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.Execution.AccruedInterest to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.Execution.AccruedInterest accruedInterest = ((FluidTrade.Guardian.Schema.Execution.AccruedInterest)(iContent));
			if ((this.text != accruedInterest.text))
			{
				this.text = accruedInterest.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.Execution.AccruedInterest SelectFromSelf(FluidTrade.Guardian.Schema.Execution.AccruedInterest accruedInterest)
		{
			return accruedInterest;
		}
	}
	
	/// <summary>
	/// This class provides the BrokerAccountId data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class BrokerAccountId : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.Execution.BrokerAccountId, FluidTrade.Guardian.Schema.Execution.BrokerAccountId> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static BrokerAccountId()
		{
			FluidTrade.Guardian.Schema.Execution.BrokerAccountId.selectSelf = new System.Func<FluidTrade.Guardian.Schema.Execution.BrokerAccountId, FluidTrade.Guardian.Schema.Execution.BrokerAccountId>(FluidTrade.Guardian.Schema.Execution.BrokerAccountId.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.Execution.BrokerAccountId records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.Execution.BrokerAccountId, FluidTrade.Guardian.Schema.Execution.BrokerAccountId> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.Execution.BrokerAccountId.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.Execution.BrokerAccountId to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.Execution.BrokerAccountId brokerAccountId = ((FluidTrade.Guardian.Schema.Execution.BrokerAccountId)(iContent));
			if ((this.text != brokerAccountId.text))
			{
				this.text = brokerAccountId.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.Execution.BrokerAccountId SelectFromSelf(FluidTrade.Guardian.Schema.Execution.BrokerAccountId brokerAccountId)
		{
			return brokerAccountId;
		}
	}
	
	/// <summary>
	/// This class provides the Commission data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class Commission : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.Execution.Commission, FluidTrade.Guardian.Schema.Execution.Commission> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static Commission()
		{
			FluidTrade.Guardian.Schema.Execution.Commission.selectSelf = new System.Func<FluidTrade.Guardian.Schema.Execution.Commission, FluidTrade.Guardian.Schema.Execution.Commission>(FluidTrade.Guardian.Schema.Execution.Commission.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.Execution.Commission records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.Execution.Commission, FluidTrade.Guardian.Schema.Execution.Commission> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.Execution.Commission.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.Execution.Commission to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.Execution.Commission commission = ((FluidTrade.Guardian.Schema.Execution.Commission)(iContent));
			if ((this.text != commission.text))
			{
				this.text = commission.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.Execution.Commission SelectFromSelf(FluidTrade.Guardian.Schema.Execution.Commission commission)
		{
			return commission;
		}
	}
	
	/// <summary>
	/// This class provides the CreatedTime data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class CreatedTime : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.Execution.CreatedTime, FluidTrade.Guardian.Schema.Execution.CreatedTime> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static CreatedTime()
		{
			FluidTrade.Guardian.Schema.Execution.CreatedTime.selectSelf = new System.Func<FluidTrade.Guardian.Schema.Execution.CreatedTime, FluidTrade.Guardian.Schema.Execution.CreatedTime>(FluidTrade.Guardian.Schema.Execution.CreatedTime.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.Execution.CreatedTime records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.Execution.CreatedTime, FluidTrade.Guardian.Schema.Execution.CreatedTime> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.Execution.CreatedTime.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.Execution.CreatedTime to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.Execution.CreatedTime createdTime = ((FluidTrade.Guardian.Schema.Execution.CreatedTime)(iContent));
			if ((this.text != createdTime.text))
			{
				this.text = createdTime.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.Execution.CreatedTime SelectFromSelf(FluidTrade.Guardian.Schema.Execution.CreatedTime createdTime)
		{
			return createdTime;
		}
	}
	
	/// <summary>
	/// This class provides the CreatedUserId data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class CreatedUserId : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.Execution.CreatedUserId, FluidTrade.Guardian.Schema.Execution.CreatedUserId> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static CreatedUserId()
		{
			FluidTrade.Guardian.Schema.Execution.CreatedUserId.selectSelf = new System.Func<FluidTrade.Guardian.Schema.Execution.CreatedUserId, FluidTrade.Guardian.Schema.Execution.CreatedUserId>(FluidTrade.Guardian.Schema.Execution.CreatedUserId.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.Execution.CreatedUserId records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.Execution.CreatedUserId, FluidTrade.Guardian.Schema.Execution.CreatedUserId> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.Execution.CreatedUserId.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.Execution.CreatedUserId to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.Execution.CreatedUserId createdUserId = ((FluidTrade.Guardian.Schema.Execution.CreatedUserId)(iContent));
			if ((this.text != createdUserId.text))
			{
				this.text = createdUserId.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.Execution.CreatedUserId SelectFromSelf(FluidTrade.Guardian.Schema.Execution.CreatedUserId createdUserId)
		{
			return createdUserId;
		}
	}
	
	/// <summary>
	/// This class provides the DestinationOrderId data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class DestinationOrderId : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.Execution.DestinationOrderId, FluidTrade.Guardian.Schema.Execution.DestinationOrderId> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static DestinationOrderId()
		{
			FluidTrade.Guardian.Schema.Execution.DestinationOrderId.selectSelf = new System.Func<FluidTrade.Guardian.Schema.Execution.DestinationOrderId, FluidTrade.Guardian.Schema.Execution.DestinationOrderId>(FluidTrade.Guardian.Schema.Execution.DestinationOrderId.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.Execution.DestinationOrderId records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.Execution.DestinationOrderId, FluidTrade.Guardian.Schema.Execution.DestinationOrderId> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.Execution.DestinationOrderId.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.Execution.DestinationOrderId to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.Execution.DestinationOrderId destinationOrderId = ((FluidTrade.Guardian.Schema.Execution.DestinationOrderId)(iContent));
			if ((this.text != destinationOrderId.text))
			{
				this.text = destinationOrderId.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.Execution.DestinationOrderId SelectFromSelf(FluidTrade.Guardian.Schema.Execution.DestinationOrderId destinationOrderId)
		{
			return destinationOrderId;
		}
	}
	
	/// <summary>
	/// This class provides the DestinationStateCode data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class DestinationStateCode : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.Execution.DestinationStateCode, FluidTrade.Guardian.Schema.Execution.DestinationStateCode> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static DestinationStateCode()
		{
			FluidTrade.Guardian.Schema.Execution.DestinationStateCode.selectSelf = new System.Func<FluidTrade.Guardian.Schema.Execution.DestinationStateCode, FluidTrade.Guardian.Schema.Execution.DestinationStateCode>(FluidTrade.Guardian.Schema.Execution.DestinationStateCode.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.Execution.DestinationStateCode records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.Execution.DestinationStateCode, FluidTrade.Guardian.Schema.Execution.DestinationStateCode> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.Execution.DestinationStateCode.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.Execution.DestinationStateCode to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.Execution.DestinationStateCode destinationStateCode = ((FluidTrade.Guardian.Schema.Execution.DestinationStateCode)(iContent));
			if ((this.text != destinationStateCode.text))
			{
				this.text = destinationStateCode.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.Execution.DestinationStateCode SelectFromSelf(FluidTrade.Guardian.Schema.Execution.DestinationStateCode destinationStateCode)
		{
			return destinationStateCode;
		}
	}
	
	/// <summary>
	/// This class provides the ExecutionPrice data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class ExecutionPrice : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.Execution.ExecutionPrice, FluidTrade.Guardian.Schema.Execution.ExecutionPrice> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static ExecutionPrice()
		{
			FluidTrade.Guardian.Schema.Execution.ExecutionPrice.selectSelf = new System.Func<FluidTrade.Guardian.Schema.Execution.ExecutionPrice, FluidTrade.Guardian.Schema.Execution.ExecutionPrice>(FluidTrade.Guardian.Schema.Execution.ExecutionPrice.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.Execution.ExecutionPrice records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.Execution.ExecutionPrice, FluidTrade.Guardian.Schema.Execution.ExecutionPrice> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.Execution.ExecutionPrice.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.Execution.ExecutionPrice to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.Execution.ExecutionPrice executionPrice = ((FluidTrade.Guardian.Schema.Execution.ExecutionPrice)(iContent));
			if ((this.text != executionPrice.text))
			{
				this.text = executionPrice.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.Execution.ExecutionPrice SelectFromSelf(FluidTrade.Guardian.Schema.Execution.ExecutionPrice executionPrice)
		{
			return executionPrice;
		}
	}
	
	/// <summary>
	/// This class provides the ExecutionQuantity data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class ExecutionQuantity : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.Execution.ExecutionQuantity, FluidTrade.Guardian.Schema.Execution.ExecutionQuantity> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static ExecutionQuantity()
		{
			FluidTrade.Guardian.Schema.Execution.ExecutionQuantity.selectSelf = new System.Func<FluidTrade.Guardian.Schema.Execution.ExecutionQuantity, FluidTrade.Guardian.Schema.Execution.ExecutionQuantity>(FluidTrade.Guardian.Schema.Execution.ExecutionQuantity.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.Execution.ExecutionQuantity records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.Execution.ExecutionQuantity, FluidTrade.Guardian.Schema.Execution.ExecutionQuantity> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.Execution.ExecutionQuantity.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.Execution.ExecutionQuantity to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.Execution.ExecutionQuantity executionQuantity = ((FluidTrade.Guardian.Schema.Execution.ExecutionQuantity)(iContent));
			if ((this.text != executionQuantity.text))
			{
				this.text = executionQuantity.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.Execution.ExecutionQuantity SelectFromSelf(FluidTrade.Guardian.Schema.Execution.ExecutionQuantity executionQuantity)
		{
			return executionQuantity;
		}
	}
	
	/// <summary>
	/// This class provides the FixMessageId data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class FixMessageId : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.Execution.FixMessageId, FluidTrade.Guardian.Schema.Execution.FixMessageId> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static FixMessageId()
		{
			FluidTrade.Guardian.Schema.Execution.FixMessageId.selectSelf = new System.Func<FluidTrade.Guardian.Schema.Execution.FixMessageId, FluidTrade.Guardian.Schema.Execution.FixMessageId>(FluidTrade.Guardian.Schema.Execution.FixMessageId.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.Execution.FixMessageId records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.Execution.FixMessageId, FluidTrade.Guardian.Schema.Execution.FixMessageId> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.Execution.FixMessageId.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.Execution.FixMessageId to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.Execution.FixMessageId fixMessageId = ((FluidTrade.Guardian.Schema.Execution.FixMessageId)(iContent));
			if ((this.text != fixMessageId.text))
			{
				this.text = fixMessageId.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.Execution.FixMessageId SelectFromSelf(FluidTrade.Guardian.Schema.Execution.FixMessageId fixMessageId)
		{
			return fixMessageId;
		}
	}
	
	/// <summary>
	/// This class provides the IsHidden data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class IsHidden : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.Execution.IsHidden, FluidTrade.Guardian.Schema.Execution.IsHidden> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static IsHidden()
		{
			FluidTrade.Guardian.Schema.Execution.IsHidden.selectSelf = new System.Func<FluidTrade.Guardian.Schema.Execution.IsHidden, FluidTrade.Guardian.Schema.Execution.IsHidden>(FluidTrade.Guardian.Schema.Execution.IsHidden.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.Execution.IsHidden records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.Execution.IsHidden, FluidTrade.Guardian.Schema.Execution.IsHidden> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.Execution.IsHidden.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.Execution.IsHidden to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.Execution.IsHidden isHidden = ((FluidTrade.Guardian.Schema.Execution.IsHidden)(iContent));
			if ((this.text != isHidden.text))
			{
				this.text = isHidden.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.Execution.IsHidden SelectFromSelf(FluidTrade.Guardian.Schema.Execution.IsHidden isHidden)
		{
			return isHidden;
		}
	}
	
	/// <summary>
	/// This class provides the ModifiedTime data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class ModifiedTime : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.Execution.ModifiedTime, FluidTrade.Guardian.Schema.Execution.ModifiedTime> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static ModifiedTime()
		{
			FluidTrade.Guardian.Schema.Execution.ModifiedTime.selectSelf = new System.Func<FluidTrade.Guardian.Schema.Execution.ModifiedTime, FluidTrade.Guardian.Schema.Execution.ModifiedTime>(FluidTrade.Guardian.Schema.Execution.ModifiedTime.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.Execution.ModifiedTime records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.Execution.ModifiedTime, FluidTrade.Guardian.Schema.Execution.ModifiedTime> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.Execution.ModifiedTime.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.Execution.ModifiedTime to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.Execution.ModifiedTime modifiedTime = ((FluidTrade.Guardian.Schema.Execution.ModifiedTime)(iContent));
			if ((this.text != modifiedTime.text))
			{
				this.text = modifiedTime.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.Execution.ModifiedTime SelectFromSelf(FluidTrade.Guardian.Schema.Execution.ModifiedTime modifiedTime)
		{
			return modifiedTime;
		}
	}
	
	/// <summary>
	/// This class provides the ModifiedUserId data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class ModifiedUserId : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.Execution.ModifiedUserId, FluidTrade.Guardian.Schema.Execution.ModifiedUserId> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static ModifiedUserId()
		{
			FluidTrade.Guardian.Schema.Execution.ModifiedUserId.selectSelf = new System.Func<FluidTrade.Guardian.Schema.Execution.ModifiedUserId, FluidTrade.Guardian.Schema.Execution.ModifiedUserId>(FluidTrade.Guardian.Schema.Execution.ModifiedUserId.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.Execution.ModifiedUserId records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.Execution.ModifiedUserId, FluidTrade.Guardian.Schema.Execution.ModifiedUserId> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.Execution.ModifiedUserId.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.Execution.ModifiedUserId to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.Execution.ModifiedUserId modifiedUserId = ((FluidTrade.Guardian.Schema.Execution.ModifiedUserId)(iContent));
			if ((this.text != modifiedUserId.text))
			{
				this.text = modifiedUserId.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.Execution.ModifiedUserId SelectFromSelf(FluidTrade.Guardian.Schema.Execution.ModifiedUserId modifiedUserId)
		{
			return modifiedUserId;
		}
	}
	
	/// <summary>
	/// This class provides the OriginalPrice data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class OriginalPrice : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.Execution.OriginalPrice, FluidTrade.Guardian.Schema.Execution.OriginalPrice> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static OriginalPrice()
		{
			FluidTrade.Guardian.Schema.Execution.OriginalPrice.selectSelf = new System.Func<FluidTrade.Guardian.Schema.Execution.OriginalPrice, FluidTrade.Guardian.Schema.Execution.OriginalPrice>(FluidTrade.Guardian.Schema.Execution.OriginalPrice.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.Execution.OriginalPrice records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.Execution.OriginalPrice, FluidTrade.Guardian.Schema.Execution.OriginalPrice> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.Execution.OriginalPrice.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.Execution.OriginalPrice to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.Execution.OriginalPrice originalPrice = ((FluidTrade.Guardian.Schema.Execution.OriginalPrice)(iContent));
			if ((this.text != originalPrice.text))
			{
				this.text = originalPrice.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.Execution.OriginalPrice SelectFromSelf(FluidTrade.Guardian.Schema.Execution.OriginalPrice originalPrice)
		{
			return originalPrice;
		}
	}
	
	/// <summary>
	/// This class provides the OriginalQuantity data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class OriginalQuantity : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.Execution.OriginalQuantity, FluidTrade.Guardian.Schema.Execution.OriginalQuantity> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static OriginalQuantity()
		{
			FluidTrade.Guardian.Schema.Execution.OriginalQuantity.selectSelf = new System.Func<FluidTrade.Guardian.Schema.Execution.OriginalQuantity, FluidTrade.Guardian.Schema.Execution.OriginalQuantity>(FluidTrade.Guardian.Schema.Execution.OriginalQuantity.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.Execution.OriginalQuantity records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.Execution.OriginalQuantity, FluidTrade.Guardian.Schema.Execution.OriginalQuantity> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.Execution.OriginalQuantity.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.Execution.OriginalQuantity to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.Execution.OriginalQuantity originalQuantity = ((FluidTrade.Guardian.Schema.Execution.OriginalQuantity)(iContent));
			if ((this.text != originalQuantity.text))
			{
				this.text = originalQuantity.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.Execution.OriginalQuantity SelectFromSelf(FluidTrade.Guardian.Schema.Execution.OriginalQuantity originalQuantity)
		{
			return originalQuantity;
		}
	}
	
	/// <summary>
	/// This class provides the SourceStateCode data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class SourceStateCode : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.Execution.SourceStateCode, FluidTrade.Guardian.Schema.Execution.SourceStateCode> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static SourceStateCode()
		{
			FluidTrade.Guardian.Schema.Execution.SourceStateCode.selectSelf = new System.Func<FluidTrade.Guardian.Schema.Execution.SourceStateCode, FluidTrade.Guardian.Schema.Execution.SourceStateCode>(FluidTrade.Guardian.Schema.Execution.SourceStateCode.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.Execution.SourceStateCode records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.Execution.SourceStateCode, FluidTrade.Guardian.Schema.Execution.SourceStateCode> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.Execution.SourceStateCode.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.Execution.SourceStateCode to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.Execution.SourceStateCode sourceStateCode = ((FluidTrade.Guardian.Schema.Execution.SourceStateCode)(iContent));
			if ((this.text != sourceStateCode.text))
			{
				this.text = sourceStateCode.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.Execution.SourceStateCode SelectFromSelf(FluidTrade.Guardian.Schema.Execution.SourceStateCode sourceStateCode)
		{
			return sourceStateCode;
		}
	}
	
	/// <summary>
	/// This class provides the UserFee0 data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class UserFee0 : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.Execution.UserFee0, FluidTrade.Guardian.Schema.Execution.UserFee0> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static UserFee0()
		{
			FluidTrade.Guardian.Schema.Execution.UserFee0.selectSelf = new System.Func<FluidTrade.Guardian.Schema.Execution.UserFee0, FluidTrade.Guardian.Schema.Execution.UserFee0>(FluidTrade.Guardian.Schema.Execution.UserFee0.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.Execution.UserFee0 records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.Execution.UserFee0, FluidTrade.Guardian.Schema.Execution.UserFee0> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.Execution.UserFee0.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.Execution.UserFee0 to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.Execution.UserFee0 userFee0 = ((FluidTrade.Guardian.Schema.Execution.UserFee0)(iContent));
			if ((this.text != userFee0.text))
			{
				this.text = userFee0.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.Execution.UserFee0 SelectFromSelf(FluidTrade.Guardian.Schema.Execution.UserFee0 userFee0)
		{
			return userFee0;
		}
	}
	
	/// <summary>
	/// This class provides the UserFee1 data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class UserFee1 : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.Execution.UserFee1, FluidTrade.Guardian.Schema.Execution.UserFee1> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static UserFee1()
		{
			FluidTrade.Guardian.Schema.Execution.UserFee1.selectSelf = new System.Func<FluidTrade.Guardian.Schema.Execution.UserFee1, FluidTrade.Guardian.Schema.Execution.UserFee1>(FluidTrade.Guardian.Schema.Execution.UserFee1.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.Execution.UserFee1 records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.Execution.UserFee1, FluidTrade.Guardian.Schema.Execution.UserFee1> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.Execution.UserFee1.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.Execution.UserFee1 to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.Execution.UserFee1 userFee1 = ((FluidTrade.Guardian.Schema.Execution.UserFee1)(iContent));
			if ((this.text != userFee1.text))
			{
				this.text = userFee1.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.Execution.UserFee1 SelectFromSelf(FluidTrade.Guardian.Schema.Execution.UserFee1 userFee1)
		{
			return userFee1;
		}
	}
	
	/// <summary>
	/// This class provides the UserFee2 data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class UserFee2 : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.Execution.UserFee2, FluidTrade.Guardian.Schema.Execution.UserFee2> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static UserFee2()
		{
			FluidTrade.Guardian.Schema.Execution.UserFee2.selectSelf = new System.Func<FluidTrade.Guardian.Schema.Execution.UserFee2, FluidTrade.Guardian.Schema.Execution.UserFee2>(FluidTrade.Guardian.Schema.Execution.UserFee2.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.Execution.UserFee2 records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.Execution.UserFee2, FluidTrade.Guardian.Schema.Execution.UserFee2> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.Execution.UserFee2.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.Execution.UserFee2 to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.Execution.UserFee2 userFee2 = ((FluidTrade.Guardian.Schema.Execution.UserFee2)(iContent));
			if ((this.text != userFee2.text))
			{
				this.text = userFee2.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.Execution.UserFee2 SelectFromSelf(FluidTrade.Guardian.Schema.Execution.UserFee2 userFee2)
		{
			return userFee2;
		}
	}
	
	/// <summary>
	/// This class provides the UserFee3 data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class UserFee3 : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.Execution.UserFee3, FluidTrade.Guardian.Schema.Execution.UserFee3> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static UserFee3()
		{
			FluidTrade.Guardian.Schema.Execution.UserFee3.selectSelf = new System.Func<FluidTrade.Guardian.Schema.Execution.UserFee3, FluidTrade.Guardian.Schema.Execution.UserFee3>(FluidTrade.Guardian.Schema.Execution.UserFee3.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.Execution.UserFee3 records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.Execution.UserFee3, FluidTrade.Guardian.Schema.Execution.UserFee3> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.Execution.UserFee3.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.Execution.UserFee3 to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.Execution.UserFee3 userFee3 = ((FluidTrade.Guardian.Schema.Execution.UserFee3)(iContent));
			if ((this.text != userFee3.text))
			{
				this.text = userFee3.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.Execution.UserFee3 SelectFromSelf(FluidTrade.Guardian.Schema.Execution.UserFee3 userFee3)
		{
			return userFee3;
		}
	}
	
	/// <summary>
	/// This class provides the Execution data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class Execution : FluidTrade.Core.IContent
	{
		
		internal FluidTrade.Guardian.Schema.Execution.AccruedInterest accruedInterest;
		
		internal FluidTrade.Guardian.Schema.Execution.BrokerAccountId brokerAccountId;
		
		internal FluidTrade.Guardian.Schema.Execution.Commission commission;
		
		internal FluidTrade.Guardian.Schema.Execution.CreatedTime createdTime;
		
		internal FluidTrade.Guardian.Schema.Execution.CreatedUserId createdUserId;
		
		internal FluidTrade.Guardian.Schema.Execution.DestinationOrderId destinationOrderId;
		
		internal FluidTrade.Guardian.Schema.Execution.DestinationStateCode destinationStateCode;
		
		internal FluidTrade.Guardian.Schema.Execution.ExecutionPrice executionPrice;
		
		internal FluidTrade.Guardian.Schema.Execution.ExecutionQuantity executionQuantity;
		
		internal FluidTrade.Guardian.Schema.Execution.FixMessageId fixMessageId;
		
		internal FluidTrade.Guardian.Schema.Execution.IsHidden isHidden;
		
		internal object key;
		
		internal FluidTrade.Guardian.Schema.Execution.ModifiedTime modifiedTime;
		
		internal FluidTrade.Guardian.Schema.Execution.ModifiedUserId modifiedUserId;
		
		internal FluidTrade.Guardian.Schema.Execution.OriginalPrice originalPrice;
		
		internal FluidTrade.Guardian.Schema.Execution.OriginalQuantity originalQuantity;
		
		private static System.Func<FluidTrade.Guardian.Schema.Execution.Execution, FluidTrade.Guardian.Schema.Execution.Execution> selectSelf;
		
		internal FluidTrade.Guardian.Schema.Execution.SourceStateCode sourceStateCode;
		
		internal FluidTrade.Guardian.Schema.Execution.UserFee0 userFee0;
		
		internal FluidTrade.Guardian.Schema.Execution.UserFee1 userFee1;
		
		internal FluidTrade.Guardian.Schema.Execution.UserFee2 userFee2;
		
		internal FluidTrade.Guardian.Schema.Execution.UserFee3 userFee3;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static Execution()
		{
			FluidTrade.Guardian.Schema.Execution.Execution.selectSelf = new System.Func<FluidTrade.Guardian.Schema.Execution.Execution, FluidTrade.Guardian.Schema.Execution.Execution>(FluidTrade.Guardian.Schema.Execution.Execution.SelectFromSelf);
		}
		
		/// <summary>
		/// Creates a FluidTrade.Guardian.Schema.Execution.Execution.
		/// </summary>
		public Execution()
		{
			this.accruedInterest = new FluidTrade.Guardian.Schema.Execution.AccruedInterest();
			this.brokerAccountId = new FluidTrade.Guardian.Schema.Execution.BrokerAccountId();
			this.commission = new FluidTrade.Guardian.Schema.Execution.Commission();
			this.createdTime = new FluidTrade.Guardian.Schema.Execution.CreatedTime();
			this.createdUserId = new FluidTrade.Guardian.Schema.Execution.CreatedUserId();
			this.destinationOrderId = new FluidTrade.Guardian.Schema.Execution.DestinationOrderId();
			this.destinationStateCode = new FluidTrade.Guardian.Schema.Execution.DestinationStateCode();
			this.executionPrice = new FluidTrade.Guardian.Schema.Execution.ExecutionPrice();
			this.executionQuantity = new FluidTrade.Guardian.Schema.Execution.ExecutionQuantity();
			this.fixMessageId = new FluidTrade.Guardian.Schema.Execution.FixMessageId();
			this.isHidden = new FluidTrade.Guardian.Schema.Execution.IsHidden();
			this.modifiedTime = new FluidTrade.Guardian.Schema.Execution.ModifiedTime();
			this.modifiedUserId = new FluidTrade.Guardian.Schema.Execution.ModifiedUserId();
			this.originalPrice = new FluidTrade.Guardian.Schema.Execution.OriginalPrice();
			this.originalQuantity = new FluidTrade.Guardian.Schema.Execution.OriginalQuantity();
			this.sourceStateCode = new FluidTrade.Guardian.Schema.Execution.SourceStateCode();
			this.userFee0 = new FluidTrade.Guardian.Schema.Execution.UserFee0();
			this.userFee1 = new FluidTrade.Guardian.Schema.Execution.UserFee1();
			this.userFee2 = new FluidTrade.Guardian.Schema.Execution.UserFee2();
			this.userFee3 = new FluidTrade.Guardian.Schema.Execution.UserFee3();
		}
		
		/// <summary>
		/// AccruedInterest
		/// </summary>
		public FluidTrade.Guardian.Schema.Execution.AccruedInterest AccruedInterest
		{
			get
			{
				return this.accruedInterest;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// BrokerAccountId
		/// </summary>
		public FluidTrade.Guardian.Schema.Execution.BrokerAccountId BrokerAccountId
		{
			get
			{
				return this.brokerAccountId;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Commission
		/// </summary>
		public FluidTrade.Guardian.Schema.Execution.Commission Commission
		{
			get
			{
				return this.commission;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// CreatedTime
		/// </summary>
		public FluidTrade.Guardian.Schema.Execution.CreatedTime CreatedTime
		{
			get
			{
				return this.createdTime;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// CreatedUserId
		/// </summary>
		public FluidTrade.Guardian.Schema.Execution.CreatedUserId CreatedUserId
		{
			get
			{
				return this.createdUserId;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// DestinationOrderId
		/// </summary>
		public FluidTrade.Guardian.Schema.Execution.DestinationOrderId DestinationOrderId
		{
			get
			{
				return this.destinationOrderId;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// DestinationStateCode
		/// </summary>
		public FluidTrade.Guardian.Schema.Execution.DestinationStateCode DestinationStateCode
		{
			get
			{
				return this.destinationStateCode;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// ExecutionPrice
		/// </summary>
		public FluidTrade.Guardian.Schema.Execution.ExecutionPrice ExecutionPrice
		{
			get
			{
				return this.executionPrice;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// ExecutionQuantity
		/// </summary>
		public FluidTrade.Guardian.Schema.Execution.ExecutionQuantity ExecutionQuantity
		{
			get
			{
				return this.executionQuantity;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// FixMessageId
		/// </summary>
		public FluidTrade.Guardian.Schema.Execution.FixMessageId FixMessageId
		{
			get
			{
				return this.fixMessageId;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// IsHidden
		/// </summary>
		public FluidTrade.Guardian.Schema.Execution.IsHidden IsHidden
		{
			get
			{
				return this.isHidden;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// ModifiedTime
		/// </summary>
		public FluidTrade.Guardian.Schema.Execution.ModifiedTime ModifiedTime
		{
			get
			{
				return this.modifiedTime;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// ModifiedUserId
		/// </summary>
		public FluidTrade.Guardian.Schema.Execution.ModifiedUserId ModifiedUserId
		{
			get
			{
				return this.modifiedUserId;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// OriginalPrice
		/// </summary>
		public FluidTrade.Guardian.Schema.Execution.OriginalPrice OriginalPrice
		{
			get
			{
				return this.originalPrice;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// OriginalQuantity
		/// </summary>
		public FluidTrade.Guardian.Schema.Execution.OriginalQuantity OriginalQuantity
		{
			get
			{
				return this.originalQuantity;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.Execution.Execution records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.Execution.Execution, FluidTrade.Guardian.Schema.Execution.Execution> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.Execution.Execution.selectSelf;
			}
		}
		
		/// <summary>
		/// SourceStateCode
		/// </summary>
		public FluidTrade.Guardian.Schema.Execution.SourceStateCode SourceStateCode
		{
			get
			{
				return this.sourceStateCode;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// UserFee0
		/// </summary>
		public FluidTrade.Guardian.Schema.Execution.UserFee0 UserFee0
		{
			get
			{
				return this.userFee0;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// UserFee1
		/// </summary>
		public FluidTrade.Guardian.Schema.Execution.UserFee1 UserFee1
		{
			get
			{
				return this.userFee1;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// UserFee2
		/// </summary>
		public FluidTrade.Guardian.Schema.Execution.UserFee2 UserFee2
		{
			get
			{
				return this.userFee2;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// UserFee3
		/// </summary>
		public FluidTrade.Guardian.Schema.Execution.UserFee3 UserFee3
		{
			get
			{
				return this.userFee3;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.Execution.Execution to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.Execution.Execution execution = ((FluidTrade.Guardian.Schema.Execution.Execution)(iContent));
			this.accruedInterest.Copy(execution.accruedInterest);
			this.brokerAccountId.Copy(execution.brokerAccountId);
			this.commission.Copy(execution.commission);
			this.createdTime.Copy(execution.createdTime);
			this.createdUserId.Copy(execution.createdUserId);
			this.destinationOrderId.Copy(execution.destinationOrderId);
			this.destinationStateCode.Copy(execution.destinationStateCode);
			this.executionPrice.Copy(execution.executionPrice);
			this.executionQuantity.Copy(execution.executionQuantity);
			this.fixMessageId.Copy(execution.fixMessageId);
			this.isHidden.Copy(execution.isHidden);
			this.modifiedTime.Copy(execution.modifiedTime);
			this.modifiedUserId.Copy(execution.modifiedUserId);
			this.originalPrice.Copy(execution.originalPrice);
			this.originalQuantity.Copy(execution.originalQuantity);
			this.sourceStateCode.Copy(execution.sourceStateCode);
			this.userFee0.Copy(execution.userFee0);
			this.userFee1.Copy(execution.userFee1);
			this.userFee2.Copy(execution.userFee2);
			this.userFee3.Copy(execution.userFee3);
		}
		
		/// <summary>
		/// Creates a FluidTrade.Guardian.Schema.Execution.Execution.
		/// </summary>
		public FluidTrade.Guardian.Schema.Execution.Execution Select(FluidTrade.Guardian.ExecutionRow ExecutionRow)
		{
			this.key = ExecutionRow;
			this.accruedInterest.text = ExecutionRow.AccruedInterest;
			this.brokerAccountId.text = (ExecutionRow.IsBrokerAccountIdNull()) ? System.Guid.Empty :  ExecutionRow.BrokerAccountId;
			this.commission.text = ExecutionRow.Commission;
			this.createdTime.text = ExecutionRow.CreatedTime;
			this.createdUserId.text = ExecutionRow.CreatedUserId;
			this.destinationOrderId.text = ExecutionRow.DestinationOrderId;
			this.destinationStateCode.text = ExecutionRow.StateRowByFK_State_Execution_DestinationStateId.StateCode;
			this.executionPrice.text = ExecutionRow.ExecutionPrice;
			this.executionQuantity.text = ExecutionRow.ExecutionQuantity;
			this.fixMessageId.text = (ExecutionRow.IsFixMessageIdNull()) ? System.Guid.Empty :  ExecutionRow.FixMessageId;
			this.isHidden.text = ExecutionRow.IsHidden;
			this.modifiedTime.text = ExecutionRow.ModifiedTime;
			this.modifiedUserId.text = ExecutionRow.ModifiedUserId;
			this.originalPrice.text = (ExecutionRow.IsOriginalPriceNull()) ? 0 :  ExecutionRow.OriginalPrice;
			this.originalQuantity.text = 
			  (ExecutionRow.IsOriginalQuantityNull()) ? 0 :  ExecutionRow.OriginalQuantity;
			this.sourceStateCode.text = ExecutionRow.StateRowByFK_State_Execution_SourceStateId.StateCode;
			this.userFee0.text = ExecutionRow.AccruedInterest;
			this.userFee1.text = ExecutionRow.UserFee1;
			this.userFee2.text = ExecutionRow.UserFee2;
			this.userFee3.text = ExecutionRow.UserFee3;
			return this;
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.Execution.Execution SelectFromSelf(FluidTrade.Guardian.Schema.Execution.Execution execution)
		{
			return execution;
		}
	}
}
