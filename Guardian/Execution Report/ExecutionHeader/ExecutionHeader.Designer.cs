//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Windows.Markup.XmlnsDefinitionAttribute("urn:schemas-fluidtrade-com:guardian:execution-header", "FluidTrade.Guardian.Schema.ExecutionHeader")]

namespace FluidTrade.Guardian.Schema.ExecutionHeader
{
	
	
	/// <summary>
	/// This class provides the AccruedInterest data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class AccruedInterest : FluidTrade.Core.IContent
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.AccruedInterest, FluidTrade.Guardian.Schema.ExecutionHeader.AccruedInterest> selectSelf;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static AccruedInterest()
		{
			FluidTrade.Guardian.Schema.ExecutionHeader.AccruedInterest.selectSelf = new System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.AccruedInterest, FluidTrade.Guardian.Schema.ExecutionHeader.AccruedInterest>(FluidTrade.Guardian.Schema.ExecutionHeader.AccruedInterest.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.ExecutionHeader.AccruedInterest records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.AccruedInterest, FluidTrade.Guardian.Schema.ExecutionHeader.AccruedInterest> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.ExecutionHeader.AccruedInterest.selectSelf;
			}
		}
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.ExecutionHeader.AccruedInterest to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.ExecutionHeader.AccruedInterest accruedInterest = ((FluidTrade.Guardian.Schema.ExecutionHeader.AccruedInterest)(iContent));
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.ExecutionHeader.AccruedInterest SelectFromSelf(FluidTrade.Guardian.Schema.ExecutionHeader.AccruedInterest accruedInterest)
		{
			return accruedInterest;
		}
	}
	
	/// <summary>
	/// This class provides the BrokerAccountId data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class BrokerAccountId : FluidTrade.Core.IContent
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.BrokerAccountId, FluidTrade.Guardian.Schema.ExecutionHeader.BrokerAccountId> selectSelf;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static BrokerAccountId()
		{
			FluidTrade.Guardian.Schema.ExecutionHeader.BrokerAccountId.selectSelf = new System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.BrokerAccountId, FluidTrade.Guardian.Schema.ExecutionHeader.BrokerAccountId>(FluidTrade.Guardian.Schema.ExecutionHeader.BrokerAccountId.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.ExecutionHeader.BrokerAccountId records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.BrokerAccountId, FluidTrade.Guardian.Schema.ExecutionHeader.BrokerAccountId> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.ExecutionHeader.BrokerAccountId.selectSelf;
			}
		}
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.ExecutionHeader.BrokerAccountId to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.ExecutionHeader.BrokerAccountId brokerAccountId = ((FluidTrade.Guardian.Schema.ExecutionHeader.BrokerAccountId)(iContent));
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.ExecutionHeader.BrokerAccountId SelectFromSelf(FluidTrade.Guardian.Schema.ExecutionHeader.BrokerAccountId brokerAccountId)
		{
			return brokerAccountId;
		}
	}
	
	/// <summary>
	/// This class provides the Commission data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class Commission : FluidTrade.Core.IContent
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.Commission, FluidTrade.Guardian.Schema.ExecutionHeader.Commission> selectSelf;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static Commission()
		{
			FluidTrade.Guardian.Schema.ExecutionHeader.Commission.selectSelf = new System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.Commission, FluidTrade.Guardian.Schema.ExecutionHeader.Commission>(FluidTrade.Guardian.Schema.ExecutionHeader.Commission.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.ExecutionHeader.Commission records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.Commission, FluidTrade.Guardian.Schema.ExecutionHeader.Commission> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.ExecutionHeader.Commission.selectSelf;
			}
		}
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.ExecutionHeader.Commission to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.ExecutionHeader.Commission commission = ((FluidTrade.Guardian.Schema.ExecutionHeader.Commission)(iContent));
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.ExecutionHeader.Commission SelectFromSelf(FluidTrade.Guardian.Schema.ExecutionHeader.Commission commission)
		{
			return commission;
		}
	}
	
	/// <summary>
	/// This class provides the CreatedTime data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class CreatedTime : FluidTrade.Core.IContent
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.CreatedTime, FluidTrade.Guardian.Schema.ExecutionHeader.CreatedTime> selectSelf;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static CreatedTime()
		{
			FluidTrade.Guardian.Schema.ExecutionHeader.CreatedTime.selectSelf = new System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.CreatedTime, FluidTrade.Guardian.Schema.ExecutionHeader.CreatedTime>(FluidTrade.Guardian.Schema.ExecutionHeader.CreatedTime.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.ExecutionHeader.CreatedTime records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.CreatedTime, FluidTrade.Guardian.Schema.ExecutionHeader.CreatedTime> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.ExecutionHeader.CreatedTime.selectSelf;
			}
		}
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.ExecutionHeader.CreatedTime to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.ExecutionHeader.CreatedTime createdTime = ((FluidTrade.Guardian.Schema.ExecutionHeader.CreatedTime)(iContent));
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.ExecutionHeader.CreatedTime SelectFromSelf(FluidTrade.Guardian.Schema.ExecutionHeader.CreatedTime createdTime)
		{
			return createdTime;
		}
	}
	
	/// <summary>
	/// This class provides the CreatedUserId data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class CreatedUserId : FluidTrade.Core.IContent
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.CreatedUserId, FluidTrade.Guardian.Schema.ExecutionHeader.CreatedUserId> selectSelf;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static CreatedUserId()
		{
			FluidTrade.Guardian.Schema.ExecutionHeader.CreatedUserId.selectSelf = new System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.CreatedUserId, FluidTrade.Guardian.Schema.ExecutionHeader.CreatedUserId>(FluidTrade.Guardian.Schema.ExecutionHeader.CreatedUserId.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.ExecutionHeader.CreatedUserId records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.CreatedUserId, FluidTrade.Guardian.Schema.ExecutionHeader.CreatedUserId> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.ExecutionHeader.CreatedUserId.selectSelf;
			}
		}
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.ExecutionHeader.CreatedUserId to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.ExecutionHeader.CreatedUserId createdUserId = ((FluidTrade.Guardian.Schema.ExecutionHeader.CreatedUserId)(iContent));
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.ExecutionHeader.CreatedUserId SelectFromSelf(FluidTrade.Guardian.Schema.ExecutionHeader.CreatedUserId createdUserId)
		{
			return createdUserId;
		}
	}
	
	/// <summary>
	/// This class provides the DestinationOrderId data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class DestinationOrderId : FluidTrade.Core.IContent
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.DestinationOrderId, FluidTrade.Guardian.Schema.ExecutionHeader.DestinationOrderId> selectSelf;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static DestinationOrderId()
		{
			FluidTrade.Guardian.Schema.ExecutionHeader.DestinationOrderId.selectSelf = new System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.DestinationOrderId, FluidTrade.Guardian.Schema.ExecutionHeader.DestinationOrderId>(FluidTrade.Guardian.Schema.ExecutionHeader.DestinationOrderId.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.ExecutionHeader.DestinationOrderId records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.DestinationOrderId, FluidTrade.Guardian.Schema.ExecutionHeader.DestinationOrderId> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.ExecutionHeader.DestinationOrderId.selectSelf;
			}
		}
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.ExecutionHeader.DestinationOrderId to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.ExecutionHeader.DestinationOrderId destinationOrderId = ((FluidTrade.Guardian.Schema.ExecutionHeader.DestinationOrderId)(iContent));
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.ExecutionHeader.DestinationOrderId SelectFromSelf(FluidTrade.Guardian.Schema.ExecutionHeader.DestinationOrderId destinationOrderId)
		{
			return destinationOrderId;
		}
	}
	
	/// <summary>
	/// This class provides the DestinationStateCode data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class DestinationStateCode : FluidTrade.Core.IContent
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.DestinationStateCode, FluidTrade.Guardian.Schema.ExecutionHeader.DestinationStateCode> selectSelf;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static DestinationStateCode()
		{
			FluidTrade.Guardian.Schema.ExecutionHeader.DestinationStateCode.selectSelf = new System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.DestinationStateCode, FluidTrade.Guardian.Schema.ExecutionHeader.DestinationStateCode>(FluidTrade.Guardian.Schema.ExecutionHeader.DestinationStateCode.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.ExecutionHeader.DestinationStateCode records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.DestinationStateCode, FluidTrade.Guardian.Schema.ExecutionHeader.DestinationStateCode> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.ExecutionHeader.DestinationStateCode.selectSelf;
			}
		}
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.ExecutionHeader.DestinationStateCode to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.ExecutionHeader.DestinationStateCode destinationStateCode = ((FluidTrade.Guardian.Schema.ExecutionHeader.DestinationStateCode)(iContent));
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.ExecutionHeader.DestinationStateCode SelectFromSelf(FluidTrade.Guardian.Schema.ExecutionHeader.DestinationStateCode destinationStateCode)
		{
			return destinationStateCode;
		}
	}
	
	/// <summary>
	/// This class provides the ExecutionPrice data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class ExecutionPrice : FluidTrade.Core.IContent
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.ExecutionPrice, FluidTrade.Guardian.Schema.ExecutionHeader.ExecutionPrice> selectSelf;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static ExecutionPrice()
		{
			FluidTrade.Guardian.Schema.ExecutionHeader.ExecutionPrice.selectSelf = new System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.ExecutionPrice, FluidTrade.Guardian.Schema.ExecutionHeader.ExecutionPrice>(FluidTrade.Guardian.Schema.ExecutionHeader.ExecutionPrice.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.ExecutionHeader.ExecutionPrice records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.ExecutionPrice, FluidTrade.Guardian.Schema.ExecutionHeader.ExecutionPrice> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.ExecutionHeader.ExecutionPrice.selectSelf;
			}
		}
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.ExecutionHeader.ExecutionPrice to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.ExecutionHeader.ExecutionPrice executionPrice = ((FluidTrade.Guardian.Schema.ExecutionHeader.ExecutionPrice)(iContent));
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.ExecutionHeader.ExecutionPrice SelectFromSelf(FluidTrade.Guardian.Schema.ExecutionHeader.ExecutionPrice executionPrice)
		{
			return executionPrice;
		}
	}
	
	/// <summary>
	/// This class provides the ExecutionQuantity data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class ExecutionQuantity : FluidTrade.Core.IContent
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.ExecutionQuantity, FluidTrade.Guardian.Schema.ExecutionHeader.ExecutionQuantity> selectSelf;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static ExecutionQuantity()
		{
			FluidTrade.Guardian.Schema.ExecutionHeader.ExecutionQuantity.selectSelf = new System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.ExecutionQuantity, FluidTrade.Guardian.Schema.ExecutionHeader.ExecutionQuantity>(FluidTrade.Guardian.Schema.ExecutionHeader.ExecutionQuantity.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.ExecutionHeader.ExecutionQuantity records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.ExecutionQuantity, FluidTrade.Guardian.Schema.ExecutionHeader.ExecutionQuantity> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.ExecutionHeader.ExecutionQuantity.selectSelf;
			}
		}
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.ExecutionHeader.ExecutionQuantity to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.ExecutionHeader.ExecutionQuantity executionQuantity = ((FluidTrade.Guardian.Schema.ExecutionHeader.ExecutionQuantity)(iContent));
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.ExecutionHeader.ExecutionQuantity SelectFromSelf(FluidTrade.Guardian.Schema.ExecutionHeader.ExecutionQuantity executionQuantity)
		{
			return executionQuantity;
		}
	}
	
	/// <summary>
	/// This class provides the FixMessageId data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class FixMessageId : FluidTrade.Core.IContent
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.FixMessageId, FluidTrade.Guardian.Schema.ExecutionHeader.FixMessageId> selectSelf;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static FixMessageId()
		{
			FluidTrade.Guardian.Schema.ExecutionHeader.FixMessageId.selectSelf = new System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.FixMessageId, FluidTrade.Guardian.Schema.ExecutionHeader.FixMessageId>(FluidTrade.Guardian.Schema.ExecutionHeader.FixMessageId.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.ExecutionHeader.FixMessageId records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.FixMessageId, FluidTrade.Guardian.Schema.ExecutionHeader.FixMessageId> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.ExecutionHeader.FixMessageId.selectSelf;
			}
		}
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.ExecutionHeader.FixMessageId to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.ExecutionHeader.FixMessageId fixMessageId = ((FluidTrade.Guardian.Schema.ExecutionHeader.FixMessageId)(iContent));
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.ExecutionHeader.FixMessageId SelectFromSelf(FluidTrade.Guardian.Schema.ExecutionHeader.FixMessageId fixMessageId)
		{
			return fixMessageId;
		}
	}
	
	/// <summary>
	/// This class provides the IsHidden data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class IsHidden : FluidTrade.Core.IContent
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.IsHidden, FluidTrade.Guardian.Schema.ExecutionHeader.IsHidden> selectSelf;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static IsHidden()
		{
			FluidTrade.Guardian.Schema.ExecutionHeader.IsHidden.selectSelf = new System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.IsHidden, FluidTrade.Guardian.Schema.ExecutionHeader.IsHidden>(FluidTrade.Guardian.Schema.ExecutionHeader.IsHidden.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.ExecutionHeader.IsHidden records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.IsHidden, FluidTrade.Guardian.Schema.ExecutionHeader.IsHidden> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.ExecutionHeader.IsHidden.selectSelf;
			}
		}
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.ExecutionHeader.IsHidden to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.ExecutionHeader.IsHidden isHidden = ((FluidTrade.Guardian.Schema.ExecutionHeader.IsHidden)(iContent));
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.ExecutionHeader.IsHidden SelectFromSelf(FluidTrade.Guardian.Schema.ExecutionHeader.IsHidden isHidden)
		{
			return isHidden;
		}
	}
	
	/// <summary>
	/// This class provides the ModifiedTime data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class ModifiedTime : FluidTrade.Core.IContent
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.ModifiedTime, FluidTrade.Guardian.Schema.ExecutionHeader.ModifiedTime> selectSelf;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static ModifiedTime()
		{
			FluidTrade.Guardian.Schema.ExecutionHeader.ModifiedTime.selectSelf = new System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.ModifiedTime, FluidTrade.Guardian.Schema.ExecutionHeader.ModifiedTime>(FluidTrade.Guardian.Schema.ExecutionHeader.ModifiedTime.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.ExecutionHeader.ModifiedTime records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.ModifiedTime, FluidTrade.Guardian.Schema.ExecutionHeader.ModifiedTime> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.ExecutionHeader.ModifiedTime.selectSelf;
			}
		}
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.ExecutionHeader.ModifiedTime to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.ExecutionHeader.ModifiedTime modifiedTime = ((FluidTrade.Guardian.Schema.ExecutionHeader.ModifiedTime)(iContent));
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.ExecutionHeader.ModifiedTime SelectFromSelf(FluidTrade.Guardian.Schema.ExecutionHeader.ModifiedTime modifiedTime)
		{
			return modifiedTime;
		}
	}
	
	/// <summary>
	/// This class provides the ModifiedUserId data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class ModifiedUserId : FluidTrade.Core.IContent
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.ModifiedUserId, FluidTrade.Guardian.Schema.ExecutionHeader.ModifiedUserId> selectSelf;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static ModifiedUserId()
		{
			FluidTrade.Guardian.Schema.ExecutionHeader.ModifiedUserId.selectSelf = new System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.ModifiedUserId, FluidTrade.Guardian.Schema.ExecutionHeader.ModifiedUserId>(FluidTrade.Guardian.Schema.ExecutionHeader.ModifiedUserId.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.ExecutionHeader.ModifiedUserId records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.ModifiedUserId, FluidTrade.Guardian.Schema.ExecutionHeader.ModifiedUserId> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.ExecutionHeader.ModifiedUserId.selectSelf;
			}
		}
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.ExecutionHeader.ModifiedUserId to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.ExecutionHeader.ModifiedUserId modifiedUserId = ((FluidTrade.Guardian.Schema.ExecutionHeader.ModifiedUserId)(iContent));
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.ExecutionHeader.ModifiedUserId SelectFromSelf(FluidTrade.Guardian.Schema.ExecutionHeader.ModifiedUserId modifiedUserId)
		{
			return modifiedUserId;
		}
	}
	
	/// <summary>
	/// This class provides the OriginalPrice data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class OriginalPrice : FluidTrade.Core.IContent
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.OriginalPrice, FluidTrade.Guardian.Schema.ExecutionHeader.OriginalPrice> selectSelf;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static OriginalPrice()
		{
			FluidTrade.Guardian.Schema.ExecutionHeader.OriginalPrice.selectSelf = new System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.OriginalPrice, FluidTrade.Guardian.Schema.ExecutionHeader.OriginalPrice>(FluidTrade.Guardian.Schema.ExecutionHeader.OriginalPrice.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.ExecutionHeader.OriginalPrice records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.OriginalPrice, FluidTrade.Guardian.Schema.ExecutionHeader.OriginalPrice> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.ExecutionHeader.OriginalPrice.selectSelf;
			}
		}
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.ExecutionHeader.OriginalPrice to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.ExecutionHeader.OriginalPrice originalPrice = ((FluidTrade.Guardian.Schema.ExecutionHeader.OriginalPrice)(iContent));
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.ExecutionHeader.OriginalPrice SelectFromSelf(FluidTrade.Guardian.Schema.ExecutionHeader.OriginalPrice originalPrice)
		{
			return originalPrice;
		}
	}
	
	/// <summary>
	/// This class provides the OriginalQuantity data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class OriginalQuantity : FluidTrade.Core.IContent
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.OriginalQuantity, FluidTrade.Guardian.Schema.ExecutionHeader.OriginalQuantity> selectSelf;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static OriginalQuantity()
		{
			FluidTrade.Guardian.Schema.ExecutionHeader.OriginalQuantity.selectSelf = new System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.OriginalQuantity, FluidTrade.Guardian.Schema.ExecutionHeader.OriginalQuantity>(FluidTrade.Guardian.Schema.ExecutionHeader.OriginalQuantity.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.ExecutionHeader.OriginalQuantity records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.OriginalQuantity, FluidTrade.Guardian.Schema.ExecutionHeader.OriginalQuantity> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.ExecutionHeader.OriginalQuantity.selectSelf;
			}
		}
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.ExecutionHeader.OriginalQuantity to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.ExecutionHeader.OriginalQuantity originalQuantity = ((FluidTrade.Guardian.Schema.ExecutionHeader.OriginalQuantity)(iContent));
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.ExecutionHeader.OriginalQuantity SelectFromSelf(FluidTrade.Guardian.Schema.ExecutionHeader.OriginalQuantity originalQuantity)
		{
			return originalQuantity;
		}
	}
	
	/// <summary>
	/// This class provides the SourceStateCode data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class SourceStateCode : FluidTrade.Core.IContent
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.SourceStateCode, FluidTrade.Guardian.Schema.ExecutionHeader.SourceStateCode> selectSelf;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static SourceStateCode()
		{
			FluidTrade.Guardian.Schema.ExecutionHeader.SourceStateCode.selectSelf = new System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.SourceStateCode, FluidTrade.Guardian.Schema.ExecutionHeader.SourceStateCode>(FluidTrade.Guardian.Schema.ExecutionHeader.SourceStateCode.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.ExecutionHeader.SourceStateCode records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.SourceStateCode, FluidTrade.Guardian.Schema.ExecutionHeader.SourceStateCode> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.ExecutionHeader.SourceStateCode.selectSelf;
			}
		}
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.ExecutionHeader.SourceStateCode to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.ExecutionHeader.SourceStateCode sourceStateCode = ((FluidTrade.Guardian.Schema.ExecutionHeader.SourceStateCode)(iContent));
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.ExecutionHeader.SourceStateCode SelectFromSelf(FluidTrade.Guardian.Schema.ExecutionHeader.SourceStateCode sourceStateCode)
		{
			return sourceStateCode;
		}
	}
	
	/// <summary>
	/// This class provides the UserFee0 data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class UserFee0 : FluidTrade.Core.IContent
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.UserFee0, FluidTrade.Guardian.Schema.ExecutionHeader.UserFee0> selectSelf;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static UserFee0()
		{
			FluidTrade.Guardian.Schema.ExecutionHeader.UserFee0.selectSelf = new System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.UserFee0, FluidTrade.Guardian.Schema.ExecutionHeader.UserFee0>(FluidTrade.Guardian.Schema.ExecutionHeader.UserFee0.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.ExecutionHeader.UserFee0 records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.UserFee0, FluidTrade.Guardian.Schema.ExecutionHeader.UserFee0> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.ExecutionHeader.UserFee0.selectSelf;
			}
		}
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.ExecutionHeader.UserFee0 to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.ExecutionHeader.UserFee0 userFee0 = ((FluidTrade.Guardian.Schema.ExecutionHeader.UserFee0)(iContent));
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.ExecutionHeader.UserFee0 SelectFromSelf(FluidTrade.Guardian.Schema.ExecutionHeader.UserFee0 userFee0)
		{
			return userFee0;
		}
	}
	
	/// <summary>
	/// This class provides the UserFee1 data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class UserFee1 : FluidTrade.Core.IContent
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.UserFee1, FluidTrade.Guardian.Schema.ExecutionHeader.UserFee1> selectSelf;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static UserFee1()
		{
			FluidTrade.Guardian.Schema.ExecutionHeader.UserFee1.selectSelf = new System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.UserFee1, FluidTrade.Guardian.Schema.ExecutionHeader.UserFee1>(FluidTrade.Guardian.Schema.ExecutionHeader.UserFee1.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.ExecutionHeader.UserFee1 records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.UserFee1, FluidTrade.Guardian.Schema.ExecutionHeader.UserFee1> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.ExecutionHeader.UserFee1.selectSelf;
			}
		}
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.ExecutionHeader.UserFee1 to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.ExecutionHeader.UserFee1 userFee1 = ((FluidTrade.Guardian.Schema.ExecutionHeader.UserFee1)(iContent));
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.ExecutionHeader.UserFee1 SelectFromSelf(FluidTrade.Guardian.Schema.ExecutionHeader.UserFee1 userFee1)
		{
			return userFee1;
		}
	}
	
	/// <summary>
	/// This class provides the UserFee2 data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class UserFee2 : FluidTrade.Core.IContent
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.UserFee2, FluidTrade.Guardian.Schema.ExecutionHeader.UserFee2> selectSelf;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static UserFee2()
		{
			FluidTrade.Guardian.Schema.ExecutionHeader.UserFee2.selectSelf = new System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.UserFee2, FluidTrade.Guardian.Schema.ExecutionHeader.UserFee2>(FluidTrade.Guardian.Schema.ExecutionHeader.UserFee2.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.ExecutionHeader.UserFee2 records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.UserFee2, FluidTrade.Guardian.Schema.ExecutionHeader.UserFee2> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.ExecutionHeader.UserFee2.selectSelf;
			}
		}
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.ExecutionHeader.UserFee2 to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.ExecutionHeader.UserFee2 userFee2 = ((FluidTrade.Guardian.Schema.ExecutionHeader.UserFee2)(iContent));
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.ExecutionHeader.UserFee2 SelectFromSelf(FluidTrade.Guardian.Schema.ExecutionHeader.UserFee2 userFee2)
		{
			return userFee2;
		}
	}
	
	/// <summary>
	/// This class provides the UserFee3 data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class UserFee3 : FluidTrade.Core.IContent
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.UserFee3, FluidTrade.Guardian.Schema.ExecutionHeader.UserFee3> selectSelf;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static UserFee3()
		{
			FluidTrade.Guardian.Schema.ExecutionHeader.UserFee3.selectSelf = new System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.UserFee3, FluidTrade.Guardian.Schema.ExecutionHeader.UserFee3>(FluidTrade.Guardian.Schema.ExecutionHeader.UserFee3.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.ExecutionHeader.UserFee3 records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.UserFee3, FluidTrade.Guardian.Schema.ExecutionHeader.UserFee3> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.ExecutionHeader.UserFee3.selectSelf;
			}
		}
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.ExecutionHeader.UserFee3 to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.ExecutionHeader.UserFee3 userFee3 = ((FluidTrade.Guardian.Schema.ExecutionHeader.UserFee3)(iContent));
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.ExecutionHeader.UserFee3 SelectFromSelf(FluidTrade.Guardian.Schema.ExecutionHeader.UserFee3 userFee3)
		{
			return userFee3;
		}
	}
	
	/// <summary>
	/// This class provides the ExecutionHeader data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class ExecutionHeader : FluidTrade.Core.IContent
	{
		
		internal FluidTrade.Guardian.Schema.ExecutionHeader.AccruedInterest accruedInterest;
		
		internal FluidTrade.Guardian.Schema.ExecutionHeader.BrokerAccountId brokerAccountId;
		
		internal FluidTrade.Guardian.Schema.ExecutionHeader.Commission commission;
		
		private FluidTrade.Core.ComplexComparer<FluidTrade.Guardian.Schema.Execution.Execution> comparer;
		
		internal FluidTrade.Guardian.Schema.ExecutionHeader.CreatedTime createdTime;
		
		internal FluidTrade.Guardian.Schema.ExecutionHeader.CreatedUserId createdUserId;
		
		internal FluidTrade.Guardian.Schema.ExecutionHeader.DestinationOrderId destinationOrderId;
		
		internal FluidTrade.Guardian.Schema.ExecutionHeader.DestinationStateCode destinationStateCode;
		
		internal FluidTrade.Guardian.Schema.Execution.Execution[] executionList;
		
		internal FluidTrade.Guardian.Schema.ExecutionHeader.ExecutionPrice executionPrice;
		
		internal FluidTrade.Guardian.Schema.ExecutionHeader.ExecutionQuantity executionQuantity;
		
		private FluidTrade.Core.ComplexFilter<FluidTrade.Guardian.Schema.Execution.Execution> filter;
		
		internal FluidTrade.Guardian.Schema.ExecutionHeader.FixMessageId fixMessageId;
		
		internal FluidTrade.Guardian.Schema.ExecutionHeader.IsHidden isHidden;
		
		internal object key;
		
		internal FluidTrade.Guardian.Schema.ExecutionHeader.ModifiedTime modifiedTime;
		
		internal FluidTrade.Guardian.Schema.ExecutionHeader.ModifiedUserId modifiedUserId;
		
		internal FluidTrade.Guardian.Schema.ExecutionHeader.OriginalPrice originalPrice;
		
		internal FluidTrade.Guardian.Schema.ExecutionHeader.OriginalQuantity originalQuantity;
		
		private FluidTrade.Core.ComplexFilter<FluidTrade.Guardian.ExecutionRow> prefilter;
		
		private System.Func<FluidTrade.Guardian.ExecutionRow, FluidTrade.Guardian.Schema.Execution.Execution> selector;
		
		private static System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.ExecutionHeader, FluidTrade.Guardian.Schema.ExecutionHeader.ExecutionHeader> selectSelf;
		
		internal FluidTrade.Guardian.Schema.ExecutionHeader.SourceStateCode sourceStateCode;
		
		internal FluidTrade.Guardian.Schema.ExecutionHeader.UserFee0 userFee0;
		
		internal FluidTrade.Guardian.Schema.ExecutionHeader.UserFee1 userFee1;
		
		internal FluidTrade.Guardian.Schema.ExecutionHeader.UserFee2 userFee2;
		
		internal FluidTrade.Guardian.Schema.ExecutionHeader.UserFee3 userFee3;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static ExecutionHeader()
		{
			FluidTrade.Guardian.Schema.ExecutionHeader.ExecutionHeader.selectSelf = new System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.ExecutionHeader, FluidTrade.Guardian.Schema.ExecutionHeader.ExecutionHeader>(FluidTrade.Guardian.Schema.ExecutionHeader.ExecutionHeader.SelectFromSelf);
		}
		
		/// <summary>
		/// Creates a FluidTrade.Guardian.Schema.ExecutionHeader.ExecutionHeader.
		/// </summary>
		public ExecutionHeader()
		{
			this.accruedInterest = new FluidTrade.Guardian.Schema.ExecutionHeader.AccruedInterest();
			this.brokerAccountId = new FluidTrade.Guardian.Schema.ExecutionHeader.BrokerAccountId();
			this.commission = new FluidTrade.Guardian.Schema.ExecutionHeader.Commission();
			this.createdTime = new FluidTrade.Guardian.Schema.ExecutionHeader.CreatedTime();
			this.createdUserId = new FluidTrade.Guardian.Schema.ExecutionHeader.CreatedUserId();
			this.destinationOrderId = new FluidTrade.Guardian.Schema.ExecutionHeader.DestinationOrderId();
			this.destinationStateCode = new FluidTrade.Guardian.Schema.ExecutionHeader.DestinationStateCode();
			this.executionPrice = new FluidTrade.Guardian.Schema.ExecutionHeader.ExecutionPrice();
			this.executionQuantity = new FluidTrade.Guardian.Schema.ExecutionHeader.ExecutionQuantity();
			this.fixMessageId = new FluidTrade.Guardian.Schema.ExecutionHeader.FixMessageId();
			this.isHidden = new FluidTrade.Guardian.Schema.ExecutionHeader.IsHidden();
			this.modifiedTime = new FluidTrade.Guardian.Schema.ExecutionHeader.ModifiedTime();
			this.modifiedUserId = new FluidTrade.Guardian.Schema.ExecutionHeader.ModifiedUserId();
			this.originalPrice = new FluidTrade.Guardian.Schema.ExecutionHeader.OriginalPrice();
			this.originalQuantity = new FluidTrade.Guardian.Schema.ExecutionHeader.OriginalQuantity();
			this.sourceStateCode = new FluidTrade.Guardian.Schema.ExecutionHeader.SourceStateCode();
			this.userFee0 = new FluidTrade.Guardian.Schema.ExecutionHeader.UserFee0();
			this.userFee1 = new FluidTrade.Guardian.Schema.ExecutionHeader.UserFee1();
			this.userFee2 = new FluidTrade.Guardian.Schema.ExecutionHeader.UserFee2();
			this.userFee3 = new FluidTrade.Guardian.Schema.ExecutionHeader.UserFee3();
		}
		
		/// <summary>
		/// AccruedInterest
		/// </summary>
		public FluidTrade.Guardian.Schema.ExecutionHeader.AccruedInterest AccruedInterest
		{
			get
			{
				return this.accruedInterest;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// BrokerAccountId
		/// </summary>
		public FluidTrade.Guardian.Schema.ExecutionHeader.BrokerAccountId BrokerAccountId
		{
			get
			{
				return this.brokerAccountId;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Commission
		/// </summary>
		public FluidTrade.Guardian.Schema.ExecutionHeader.Commission Commission
		{
			get
			{
				return this.commission;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the complex comparison for ordering records from the result set.
		/// </summary>
		public FluidTrade.Core.ComplexComparer<FluidTrade.Guardian.Schema.Execution.Execution> Comparer
		{
			get
			{
				return this.comparer;
			}
			set
			{
				this.comparer = value;
			}
		}
		
		/// <summary>
		/// CreatedTime
		/// </summary>
		public FluidTrade.Guardian.Schema.ExecutionHeader.CreatedTime CreatedTime
		{
			get
			{
				return this.createdTime;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// CreatedUserId
		/// </summary>
		public FluidTrade.Guardian.Schema.ExecutionHeader.CreatedUserId CreatedUserId
		{
			get
			{
				return this.createdUserId;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// DestinationOrderId
		/// </summary>
		public FluidTrade.Guardian.Schema.ExecutionHeader.DestinationOrderId DestinationOrderId
		{
			get
			{
				return this.destinationOrderId;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// DestinationStateCode
		/// </summary>
		public FluidTrade.Guardian.Schema.ExecutionHeader.DestinationStateCode DestinationStateCode
		{
			get
			{
				return this.destinationStateCode;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// ExecutionList
		/// </summary>
		public System.Collections.Generic.IEnumerable<FluidTrade.Guardian.Schema.Execution.Execution> ExecutionList
		{
			get
			{
				return this.executionList;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// ExecutionPrice
		/// </summary>
		public FluidTrade.Guardian.Schema.ExecutionHeader.ExecutionPrice ExecutionPrice
		{
			get
			{
				return this.executionPrice;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// ExecutionQuantity
		/// </summary>
		public FluidTrade.Guardian.Schema.ExecutionHeader.ExecutionQuantity ExecutionQuantity
		{
			get
			{
				return this.executionQuantity;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the complex filter used to remove records from the result set.
		/// </summary>
		public FluidTrade.Core.ComplexFilter<FluidTrade.Guardian.Schema.Execution.Execution> Filter
		{
			get
			{
				return this.filter;
			}
			set
			{
				this.filter = value;
			}
		}
		
		/// <summary>
		/// FixMessageId
		/// </summary>
		public FluidTrade.Guardian.Schema.ExecutionHeader.FixMessageId FixMessageId
		{
			get
			{
				return this.fixMessageId;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// IsHidden
		/// </summary>
		public FluidTrade.Guardian.Schema.ExecutionHeader.IsHidden IsHidden
		{
			get
			{
				return this.isHidden;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// ModifiedTime
		/// </summary>
		public FluidTrade.Guardian.Schema.ExecutionHeader.ModifiedTime ModifiedTime
		{
			get
			{
				return this.modifiedTime;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// ModifiedUserId
		/// </summary>
		public FluidTrade.Guardian.Schema.ExecutionHeader.ModifiedUserId ModifiedUserId
		{
			get
			{
				return this.modifiedUserId;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// OriginalPrice
		/// </summary>
		public FluidTrade.Guardian.Schema.ExecutionHeader.OriginalPrice OriginalPrice
		{
			get
			{
				return this.originalPrice;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// OriginalQuantity
		/// </summary>
		public FluidTrade.Guardian.Schema.ExecutionHeader.OriginalQuantity OriginalQuantity
		{
			get
			{
				return this.originalQuantity;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the complex filter used to remove records from the result set.
		/// </summary>
		public FluidTrade.Core.ComplexFilter<FluidTrade.Guardian.ExecutionRow> Prefilter
		{
			get
			{
				return this.prefilter;
			}
			set
			{
				this.prefilter = value;
			}
		}
		
		/// <summary>
		/// Gets or sets the delegate used to select a destination record from a source.
		/// </summary>
		public System.Func<FluidTrade.Guardian.ExecutionRow, FluidTrade.Guardian.Schema.Execution.Execution> Selector
		{
			get
			{
				return this.selector;
			}
			set
			{
				this.selector = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.ExecutionHeader.ExecutionHeader records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.ExecutionHeader.ExecutionHeader, FluidTrade.Guardian.Schema.ExecutionHeader.ExecutionHeader> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.ExecutionHeader.ExecutionHeader.selectSelf;
			}
		}
		
		/// <summary>
		/// SourceStateCode
		/// </summary>
		public FluidTrade.Guardian.Schema.ExecutionHeader.SourceStateCode SourceStateCode
		{
			get
			{
				return this.sourceStateCode;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// UserFee0
		/// </summary>
		public FluidTrade.Guardian.Schema.ExecutionHeader.UserFee0 UserFee0
		{
			get
			{
				return this.userFee0;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// UserFee1
		/// </summary>
		public FluidTrade.Guardian.Schema.ExecutionHeader.UserFee1 UserFee1
		{
			get
			{
				return this.userFee1;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// UserFee2
		/// </summary>
		public FluidTrade.Guardian.Schema.ExecutionHeader.UserFee2 UserFee2
		{
			get
			{
				return this.userFee2;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// UserFee3
		/// </summary>
		public FluidTrade.Guardian.Schema.ExecutionHeader.UserFee3 UserFee3
		{
			get
			{
				return this.userFee3;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.ExecutionHeader.ExecutionHeader to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.ExecutionHeader.ExecutionHeader executionHeader = ((FluidTrade.Guardian.Schema.ExecutionHeader.ExecutionHeader)(iContent));
			this.accruedInterest.Copy(executionHeader.accruedInterest);
			this.brokerAccountId.Copy(executionHeader.brokerAccountId);
			this.commission.Copy(executionHeader.commission);
			this.createdTime.Copy(executionHeader.createdTime);
			this.createdUserId.Copy(executionHeader.createdUserId);
			this.destinationOrderId.Copy(executionHeader.destinationOrderId);
			this.destinationStateCode.Copy(executionHeader.destinationStateCode);
			this.executionPrice.Copy(executionHeader.executionPrice);
			this.executionQuantity.Copy(executionHeader.executionQuantity);
			this.fixMessageId.Copy(executionHeader.fixMessageId);
			this.isHidden.Copy(executionHeader.isHidden);
			this.modifiedTime.Copy(executionHeader.modifiedTime);
			this.modifiedUserId.Copy(executionHeader.modifiedUserId);
			this.originalPrice.Copy(executionHeader.originalPrice);
			this.originalQuantity.Copy(executionHeader.originalQuantity);
			this.sourceStateCode.Copy(executionHeader.sourceStateCode);
			this.userFee0.Copy(executionHeader.userFee0);
			this.userFee1.Copy(executionHeader.userFee1);
			this.userFee2.Copy(executionHeader.userFee2);
			this.userFee3.Copy(executionHeader.userFee3);
		}
		
		/// <summary>
		/// Creates a FluidTrade.Guardian.Schema.ExecutionHeader.ExecutionHeader.
		/// </summary>
		public FluidTrade.Guardian.Schema.ExecutionHeader.ExecutionHeader Select(System.Guid guid)
		{
			this.key = guid;
			System.Collections.Generic.IEnumerable<FluidTrade.Guardian.ExecutionRow> d69873681fd9e4d5689bd64b43fecc02c = System.Linq.Enumerable.Where<FluidTrade.Guardian.ExecutionRow>(DataModel.Execution, this.prefilter.Filter);
			System.Collections.Generic.IEnumerable<FluidTrade.Guardian.Schema.Execution.Execution> u63a6d197d681469cb8a05c7aa1510ea4 = System.Linq.Enumerable.Select<FluidTrade.Guardian.ExecutionRow, FluidTrade.Guardian.Schema.Execution.Execution>(d69873681fd9e4d5689bd64b43fecc02c, this.selector);
			System.Collections.Generic.IEnumerable<FluidTrade.Guardian.Schema.Execution.Execution> p28464f8c5a5e4ec39d954c16b4edba45 = System.Linq.Enumerable.Where<FluidTrade.Guardian.Schema.Execution.Execution>(u63a6d197d681469cb8a05c7aa1510ea4, this.filter.Filter);
			System.Collections.Generic.IEnumerable<FluidTrade.Guardian.Schema.Execution.Execution> sfd3f0d93d5004c1e817c972c36644a39 = System.Linq.Enumerable.OrderBy<FluidTrade.Guardian.Schema.Execution.Execution, FluidTrade.Guardian.Schema.Execution.Execution>(p28464f8c5a5e4ec39d954c16b4edba45, FluidTrade.Guardian.Schema.Execution.Execution.SelectSelf, this.comparer);
			this.executionList = System.Linq.Enumerable.ToArray(sfd3f0d93d5004c1e817c972c36644a39);
			return this;
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.ExecutionHeader.ExecutionHeader SelectFromSelf(FluidTrade.Guardian.Schema.ExecutionHeader.ExecutionHeader executionHeader)
		{
			return executionHeader;
		}
	}
}
