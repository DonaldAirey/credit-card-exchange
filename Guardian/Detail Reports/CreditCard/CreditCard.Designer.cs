//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3074
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Windows.Markup.XmlnsDefinitionAttribute("urn:schemas-fluidtrade-com:guardian:credit-card", "FluidTrade.Guardian.Schema.CreditCard")]

namespace FluidTrade.Guardian.Schema.CreditCard
{
	
	
	/// <summary>
	/// This class provides the AccountBalance data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class AccountBalance : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.CreditCard.AccountBalance, FluidTrade.Guardian.Schema.CreditCard.AccountBalance> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static AccountBalance()
		{
			FluidTrade.Guardian.Schema.CreditCard.AccountBalance.selectSelf = new System.Func<FluidTrade.Guardian.Schema.CreditCard.AccountBalance, FluidTrade.Guardian.Schema.CreditCard.AccountBalance>(FluidTrade.Guardian.Schema.CreditCard.AccountBalance.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.CreditCard.AccountBalance records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.CreditCard.AccountBalance, FluidTrade.Guardian.Schema.CreditCard.AccountBalance> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.CreditCard.AccountBalance.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.CreditCard.AccountBalance to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.CreditCard.AccountBalance accountBalance = ((FluidTrade.Guardian.Schema.CreditCard.AccountBalance)(iContent));
			if ((this.text != accountBalance.text))
			{
				this.text = accountBalance.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.CreditCard.AccountBalance SelectFromSelf(FluidTrade.Guardian.Schema.CreditCard.AccountBalance accountBalance)
		{
			return accountBalance;
		}
	}
	
	/// <summary>
	/// This class provides the AccountNumber data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class AccountNumber : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.CreditCard.AccountNumber, FluidTrade.Guardian.Schema.CreditCard.AccountNumber> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static AccountNumber()
		{
			FluidTrade.Guardian.Schema.CreditCard.AccountNumber.selectSelf = new System.Func<FluidTrade.Guardian.Schema.CreditCard.AccountNumber, FluidTrade.Guardian.Schema.CreditCard.AccountNumber>(FluidTrade.Guardian.Schema.CreditCard.AccountNumber.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.CreditCard.AccountNumber records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.CreditCard.AccountNumber, FluidTrade.Guardian.Schema.CreditCard.AccountNumber> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.CreditCard.AccountNumber.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.CreditCard.AccountNumber to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.CreditCard.AccountNumber accountNumber = ((FluidTrade.Guardian.Schema.CreditCard.AccountNumber)(iContent));
			if ((this.text != accountNumber.text))
			{
				this.text = accountNumber.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.CreditCard.AccountNumber SelectFromSelf(FluidTrade.Guardian.Schema.CreditCard.AccountNumber accountNumber)
		{
			return accountNumber;
		}
	}
	
	/// <summary>
	/// This class provides the ConsumerId data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class ConsumerId : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.CreditCard.ConsumerId, FluidTrade.Guardian.Schema.CreditCard.ConsumerId> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static ConsumerId()
		{
			FluidTrade.Guardian.Schema.CreditCard.ConsumerId.selectSelf = new System.Func<FluidTrade.Guardian.Schema.CreditCard.ConsumerId, FluidTrade.Guardian.Schema.CreditCard.ConsumerId>(FluidTrade.Guardian.Schema.CreditCard.ConsumerId.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.CreditCard.ConsumerId records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.CreditCard.ConsumerId, FluidTrade.Guardian.Schema.CreditCard.ConsumerId> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.CreditCard.ConsumerId.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.CreditCard.ConsumerId to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.CreditCard.ConsumerId consumerId = ((FluidTrade.Guardian.Schema.CreditCard.ConsumerId)(iContent));
			if ((this.text != consumerId.text))
			{
				this.text = consumerId.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.CreditCard.ConsumerId SelectFromSelf(FluidTrade.Guardian.Schema.CreditCard.ConsumerId consumerId)
		{
			return consumerId;
		}
	}
	
	/// <summary>
	/// This class provides the CreditCardId data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class CreditCardId : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.CreditCard.CreditCardId, FluidTrade.Guardian.Schema.CreditCard.CreditCardId> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static CreditCardId()
		{
			FluidTrade.Guardian.Schema.CreditCard.CreditCardId.selectSelf = new System.Func<FluidTrade.Guardian.Schema.CreditCard.CreditCardId, FluidTrade.Guardian.Schema.CreditCard.CreditCardId>(FluidTrade.Guardian.Schema.CreditCard.CreditCardId.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.CreditCard.CreditCardId records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.CreditCard.CreditCardId, FluidTrade.Guardian.Schema.CreditCard.CreditCardId> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.CreditCard.CreditCardId.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.CreditCard.CreditCardId to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.CreditCard.CreditCardId creditCardId = ((FluidTrade.Guardian.Schema.CreditCard.CreditCardId)(iContent));
			if ((this.text != creditCardId.text))
			{
				this.text = creditCardId.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.CreditCard.CreditCardId SelectFromSelf(FluidTrade.Guardian.Schema.CreditCard.CreditCardId creditCardId)
		{
			return creditCardId;
		}
	}
	
	/// <summary>
	/// This class provides the HeatIndex data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class HeatIndex : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal decimal index;
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.CreditCard.HeatIndex, FluidTrade.Guardian.Schema.CreditCard.HeatIndex> selectSelf;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static HeatIndex()
		{
			FluidTrade.Guardian.Schema.CreditCard.HeatIndex.selectSelf = new System.Func<FluidTrade.Guardian.Schema.CreditCard.HeatIndex, FluidTrade.Guardian.Schema.CreditCard.HeatIndex>(FluidTrade.Guardian.Schema.CreditCard.HeatIndex.SelectFromSelf);
		}
		
		/// <summary>
		/// Index
		/// </summary>
		public decimal Index
		{
			get
			{
				return this.index;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.CreditCard.HeatIndex records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.CreditCard.HeatIndex, FluidTrade.Guardian.Schema.CreditCard.HeatIndex> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.CreditCard.HeatIndex.selectSelf;
			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.CreditCard.HeatIndex to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.CreditCard.HeatIndex heatIndex = ((FluidTrade.Guardian.Schema.CreditCard.HeatIndex)(iContent));
			if ((this.isActive != heatIndex.isActive))
			{
				this.isActive = heatIndex.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.index != heatIndex.index))
			{
				this.index = heatIndex.index;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Index"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.CreditCard.HeatIndex SelectFromSelf(FluidTrade.Guardian.Schema.CreditCard.HeatIndex heatIndex)
		{
			return heatIndex;
		}
	}
	
	/// <summary>
	/// This class provides the FirstName data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class FirstName : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.CreditCard.FirstName, FluidTrade.Guardian.Schema.CreditCard.FirstName> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static FirstName()
		{
			FluidTrade.Guardian.Schema.CreditCard.FirstName.selectSelf = new System.Func<FluidTrade.Guardian.Schema.CreditCard.FirstName, FluidTrade.Guardian.Schema.CreditCard.FirstName>(FluidTrade.Guardian.Schema.CreditCard.FirstName.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.CreditCard.FirstName records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.CreditCard.FirstName, FluidTrade.Guardian.Schema.CreditCard.FirstName> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.CreditCard.FirstName.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.CreditCard.FirstName to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.CreditCard.FirstName firstName = ((FluidTrade.Guardian.Schema.CreditCard.FirstName)(iContent));
			if ((this.text != firstName.text))
			{
				this.text = firstName.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.CreditCard.FirstName SelectFromSelf(FluidTrade.Guardian.Schema.CreditCard.FirstName firstName)
		{
			return firstName;
		}
	}
	
	/// <summary>
	/// This class provides the LastName data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class LastName : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.CreditCard.LastName, FluidTrade.Guardian.Schema.CreditCard.LastName> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static LastName()
		{
			FluidTrade.Guardian.Schema.CreditCard.LastName.selectSelf = new System.Func<FluidTrade.Guardian.Schema.CreditCard.LastName, FluidTrade.Guardian.Schema.CreditCard.LastName>(FluidTrade.Guardian.Schema.CreditCard.LastName.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.CreditCard.LastName records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.CreditCard.LastName, FluidTrade.Guardian.Schema.CreditCard.LastName> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.CreditCard.LastName.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.CreditCard.LastName to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.CreditCard.LastName lastName = ((FluidTrade.Guardian.Schema.CreditCard.LastName)(iContent));
			if ((this.text != lastName.text))
			{
				this.text = lastName.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.CreditCard.LastName SelectFromSelf(FluidTrade.Guardian.Schema.CreditCard.LastName lastName)
		{
			return lastName;
		}
	}
	
	/// <summary>
	/// This class provides the DebtHolderName data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class DebtHolderName : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.CreditCard.DebtHolderName, FluidTrade.Guardian.Schema.CreditCard.DebtHolderName> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static DebtHolderName()
		{
			FluidTrade.Guardian.Schema.CreditCard.DebtHolderName.selectSelf = new System.Func<FluidTrade.Guardian.Schema.CreditCard.DebtHolderName, FluidTrade.Guardian.Schema.CreditCard.DebtHolderName>(FluidTrade.Guardian.Schema.CreditCard.DebtHolderName.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.CreditCard.DebtHolderName records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.CreditCard.DebtHolderName, FluidTrade.Guardian.Schema.CreditCard.DebtHolderName> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.CreditCard.DebtHolderName.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.CreditCard.DebtHolderName to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.CreditCard.DebtHolderName debtHolderName = ((FluidTrade.Guardian.Schema.CreditCard.DebtHolderName)(iContent));
			if ((this.text != debtHolderName.text))
			{
				this.text = debtHolderName.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.CreditCard.DebtHolderName SelectFromSelf(FluidTrade.Guardian.Schema.CreditCard.DebtHolderName debtHolderName)
		{
			return debtHolderName;
		}
	}
	
	/// <summary>
	/// This class provides the OriginalAccountNumber data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class OriginalAccountNumber : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.CreditCard.OriginalAccountNumber, FluidTrade.Guardian.Schema.CreditCard.OriginalAccountNumber> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static OriginalAccountNumber()
		{
			FluidTrade.Guardian.Schema.CreditCard.OriginalAccountNumber.selectSelf = new System.Func<FluidTrade.Guardian.Schema.CreditCard.OriginalAccountNumber, FluidTrade.Guardian.Schema.CreditCard.OriginalAccountNumber>(FluidTrade.Guardian.Schema.CreditCard.OriginalAccountNumber.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.CreditCard.OriginalAccountNumber records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.CreditCard.OriginalAccountNumber, FluidTrade.Guardian.Schema.CreditCard.OriginalAccountNumber> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.CreditCard.OriginalAccountNumber.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.CreditCard.OriginalAccountNumber to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.CreditCard.OriginalAccountNumber originalAccountNumber = ((FluidTrade.Guardian.Schema.CreditCard.OriginalAccountNumber)(iContent));
			if ((this.text != originalAccountNumber.text))
			{
				this.text = originalAccountNumber.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.CreditCard.OriginalAccountNumber SelectFromSelf(FluidTrade.Guardian.Schema.CreditCard.OriginalAccountNumber originalAccountNumber)
		{
			return originalAccountNumber;
		}
	}
	
	/// <summary>
	/// This class provides the SelectRow data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class SelectRow : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		internal string name;
		
		private static System.Func<FluidTrade.Guardian.Schema.CreditCard.SelectRow, FluidTrade.Guardian.Schema.CreditCard.SelectRow> selectSelf;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static SelectRow()
		{
			FluidTrade.Guardian.Schema.CreditCard.SelectRow.selectSelf = new System.Func<FluidTrade.Guardian.Schema.CreditCard.SelectRow, FluidTrade.Guardian.Schema.CreditCard.SelectRow>(FluidTrade.Guardian.Schema.CreditCard.SelectRow.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Name
		/// </summary>
		public string Name
		{
			get
			{
				return this.name;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.CreditCard.SelectRow records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.CreditCard.SelectRow, FluidTrade.Guardian.Schema.CreditCard.SelectRow> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.CreditCard.SelectRow.selectSelf;
			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.CreditCard.SelectRow to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.CreditCard.SelectRow selectRow = ((FluidTrade.Guardian.Schema.CreditCard.SelectRow)(iContent));
			if ((this.isActive != selectRow.isActive))
			{
				this.isActive = selectRow.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.name != selectRow.name))
			{
				this.name = selectRow.name;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Name"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.CreditCard.SelectRow SelectFromSelf(FluidTrade.Guardian.Schema.CreditCard.SelectRow selectRow)
		{
			return selectRow;
		}
	}
	
	/// <summary>
	/// This class provides the SocialSecurity data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class SocialSecurity : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.CreditCard.SocialSecurity, FluidTrade.Guardian.Schema.CreditCard.SocialSecurity> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static SocialSecurity()
		{
			FluidTrade.Guardian.Schema.CreditCard.SocialSecurity.selectSelf = new System.Func<FluidTrade.Guardian.Schema.CreditCard.SocialSecurity, FluidTrade.Guardian.Schema.CreditCard.SocialSecurity>(FluidTrade.Guardian.Schema.CreditCard.SocialSecurity.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.CreditCard.SocialSecurity records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.CreditCard.SocialSecurity, FluidTrade.Guardian.Schema.CreditCard.SocialSecurity> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.CreditCard.SocialSecurity.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.CreditCard.SocialSecurity to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.CreditCard.SocialSecurity socialSecurity = ((FluidTrade.Guardian.Schema.CreditCard.SocialSecurity)(iContent));
			if ((this.text != socialSecurity.text))
			{
				this.text = socialSecurity.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.CreditCard.SocialSecurity SelectFromSelf(FluidTrade.Guardian.Schema.CreditCard.SocialSecurity socialSecurity)
		{
			return socialSecurity;
		}
	}
	
	/// <summary>
	/// This class provides the RuleId data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class RuleId : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal System.Guid debtRuleId;
		
		internal bool isActive;
		
		internal object key;
		
		internal System.Guid parentId;
		
		private static System.Func<FluidTrade.Guardian.Schema.CreditCard.RuleId, FluidTrade.Guardian.Schema.CreditCard.RuleId> selectSelf;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static RuleId()
		{
			FluidTrade.Guardian.Schema.CreditCard.RuleId.selectSelf = new System.Func<FluidTrade.Guardian.Schema.CreditCard.RuleId, FluidTrade.Guardian.Schema.CreditCard.RuleId>(FluidTrade.Guardian.Schema.CreditCard.RuleId.SelectFromSelf);
		}
		
		/// <summary>
		/// DebtRuleId
		/// </summary>
		public System.Guid DebtRuleId
		{
			get
			{
				return this.debtRuleId;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// ParentId
		/// </summary>
		public System.Guid ParentId
		{
			get
			{
				return this.parentId;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.CreditCard.RuleId records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.CreditCard.RuleId, FluidTrade.Guardian.Schema.CreditCard.RuleId> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.CreditCard.RuleId.selectSelf;
			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.CreditCard.RuleId to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.CreditCard.RuleId ruleId = ((FluidTrade.Guardian.Schema.CreditCard.RuleId)(iContent));
			if ((this.isActive != ruleId.isActive))
			{
				this.isActive = ruleId.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.parentId != ruleId.parentId))
			{
				this.parentId = ruleId.parentId;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("ParentId"));
				}
			}
			if ((this.debtRuleId != ruleId.debtRuleId))
			{
				this.debtRuleId = ruleId.debtRuleId;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("DebtRuleId"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.CreditCard.RuleId SelectFromSelf(FluidTrade.Guardian.Schema.CreditCard.RuleId ruleId)
		{
			return ruleId;
		}
	}
	
	/// <summary>
	/// This class provides the CreditCard data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class CreditCard : FluidTrade.Core.IContent
	{
		
		internal FluidTrade.Guardian.Schema.CreditCard.AccountBalance accountBalance;
		
		internal FluidTrade.Guardian.Schema.CreditCard.AccountNumber accountNumber;
		
		internal FluidTrade.Guardian.Schema.CreditCard.ConsumerId consumerId;
		
		internal FluidTrade.Guardian.Schema.CreditCard.CreditCardId creditCardId;
		
		internal FluidTrade.Guardian.Schema.CreditCard.DebtHolderName debtHolderName;
		
		internal FluidTrade.Guardian.Schema.CreditCard.FirstName firstName;
		
		internal FluidTrade.Guardian.Schema.CreditCard.HeatIndex heatIndex;
		
		internal object key;
		
		internal FluidTrade.Guardian.Schema.CreditCard.LastName lastName;
		
		internal FluidTrade.Guardian.Schema.CreditCard.OriginalAccountNumber originalAccountNumber;
		
		internal FluidTrade.Guardian.Schema.CreditCard.RuleId ruleId;
		
		internal FluidTrade.Guardian.Schema.CreditCard.SelectRow selectRow;
		
		private static System.Func<FluidTrade.Guardian.Schema.CreditCard.CreditCard, FluidTrade.Guardian.Schema.CreditCard.CreditCard> selectSelf;
		
		internal FluidTrade.Guardian.Schema.CreditCard.SocialSecurity socialSecurity;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static CreditCard()
		{
			FluidTrade.Guardian.Schema.CreditCard.CreditCard.selectSelf = new System.Func<FluidTrade.Guardian.Schema.CreditCard.CreditCard, FluidTrade.Guardian.Schema.CreditCard.CreditCard>(FluidTrade.Guardian.Schema.CreditCard.CreditCard.SelectFromSelf);
		}
		
		/// <summary>
		/// Creates a FluidTrade.Guardian.Schema.CreditCard.CreditCard.
		/// </summary>
		public CreditCard()
		{
			this.accountBalance = new FluidTrade.Guardian.Schema.CreditCard.AccountBalance();
			this.accountNumber = new FluidTrade.Guardian.Schema.CreditCard.AccountNumber();
			this.consumerId = new FluidTrade.Guardian.Schema.CreditCard.ConsumerId();
			this.creditCardId = new FluidTrade.Guardian.Schema.CreditCard.CreditCardId();
			this.heatIndex = new FluidTrade.Guardian.Schema.CreditCard.HeatIndex();
			this.firstName = new FluidTrade.Guardian.Schema.CreditCard.FirstName();
			this.lastName = new FluidTrade.Guardian.Schema.CreditCard.LastName();
			this.debtHolderName = new FluidTrade.Guardian.Schema.CreditCard.DebtHolderName();
			this.selectRow = new FluidTrade.Guardian.Schema.CreditCard.SelectRow();
			this.socialSecurity = new FluidTrade.Guardian.Schema.CreditCard.SocialSecurity();
			this.originalAccountNumber = new FluidTrade.Guardian.Schema.CreditCard.OriginalAccountNumber();
			this.ruleId = new FluidTrade.Guardian.Schema.CreditCard.RuleId();
		}
		
		/// <summary>
		/// AccountBalance
		/// </summary>
		public FluidTrade.Guardian.Schema.CreditCard.AccountBalance AccountBalance
		{
			get
			{
				return this.accountBalance;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// AccountNumber
		/// </summary>
		public FluidTrade.Guardian.Schema.CreditCard.AccountNumber AccountNumber
		{
			get
			{
				return this.accountNumber;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// ConsumerId
		/// </summary>
		public FluidTrade.Guardian.Schema.CreditCard.ConsumerId ConsumerId
		{
			get
			{
				return this.consumerId;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// CreditCardId
		/// </summary>
		public FluidTrade.Guardian.Schema.CreditCard.CreditCardId CreditCardId
		{
			get
			{
				return this.creditCardId;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// DebtHolderName
		/// </summary>
		public FluidTrade.Guardian.Schema.CreditCard.DebtHolderName DebtHolderName
		{
			get
			{
				return this.debtHolderName;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// FirstName
		/// </summary>
		public FluidTrade.Guardian.Schema.CreditCard.FirstName FirstName
		{
			get
			{
				return this.firstName;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// HeatIndex
		/// </summary>
		public FluidTrade.Guardian.Schema.CreditCard.HeatIndex HeatIndex
		{
			get
			{
				return this.heatIndex;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// LastName
		/// </summary>
		public FluidTrade.Guardian.Schema.CreditCard.LastName LastName
		{
			get
			{
				return this.lastName;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// OriginalAccountNumber
		/// </summary>
		public FluidTrade.Guardian.Schema.CreditCard.OriginalAccountNumber OriginalAccountNumber
		{
			get
			{
				return this.originalAccountNumber;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// RuleId
		/// </summary>
		public FluidTrade.Guardian.Schema.CreditCard.RuleId RuleId
		{
			get
			{
				return this.ruleId;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// SelectRow
		/// </summary>
		public FluidTrade.Guardian.Schema.CreditCard.SelectRow SelectRow
		{
			get
			{
				return this.selectRow;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.CreditCard.CreditCard records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.CreditCard.CreditCard, FluidTrade.Guardian.Schema.CreditCard.CreditCard> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.CreditCard.CreditCard.selectSelf;
			}
		}
		
		/// <summary>
		/// SocialSecurity
		/// </summary>
		public FluidTrade.Guardian.Schema.CreditCard.SocialSecurity SocialSecurity
		{
			get
			{
				return this.socialSecurity;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.CreditCard.CreditCard to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.CreditCard.CreditCard creditCard = ((FluidTrade.Guardian.Schema.CreditCard.CreditCard)(iContent));
			this.accountBalance.Copy(creditCard.accountBalance);
			this.accountNumber.Copy(creditCard.accountNumber);
			this.consumerId.Copy(creditCard.consumerId);
			this.creditCardId.Copy(creditCard.creditCardId);
			this.heatIndex.Copy(creditCard.heatIndex);
			this.firstName.Copy(creditCard.firstName);
			this.lastName.Copy(creditCard.lastName);
			this.debtHolderName.Copy(creditCard.debtHolderName);
			this.selectRow.Copy(creditCard.selectRow);
			this.socialSecurity.Copy(creditCard.socialSecurity);
			this.originalAccountNumber.Copy(creditCard.originalAccountNumber);
			this.ruleId.Copy(creditCard.ruleId);
		}
		
		/// <summary>
		/// Creates a FluidTrade.Guardian.Schema.CreditCard.CreditCard.
		/// </summary>
		public FluidTrade.Guardian.Schema.CreditCard.CreditCard Select(FluidTrade.Guardian.CreditCardRow creditCardRow)
		{
			this.key = creditCardRow;
ConsumerRow consumerRow = creditCardRow.ConsumerRow;
ConsumerTrustRow  consumerTrustRow = consumerRow.GetConsumerTrustRows()[0];
WorkingOrderRow workingOrderRow = consumerTrustRow.SecurityRow.GetWorkingOrderRowsByFK_Security_WorkingOrder_SecurityId()[0];

						MatchRow matchRow = null;

						var matchRows = workingOrderRow.GetMatchRows();

						if(matchRows != null && matchRows.Length > 0)
						matchRow = matchRows[0];

					;
			this.accountBalance.key = new FluidTrade.Core.DataTableCoordinate(creditCardRow, DataModel.CreditCard.AccountBalanceColumn);
			this.accountBalance.text = creditCardRow.AccountBalance;
			this.accountNumber.key = new FluidTrade.Core.DataTableCoordinate(creditCardRow, DataModel.CreditCard.AccountNumberColumn);
			this.accountNumber.text = creditCardRow.AccountNumber;
			this.consumerId.key = new FluidTrade.Core.DataTableCoordinate(creditCardRow, DataModel.CreditCard.ConsumerIdColumn);
			this.consumerId.text = creditCardRow.ConsumerId;
			this.creditCardId.key = new FluidTrade.Core.DataTableCoordinate(creditCardRow, DataModel.CreditCard.CreditCardIdColumn);
			this.creditCardId.text = creditCardRow.CreditCardId;
			this.heatIndex.isActive = workingOrderRow.StatusRow.StatusCode != FluidTrade.Guardian.Status.Filled;

							decimal index = 0.0m;

							foreach (ConsumerTrustNegotiationRow consumerTrustNegotiationRow in creditCardRow.GetConsumerTrustNegotiationRows())
								if (creditCardRow.CreditCardId == consumerTrustNegotiationRow.CreditCardId)
									index = consumerTrustNegotiationRow.MatchRow.HeatIndex;

							index = (decimal)((int)(index*100))/100;
			this.heatIndex.index = 
							index
						;
			this.firstName.key = new FluidTrade.Core.DataTableCoordinate(consumerRow, DataModel.Consumer.FirstNameColumn, workingOrderRow.WorkingOrderId);
			this.firstName.text = consumerRow.IsFirstNameNull() ? "" : consumerRow.FirstName;
			this.lastName.key = new FluidTrade.Core.DataTableCoordinate(consumerRow, DataModel.Consumer.LastNameColumn, workingOrderRow.WorkingOrderId);
			this.lastName.text = consumerRow.IsLastNameNull() ? "" : consumerRow.LastName;
			this.debtHolderName.key = new FluidTrade.Core.DataTableCoordinate(creditCardRow, DataModel.CreditCard.DebtHolderColumn);
			this.debtHolderName.text = creditCardRow.IsDebtHolderNull() ? System.String.Empty : creditCardRow.DebtHolder;
			this.socialSecurity.key = new FluidTrade.Core.DataTableCoordinate(consumerRow, DataModel.Consumer.SocialSecurityNumberColumn, workingOrderRow.WorkingOrderId );
			this.socialSecurity.text = consumerRow.SocialSecurityNumber;
			this.originalAccountNumber.key = new FluidTrade.Core.DataTableCoordinate(creditCardRow, DataModel.CreditCard.OriginalAccountNumberColumn);
			this.originalAccountNumber.text = creditCardRow.OriginalAccountNumber;
			this.ruleId.isActive = workingOrderRow.StatusRow.StatusCode != FluidTrade.Guardian.Status.Filled;
			this.ruleId.key = new FluidTrade.Core.DataTableCoordinate(creditCardRow, DataModel.CreditCard.DebtRuleIdColumn);
			this.ruleId.parentId = workingOrderRow.BlotterId;

							System.Guid debtRuleId = System.Guid.Empty;

							if(creditCardRow.IsDebtRuleIdNull() == false)
							debtRuleId = creditCardRow.DebtRuleId;
			this.ruleId.debtRuleId = 
							debtRuleId
						;
			return this;
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.CreditCard.CreditCard SelectFromSelf(FluidTrade.Guardian.Schema.CreditCard.CreditCard creditCard)
		{
			return creditCard;
		}
	}
}
