//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3074
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Windows.Markup.XmlnsDefinitionAttribute("urn:schemas-fluidtrade-com:guardian:debt-holder-settlement", "FluidTrade.Guardian.Schema.DebtHolderSettlement")]

namespace FluidTrade.Guardian.Schema.DebtHolderSettlement
{
	
	
	/// <summary>
	/// This class provides the AccountBalance data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class AccountBalance : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.AccountBalance, FluidTrade.Guardian.Schema.DebtHolderSettlement.AccountBalance> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static AccountBalance()
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.AccountBalance.selectSelf = new System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.AccountBalance, FluidTrade.Guardian.Schema.DebtHolderSettlement.AccountBalance>(FluidTrade.Guardian.Schema.DebtHolderSettlement.AccountBalance.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.DebtHolderSettlement.AccountBalance records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.AccountBalance, FluidTrade.Guardian.Schema.DebtHolderSettlement.AccountBalance> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.DebtHolderSettlement.AccountBalance.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.DebtHolderSettlement.AccountBalance to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.AccountBalance accountBalance = ((FluidTrade.Guardian.Schema.DebtHolderSettlement.AccountBalance)(iContent));
			if ((this.isActive != accountBalance.isActive))
			{
				this.isActive = accountBalance.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != accountBalance.text))
			{
				this.text = accountBalance.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.DebtHolderSettlement.AccountBalance SelectFromSelf(FluidTrade.Guardian.Schema.DebtHolderSettlement.AccountBalance accountBalance)
		{
			return accountBalance;
		}
	}
	
	/// <summary>
	/// This class provides the CreatedBy data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class CreatedBy : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		internal string name;
		
		private static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.CreatedBy, FluidTrade.Guardian.Schema.DebtHolderSettlement.CreatedBy> selectSelf;
		
		internal System.Guid userId;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static CreatedBy()
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.CreatedBy.selectSelf = new System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.CreatedBy, FluidTrade.Guardian.Schema.DebtHolderSettlement.CreatedBy>(FluidTrade.Guardian.Schema.DebtHolderSettlement.CreatedBy.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Name
		/// </summary>
		public string Name
		{
			get
			{
				return this.name;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.DebtHolderSettlement.CreatedBy records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.CreatedBy, FluidTrade.Guardian.Schema.DebtHolderSettlement.CreatedBy> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.DebtHolderSettlement.CreatedBy.selectSelf;
			}
		}
		
		/// <summary>
		/// UserId
		/// </summary>
		public System.Guid UserId
		{
			get
			{
				return this.userId;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.DebtHolderSettlement.CreatedBy to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.CreatedBy createdBy = ((FluidTrade.Guardian.Schema.DebtHolderSettlement.CreatedBy)(iContent));
			if ((this.isActive != createdBy.isActive))
			{
				this.isActive = createdBy.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.name != createdBy.name))
			{
				this.name = createdBy.name;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Name"));
				}
			}
			if ((this.userId != createdBy.userId))
			{
				this.userId = createdBy.userId;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("UserId"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.DebtHolderSettlement.CreatedBy SelectFromSelf(FluidTrade.Guardian.Schema.DebtHolderSettlement.CreatedBy createdBy)
		{
			return createdBy;
		}
	}
	
	/// <summary>
	/// This class provides the CreatedDateTime data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class CreatedDateTime : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal System.DateTime dateTime;
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.CreatedDateTime, FluidTrade.Guardian.Schema.DebtHolderSettlement.CreatedDateTime> selectSelf;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static CreatedDateTime()
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.CreatedDateTime.selectSelf = new System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.CreatedDateTime, FluidTrade.Guardian.Schema.DebtHolderSettlement.CreatedDateTime>(FluidTrade.Guardian.Schema.DebtHolderSettlement.CreatedDateTime.SelectFromSelf);
		}
		
		/// <summary>
		/// DateTime
		/// </summary>
		public System.DateTime DateTime
		{
			get
			{
				return this.dateTime;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.DebtHolderSettlement.CreatedDateTime records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.CreatedDateTime, FluidTrade.Guardian.Schema.DebtHolderSettlement.CreatedDateTime> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.DebtHolderSettlement.CreatedDateTime.selectSelf;
			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.DebtHolderSettlement.CreatedDateTime to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.CreatedDateTime createdDateTime = ((FluidTrade.Guardian.Schema.DebtHolderSettlement.CreatedDateTime)(iContent));
			if ((this.isActive != createdDateTime.isActive))
			{
				this.isActive = createdDateTime.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.dateTime != createdDateTime.dateTime))
			{
				this.dateTime = createdDateTime.dateTime;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("DateTime"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.DebtHolderSettlement.CreatedDateTime SelectFromSelf(FluidTrade.Guardian.Schema.DebtHolderSettlement.CreatedDateTime createdDateTime)
		{
			return createdDateTime;
		}
	}
	
	/// <summary>
	/// This class provides the DebtHolder data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class DebtHolder : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtHolder, FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtHolder> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static DebtHolder()
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtHolder.selectSelf = new System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtHolder, FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtHolder>(FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtHolder.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtHolder records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtHolder, FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtHolder> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtHolder.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtHolder to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtHolder debtHolder = ((FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtHolder)(iContent));
			if ((this.isActive != debtHolder.isActive))
			{
				this.isActive = debtHolder.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != debtHolder.text))
			{
				this.text = debtHolder.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtHolder SelectFromSelf(FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtHolder debtHolder)
		{
			return debtHolder;
		}
	}
	
	/// <summary>
	/// This class provides the DebtNegotiator data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class DebtNegotiator : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal System.Guid id;
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtNegotiator, FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtNegotiator> selectSelf;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static DebtNegotiator()
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtNegotiator.selectSelf = new System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtNegotiator, FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtNegotiator>(FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtNegotiator.SelectFromSelf);
		}
		
		/// <summary>
		/// Id
		/// </summary>
		public System.Guid Id
		{
			get
			{
				return this.id;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtNegotiator records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtNegotiator, FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtNegotiator> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtNegotiator.selectSelf;
			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtNegotiator to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtNegotiator debtNegotiator = ((FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtNegotiator)(iContent));
			if ((this.isActive != debtNegotiator.isActive))
			{
				this.isActive = debtNegotiator.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.id != debtNegotiator.id))
			{
				this.id = debtNegotiator.id;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Id"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtNegotiator SelectFromSelf(FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtNegotiator debtNegotiator)
		{
			return debtNegotiator;
		}
	}
	
	/// <summary>
	/// This class provides the DebtorFirstName data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class DebtorFirstName : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorFirstName, FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorFirstName> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static DebtorFirstName()
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorFirstName.selectSelf = new System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorFirstName, FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorFirstName>(FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorFirstName.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorFirstName records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorFirstName, FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorFirstName> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorFirstName.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorFirstName to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorFirstName debtorFirstName = ((FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorFirstName)(iContent));
			if ((this.isActive != debtorFirstName.isActive))
			{
				this.isActive = debtorFirstName.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != debtorFirstName.text))
			{
				this.text = debtorFirstName.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorFirstName SelectFromSelf(FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorFirstName debtorFirstName)
		{
			return debtorFirstName;
		}
	}
	
	/// <summary>
	/// This class provides the DebtorMiddleName data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class DebtorMiddleName : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorMiddleName, FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorMiddleName> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static DebtorMiddleName()
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorMiddleName.selectSelf = new System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorMiddleName, FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorMiddleName>(FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorMiddleName.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorMiddleName records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorMiddleName, FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorMiddleName> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorMiddleName.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorMiddleName to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorMiddleName debtorMiddleName = ((FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorMiddleName)(iContent));
			if ((this.isActive != debtorMiddleName.isActive))
			{
				this.isActive = debtorMiddleName.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != debtorMiddleName.text))
			{
				this.text = debtorMiddleName.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorMiddleName SelectFromSelf(FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorMiddleName debtorMiddleName)
		{
			return debtorMiddleName;
		}
	}
	
	/// <summary>
	/// This class provides the DebtorLastName data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class DebtorLastName : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorLastName, FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorLastName> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static DebtorLastName()
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorLastName.selectSelf = new System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorLastName, FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorLastName>(FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorLastName.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorLastName records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorLastName, FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorLastName> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorLastName.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorLastName to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorLastName debtorLastName = ((FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorLastName)(iContent));
			if ((this.isActive != debtorLastName.isActive))
			{
				this.isActive = debtorLastName.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != debtorLastName.text))
			{
				this.text = debtorLastName.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorLastName SelectFromSelf(FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorLastName debtorLastName)
		{
			return debtorLastName;
		}
	}
	
	/// <summary>
	/// This class provides the DebtorAddress1 data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class DebtorAddress1 : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorAddress1, FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorAddress1> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static DebtorAddress1()
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorAddress1.selectSelf = new System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorAddress1, FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorAddress1>(FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorAddress1.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorAddress1 records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorAddress1, FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorAddress1> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorAddress1.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorAddress1 to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorAddress1 debtorAddress1 = ((FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorAddress1)(iContent));
			if ((this.isActive != debtorAddress1.isActive))
			{
				this.isActive = debtorAddress1.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != debtorAddress1.text))
			{
				this.text = debtorAddress1.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorAddress1 SelectFromSelf(FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorAddress1 debtorAddress1)
		{
			return debtorAddress1;
		}
	}
	
	/// <summary>
	/// This class provides the DebtorAddress2 data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class DebtorAddress2 : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorAddress2, FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorAddress2> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static DebtorAddress2()
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorAddress2.selectSelf = new System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorAddress2, FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorAddress2>(FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorAddress2.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorAddress2 records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorAddress2, FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorAddress2> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorAddress2.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorAddress2 to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorAddress2 debtorAddress2 = ((FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorAddress2)(iContent));
			if ((this.isActive != debtorAddress2.isActive))
			{
				this.isActive = debtorAddress2.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != debtorAddress2.text))
			{
				this.text = debtorAddress2.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorAddress2 SelectFromSelf(FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorAddress2 debtorAddress2)
		{
			return debtorAddress2;
		}
	}
	
	/// <summary>
	/// This class provides the DebtorCity data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class DebtorCity : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorCity, FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorCity> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static DebtorCity()
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorCity.selectSelf = new System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorCity, FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorCity>(FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorCity.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorCity records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorCity, FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorCity> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorCity.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorCity to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorCity debtorCity = ((FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorCity)(iContent));
			if ((this.isActive != debtorCity.isActive))
			{
				this.isActive = debtorCity.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != debtorCity.text))
			{
				this.text = debtorCity.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorCity SelectFromSelf(FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorCity debtorCity)
		{
			return debtorCity;
		}
	}
	
	/// <summary>
	/// This class provides the DebtorSalutation data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class DebtorSalutation : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorSalutation, FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorSalutation> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static DebtorSalutation()
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorSalutation.selectSelf = new System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorSalutation, FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorSalutation>(FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorSalutation.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorSalutation records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorSalutation, FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorSalutation> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorSalutation.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorSalutation to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorSalutation debtorSalutation = ((FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorSalutation)(iContent));
			if ((this.isActive != debtorSalutation.isActive))
			{
				this.isActive = debtorSalutation.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != debtorSalutation.text))
			{
				this.text = debtorSalutation.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorSalutation SelectFromSelf(FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorSalutation debtorSalutation)
		{
			return debtorSalutation;
		}
	}
	
	/// <summary>
	/// This class provides the DebtorProvince data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class DebtorProvince : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorProvince, FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorProvince> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static DebtorProvince()
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorProvince.selectSelf = new System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorProvince, FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorProvince>(FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorProvince.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorProvince records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorProvince, FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorProvince> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorProvince.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorProvince to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorProvince debtorProvince = ((FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorProvince)(iContent));
			if ((this.isActive != debtorProvince.isActive))
			{
				this.isActive = debtorProvince.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != debtorProvince.text))
			{
				this.text = debtorProvince.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorProvince SelectFromSelf(FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorProvince debtorProvince)
		{
			return debtorProvince;
		}
	}
	
	/// <summary>
	/// This class provides the DebtorSuffix data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class DebtorSuffix : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorSuffix, FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorSuffix> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static DebtorSuffix()
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorSuffix.selectSelf = new System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorSuffix, FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorSuffix>(FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorSuffix.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorSuffix records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorSuffix, FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorSuffix> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorSuffix.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorSuffix to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorSuffix debtorSuffix = ((FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorSuffix)(iContent));
			if ((this.isActive != debtorSuffix.isActive))
			{
				this.isActive = debtorSuffix.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != debtorSuffix.text))
			{
				this.text = debtorSuffix.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorSuffix SelectFromSelf(FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorSuffix debtorSuffix)
		{
			return debtorSuffix;
		}
	}
	
	/// <summary>
	/// This class provides the DebtorPostalCode data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class DebtorPostalCode : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorPostalCode, FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorPostalCode> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static DebtorPostalCode()
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorPostalCode.selectSelf = new System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorPostalCode, FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorPostalCode>(FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorPostalCode.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorPostalCode records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorPostalCode, FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorPostalCode> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorPostalCode.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorPostalCode to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorPostalCode debtorPostalCode = ((FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorPostalCode)(iContent));
			if ((this.isActive != debtorPostalCode.isActive))
			{
				this.isActive = debtorPostalCode.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != debtorPostalCode.text))
			{
				this.text = debtorPostalCode.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorPostalCode SelectFromSelf(FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorPostalCode debtorPostalCode)
		{
			return debtorPostalCode;
		}
	}
	
	/// <summary>
	/// This class provides the DebtorAccountNumber data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class DebtorAccountNumber : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorAccountNumber, FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorAccountNumber> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static DebtorAccountNumber()
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorAccountNumber.selectSelf = new System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorAccountNumber, FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorAccountNumber>(FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorAccountNumber.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorAccountNumber records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorAccountNumber, FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorAccountNumber> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorAccountNumber.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorAccountNumber to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorAccountNumber debtorAccountNumber = ((FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorAccountNumber)(iContent));
			if ((this.isActive != debtorAccountNumber.isActive))
			{
				this.isActive = debtorAccountNumber.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != debtorAccountNumber.text))
			{
				this.text = debtorAccountNumber.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorAccountNumber SelectFromSelf(FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorAccountNumber debtorAccountNumber)
		{
			return debtorAccountNumber;
		}
	}
	
	/// <summary>
	/// This class provides the DebtorBankRoutingNumber data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class DebtorBankRoutingNumber : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorBankRoutingNumber, FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorBankRoutingNumber> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static DebtorBankRoutingNumber()
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorBankRoutingNumber.selectSelf = new System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorBankRoutingNumber, FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorBankRoutingNumber>(FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorBankRoutingNumber.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorBankRoutingNumber records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorBankRoutingNumber, FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorBankRoutingNumber> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorBankRoutingNumber.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorBankRoutingNumber to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorBankRoutingNumber debtorBankRoutingNumber = ((FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorBankRoutingNumber)(iContent));
			if ((this.isActive != debtorBankRoutingNumber.isActive))
			{
				this.isActive = debtorBankRoutingNumber.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != debtorBankRoutingNumber.text))
			{
				this.text = debtorBankRoutingNumber.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorBankRoutingNumber SelectFromSelf(FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorBankRoutingNumber debtorBankRoutingNumber)
		{
			return debtorBankRoutingNumber;
		}
	}
	
	/// <summary>
	/// This class provides the DebtorBankAccountNumber data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class DebtorBankAccountNumber : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorBankAccountNumber, FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorBankAccountNumber> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static DebtorBankAccountNumber()
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorBankAccountNumber.selectSelf = new System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorBankAccountNumber, FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorBankAccountNumber>(FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorBankAccountNumber.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorBankAccountNumber records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorBankAccountNumber, FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorBankAccountNumber> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorBankAccountNumber.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorBankAccountNumber to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorBankAccountNumber debtorBankAccountNumber = ((FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorBankAccountNumber)(iContent));
			if ((this.isActive != debtorBankAccountNumber.isActive))
			{
				this.isActive = debtorBankAccountNumber.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != debtorBankAccountNumber.text))
			{
				this.text = debtorBankAccountNumber.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorBankAccountNumber SelectFromSelf(FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorBankAccountNumber debtorBankAccountNumber)
		{
			return debtorBankAccountNumber;
		}
	}
	
	/// <summary>
	/// This class provides the ModifiedBy data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class ModifiedBy : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		internal string name;
		
		private static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.ModifiedBy, FluidTrade.Guardian.Schema.DebtHolderSettlement.ModifiedBy> selectSelf;
		
		internal System.Guid userId;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static ModifiedBy()
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.ModifiedBy.selectSelf = new System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.ModifiedBy, FluidTrade.Guardian.Schema.DebtHolderSettlement.ModifiedBy>(FluidTrade.Guardian.Schema.DebtHolderSettlement.ModifiedBy.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Name
		/// </summary>
		public string Name
		{
			get
			{
				return this.name;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.DebtHolderSettlement.ModifiedBy records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.ModifiedBy, FluidTrade.Guardian.Schema.DebtHolderSettlement.ModifiedBy> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.DebtHolderSettlement.ModifiedBy.selectSelf;
			}
		}
		
		/// <summary>
		/// UserId
		/// </summary>
		public System.Guid UserId
		{
			get
			{
				return this.userId;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.DebtHolderSettlement.ModifiedBy to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.ModifiedBy modifiedBy = ((FluidTrade.Guardian.Schema.DebtHolderSettlement.ModifiedBy)(iContent));
			if ((this.isActive != modifiedBy.isActive))
			{
				this.isActive = modifiedBy.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.name != modifiedBy.name))
			{
				this.name = modifiedBy.name;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Name"));
				}
			}
			if ((this.userId != modifiedBy.userId))
			{
				this.userId = modifiedBy.userId;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("UserId"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.DebtHolderSettlement.ModifiedBy SelectFromSelf(FluidTrade.Guardian.Schema.DebtHolderSettlement.ModifiedBy modifiedBy)
		{
			return modifiedBy;
		}
	}
	
	/// <summary>
	/// This class provides the ModifiedDateTime data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class ModifiedDateTime : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal System.DateTime dateTime;
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.ModifiedDateTime, FluidTrade.Guardian.Schema.DebtHolderSettlement.ModifiedDateTime> selectSelf;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static ModifiedDateTime()
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.ModifiedDateTime.selectSelf = new System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.ModifiedDateTime, FluidTrade.Guardian.Schema.DebtHolderSettlement.ModifiedDateTime>(FluidTrade.Guardian.Schema.DebtHolderSettlement.ModifiedDateTime.SelectFromSelf);
		}
		
		/// <summary>
		/// DateTime
		/// </summary>
		public System.DateTime DateTime
		{
			get
			{
				return this.dateTime;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.DebtHolderSettlement.ModifiedDateTime records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.ModifiedDateTime, FluidTrade.Guardian.Schema.DebtHolderSettlement.ModifiedDateTime> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.DebtHolderSettlement.ModifiedDateTime.selectSelf;
			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.DebtHolderSettlement.ModifiedDateTime to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.ModifiedDateTime modifiedDateTime = ((FluidTrade.Guardian.Schema.DebtHolderSettlement.ModifiedDateTime)(iContent));
			if ((this.isActive != modifiedDateTime.isActive))
			{
				this.isActive = modifiedDateTime.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.dateTime != modifiedDateTime.dateTime))
			{
				this.dateTime = modifiedDateTime.dateTime;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("DateTime"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.DebtHolderSettlement.ModifiedDateTime SelectFromSelf(FluidTrade.Guardian.Schema.DebtHolderSettlement.ModifiedDateTime modifiedDateTime)
		{
			return modifiedDateTime;
		}
	}
	
	/// <summary>
	/// This class provides the PayeeCompanyName data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class PayeeCompanyName : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeCompanyName, FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeCompanyName> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static PayeeCompanyName()
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeCompanyName.selectSelf = new System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeCompanyName, FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeCompanyName>(FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeCompanyName.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeCompanyName records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeCompanyName, FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeCompanyName> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeCompanyName.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeCompanyName to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeCompanyName payeeCompanyName = ((FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeCompanyName)(iContent));
			if ((this.isActive != payeeCompanyName.isActive))
			{
				this.isActive = payeeCompanyName.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != payeeCompanyName.text))
			{
				this.text = payeeCompanyName.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeCompanyName SelectFromSelf(FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeCompanyName payeeCompanyName)
		{
			return payeeCompanyName;
		}
	}
	
	/// <summary>
	/// This class provides the PayeeDepartment data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class PayeeDepartment : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeDepartment, FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeDepartment> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static PayeeDepartment()
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeDepartment.selectSelf = new System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeDepartment, FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeDepartment>(FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeDepartment.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeDepartment records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeDepartment, FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeDepartment> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeDepartment.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeDepartment to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeDepartment payeeDepartment = ((FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeDepartment)(iContent));
			if ((this.isActive != payeeDepartment.isActive))
			{
				this.isActive = payeeDepartment.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != payeeDepartment.text))
			{
				this.text = payeeDepartment.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeDepartment SelectFromSelf(FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeDepartment payeeDepartment)
		{
			return payeeDepartment;
		}
	}
	
	/// <summary>
	/// This class provides the PayeeBenefitOf data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class PayeeBenefitOf : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeBenefitOf, FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeBenefitOf> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static PayeeBenefitOf()
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeBenefitOf.selectSelf = new System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeBenefitOf, FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeBenefitOf>(FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeBenefitOf.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeBenefitOf records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeBenefitOf, FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeBenefitOf> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeBenefitOf.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeBenefitOf to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeBenefitOf payeeBenefitOf = ((FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeBenefitOf)(iContent));
			if ((this.isActive != payeeBenefitOf.isActive))
			{
				this.isActive = payeeBenefitOf.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != payeeBenefitOf.text))
			{
				this.text = payeeBenefitOf.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeBenefitOf SelectFromSelf(FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeBenefitOf payeeBenefitOf)
		{
			return payeeBenefitOf;
		}
	}
	
	/// <summary>
	/// This class provides the PayeeContactName data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class PayeeContactName : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeContactName, FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeContactName> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static PayeeContactName()
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeContactName.selectSelf = new System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeContactName, FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeContactName>(FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeContactName.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeContactName records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeContactName, FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeContactName> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeContactName.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeContactName to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeContactName payeeContactName = ((FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeContactName)(iContent));
			if ((this.isActive != payeeContactName.isActive))
			{
				this.isActive = payeeContactName.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != payeeContactName.text))
			{
				this.text = payeeContactName.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeContactName SelectFromSelf(FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeContactName payeeContactName)
		{
			return payeeContactName;
		}
	}
	
	/// <summary>
	/// This class provides the PayeeAddress1 data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class PayeeAddress1 : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeAddress1, FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeAddress1> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static PayeeAddress1()
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeAddress1.selectSelf = new System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeAddress1, FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeAddress1>(FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeAddress1.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeAddress1 records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeAddress1, FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeAddress1> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeAddress1.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeAddress1 to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeAddress1 payeeAddress1 = ((FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeAddress1)(iContent));
			if ((this.isActive != payeeAddress1.isActive))
			{
				this.isActive = payeeAddress1.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != payeeAddress1.text))
			{
				this.text = payeeAddress1.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeAddress1 SelectFromSelf(FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeAddress1 payeeAddress1)
		{
			return payeeAddress1;
		}
	}
	
	/// <summary>
	/// This class provides the PayeeAddress2 data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class PayeeAddress2 : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeAddress2, FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeAddress2> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static PayeeAddress2()
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeAddress2.selectSelf = new System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeAddress2, FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeAddress2>(FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeAddress2.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeAddress2 records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeAddress2, FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeAddress2> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeAddress2.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeAddress2 to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeAddress2 payeeAddress2 = ((FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeAddress2)(iContent));
			if ((this.isActive != payeeAddress2.isActive))
			{
				this.isActive = payeeAddress2.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != payeeAddress2.text))
			{
				this.text = payeeAddress2.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeAddress2 SelectFromSelf(FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeAddress2 payeeAddress2)
		{
			return payeeAddress2;
		}
	}
	
	/// <summary>
	/// This class provides the PayeeCity data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class PayeeCity : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeCity, FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeCity> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static PayeeCity()
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeCity.selectSelf = new System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeCity, FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeCity>(FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeCity.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeCity records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeCity, FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeCity> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeCity.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeCity to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeCity payeeCity = ((FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeCity)(iContent));
			if ((this.isActive != payeeCity.isActive))
			{
				this.isActive = payeeCity.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != payeeCity.text))
			{
				this.text = payeeCity.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeCity SelectFromSelf(FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeCity payeeCity)
		{
			return payeeCity;
		}
	}
	
	/// <summary>
	/// This class provides the PayeeProvinceId data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class PayeeProvinceId : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeProvinceId, FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeProvinceId> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static PayeeProvinceId()
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeProvinceId.selectSelf = new System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeProvinceId, FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeProvinceId>(FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeProvinceId.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeProvinceId records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeProvinceId, FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeProvinceId> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeProvinceId.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeProvinceId to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeProvinceId payeeProvinceId = ((FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeProvinceId)(iContent));
			if ((this.isActive != payeeProvinceId.isActive))
			{
				this.isActive = payeeProvinceId.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != payeeProvinceId.text))
			{
				this.text = payeeProvinceId.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeProvinceId SelectFromSelf(FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeProvinceId payeeProvinceId)
		{
			return payeeProvinceId;
		}
	}
	
	/// <summary>
	/// This class provides the PayeePostalCode data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class PayeePostalCode : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeePostalCode, FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeePostalCode> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static PayeePostalCode()
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeePostalCode.selectSelf = new System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeePostalCode, FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeePostalCode>(FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeePostalCode.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeePostalCode records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeePostalCode, FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeePostalCode> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeePostalCode.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeePostalCode to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeePostalCode payeePostalCode = ((FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeePostalCode)(iContent));
			if ((this.isActive != payeePostalCode.isActive))
			{
				this.isActive = payeePostalCode.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != payeePostalCode.text))
			{
				this.text = payeePostalCode.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeePostalCode SelectFromSelf(FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeePostalCode payeePostalCode)
		{
			return payeePostalCode;
		}
	}
	
	/// <summary>
	/// This class provides the PayeePhone data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class PayeePhone : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeePhone, FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeePhone> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static PayeePhone()
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeePhone.selectSelf = new System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeePhone, FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeePhone>(FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeePhone.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeePhone records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeePhone, FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeePhone> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeePhone.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeePhone to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeePhone payeePhone = ((FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeePhone)(iContent));
			if ((this.isActive != payeePhone.isActive))
			{
				this.isActive = payeePhone.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != payeePhone.text))
			{
				this.text = payeePhone.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeePhone SelectFromSelf(FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeePhone payeePhone)
		{
			return payeePhone;
		}
	}
	
	/// <summary>
	/// This class provides the PayeeFax data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class PayeeFax : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeFax, FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeFax> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static PayeeFax()
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeFax.selectSelf = new System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeFax, FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeFax>(FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeFax.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeFax records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeFax, FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeFax> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeFax.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeFax to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeFax payeeFax = ((FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeFax)(iContent));
			if ((this.isActive != payeeFax.isActive))
			{
				this.isActive = payeeFax.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != payeeFax.text))
			{
				this.text = payeeFax.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeFax SelectFromSelf(FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeFax payeeFax)
		{
			return payeeFax;
		}
	}
	
	/// <summary>
	/// This class provides the PayeeEmail data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class PayeeEmail : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeEmail, FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeEmail> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static PayeeEmail()
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeEmail.selectSelf = new System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeEmail, FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeEmail>(FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeEmail.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeEmail records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeEmail, FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeEmail> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeEmail.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeEmail to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeEmail payeeEmail = ((FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeEmail)(iContent));
			if ((this.isActive != payeeEmail.isActive))
			{
				this.isActive = payeeEmail.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != payeeEmail.text))
			{
				this.text = payeeEmail.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeEmail SelectFromSelf(FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeEmail payeeEmail)
		{
			return payeeEmail;
		}
	}
	
	/// <summary>
	/// This class provides the PayeeBankRoutingNumber data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class PayeeBankRoutingNumber : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeBankRoutingNumber, FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeBankRoutingNumber> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static PayeeBankRoutingNumber()
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeBankRoutingNumber.selectSelf = new System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeBankRoutingNumber, FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeBankRoutingNumber>(FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeBankRoutingNumber.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeBankRoutingNumber records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeBankRoutingNumber, FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeBankRoutingNumber> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeBankRoutingNumber.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeBankRoutingNumber to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeBankRoutingNumber payeeBankRoutingNumber = ((FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeBankRoutingNumber)(iContent));
			if ((this.isActive != payeeBankRoutingNumber.isActive))
			{
				this.isActive = payeeBankRoutingNumber.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != payeeBankRoutingNumber.text))
			{
				this.text = payeeBankRoutingNumber.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeBankRoutingNumber SelectFromSelf(FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeBankRoutingNumber payeeBankRoutingNumber)
		{
			return payeeBankRoutingNumber;
		}
	}
	
	/// <summary>
	/// This class provides the PayeeBankAccountNumber data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class PayeeBankAccountNumber : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeBankAccountNumber, FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeBankAccountNumber> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static PayeeBankAccountNumber()
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeBankAccountNumber.selectSelf = new System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeBankAccountNumber, FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeBankAccountNumber>(FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeBankAccountNumber.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeBankAccountNumber records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeBankAccountNumber, FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeBankAccountNumber> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeBankAccountNumber.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeBankAccountNumber to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeBankAccountNumber payeeBankAccountNumber = ((FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeBankAccountNumber)(iContent));
			if ((this.isActive != payeeBankAccountNumber.isActive))
			{
				this.isActive = payeeBankAccountNumber.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != payeeBankAccountNumber.text))
			{
				this.text = payeeBankAccountNumber.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeBankAccountNumber SelectFromSelf(FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeBankAccountNumber payeeBankAccountNumber)
		{
			return payeeBankAccountNumber;
		}
	}
	
	/// <summary>
	/// This class provides the PayTermLength data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class PayTermLength : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.PayTermLength, FluidTrade.Guardian.Schema.DebtHolderSettlement.PayTermLength> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static PayTermLength()
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.PayTermLength.selectSelf = new System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.PayTermLength, FluidTrade.Guardian.Schema.DebtHolderSettlement.PayTermLength>(FluidTrade.Guardian.Schema.DebtHolderSettlement.PayTermLength.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.DebtHolderSettlement.PayTermLength records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.PayTermLength, FluidTrade.Guardian.Schema.DebtHolderSettlement.PayTermLength> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.DebtHolderSettlement.PayTermLength.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.DebtHolderSettlement.PayTermLength to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.PayTermLength payTermLength = ((FluidTrade.Guardian.Schema.DebtHolderSettlement.PayTermLength)(iContent));
			if ((this.isActive != payTermLength.isActive))
			{
				this.isActive = payTermLength.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != payTermLength.text))
			{
				this.text = payTermLength.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.DebtHolderSettlement.PayTermLength SelectFromSelf(FluidTrade.Guardian.Schema.DebtHolderSettlement.PayTermLength payTermLength)
		{
			return payTermLength;
		}
	}
	
	/// <summary>
	/// This class provides the PayTermStartDate data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class PayTermStartDate : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal System.DateTime dateTime;
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.PayTermStartDate, FluidTrade.Guardian.Schema.DebtHolderSettlement.PayTermStartDate> selectSelf;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static PayTermStartDate()
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.PayTermStartDate.selectSelf = new System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.PayTermStartDate, FluidTrade.Guardian.Schema.DebtHolderSettlement.PayTermStartDate>(FluidTrade.Guardian.Schema.DebtHolderSettlement.PayTermStartDate.SelectFromSelf);
		}
		
		/// <summary>
		/// DateTime
		/// </summary>
		public System.DateTime DateTime
		{
			get
			{
				return this.dateTime;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.DebtHolderSettlement.PayTermStartDate records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.PayTermStartDate, FluidTrade.Guardian.Schema.DebtHolderSettlement.PayTermStartDate> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.DebtHolderSettlement.PayTermStartDate.selectSelf;
			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.DebtHolderSettlement.PayTermStartDate to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.PayTermStartDate payTermStartDate = ((FluidTrade.Guardian.Schema.DebtHolderSettlement.PayTermStartDate)(iContent));
			if ((this.isActive != payTermStartDate.isActive))
			{
				this.isActive = payTermStartDate.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.dateTime != payTermStartDate.dateTime))
			{
				this.dateTime = payTermStartDate.dateTime;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("DateTime"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.DebtHolderSettlement.PayTermStartDate SelectFromSelf(FluidTrade.Guardian.Schema.DebtHolderSettlement.PayTermStartDate payTermStartDate)
		{
			return payTermStartDate;
		}
	}
	
	/// <summary>
	/// This class provides the PaymentMethod data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class PaymentMethod : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		internal object paymentMethodTypeIds;
		
		private static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.PaymentMethod, FluidTrade.Guardian.Schema.DebtHolderSettlement.PaymentMethod> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static PaymentMethod()
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.PaymentMethod.selectSelf = new System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.PaymentMethod, FluidTrade.Guardian.Schema.DebtHolderSettlement.PaymentMethod>(FluidTrade.Guardian.Schema.DebtHolderSettlement.PaymentMethod.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// PaymentMethodTypeIds
		/// </summary>
		public object PaymentMethodTypeIds
		{
			get
			{
				return this.paymentMethodTypeIds;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.DebtHolderSettlement.PaymentMethod records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.PaymentMethod, FluidTrade.Guardian.Schema.DebtHolderSettlement.PaymentMethod> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.DebtHolderSettlement.PaymentMethod.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.DebtHolderSettlement.PaymentMethod to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.PaymentMethod paymentMethod = ((FluidTrade.Guardian.Schema.DebtHolderSettlement.PaymentMethod)(iContent));
			if ((this.isActive != paymentMethod.isActive))
			{
				this.isActive = paymentMethod.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != paymentMethod.text))
			{
				this.text = paymentMethod.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
			if ((this.paymentMethodTypeIds != paymentMethod.paymentMethodTypeIds))
			{
				this.paymentMethodTypeIds = paymentMethod.paymentMethodTypeIds;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("PaymentMethodTypeIds"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.DebtHolderSettlement.PaymentMethod SelectFromSelf(FluidTrade.Guardian.Schema.DebtHolderSettlement.PaymentMethod paymentMethod)
		{
			return paymentMethod;
		}
	}
	
	/// <summary>
	/// This class provides the SelectRow data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class SelectRow : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		internal string name;
		
		private static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.SelectRow, FluidTrade.Guardian.Schema.DebtHolderSettlement.SelectRow> selectSelf;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static SelectRow()
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.SelectRow.selectSelf = new System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.SelectRow, FluidTrade.Guardian.Schema.DebtHolderSettlement.SelectRow>(FluidTrade.Guardian.Schema.DebtHolderSettlement.SelectRow.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Name
		/// </summary>
		public string Name
		{
			get
			{
				return this.name;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.DebtHolderSettlement.SelectRow records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.SelectRow, FluidTrade.Guardian.Schema.DebtHolderSettlement.SelectRow> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.DebtHolderSettlement.SelectRow.selectSelf;
			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.DebtHolderSettlement.SelectRow to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.SelectRow selectRow = ((FluidTrade.Guardian.Schema.DebtHolderSettlement.SelectRow)(iContent));
			if ((this.isActive != selectRow.isActive))
			{
				this.isActive = selectRow.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.name != selectRow.name))
			{
				this.name = selectRow.name;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Name"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.DebtHolderSettlement.SelectRow SelectFromSelf(FluidTrade.Guardian.Schema.DebtHolderSettlement.SelectRow selectRow)
		{
			return selectRow;
		}
	}
	
	/// <summary>
	/// This class provides the SettlementAmount data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class SettlementAmount : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.SettlementAmount, FluidTrade.Guardian.Schema.DebtHolderSettlement.SettlementAmount> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static SettlementAmount()
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.SettlementAmount.selectSelf = new System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.SettlementAmount, FluidTrade.Guardian.Schema.DebtHolderSettlement.SettlementAmount>(FluidTrade.Guardian.Schema.DebtHolderSettlement.SettlementAmount.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.DebtHolderSettlement.SettlementAmount records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.SettlementAmount, FluidTrade.Guardian.Schema.DebtHolderSettlement.SettlementAmount> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.DebtHolderSettlement.SettlementAmount.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.DebtHolderSettlement.SettlementAmount to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.SettlementAmount settlementAmount = ((FluidTrade.Guardian.Schema.DebtHolderSettlement.SettlementAmount)(iContent));
			if ((this.isActive != settlementAmount.isActive))
			{
				this.isActive = settlementAmount.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != settlementAmount.text))
			{
				this.text = settlementAmount.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.DebtHolderSettlement.SettlementAmount SelectFromSelf(FluidTrade.Guardian.Schema.DebtHolderSettlement.SettlementAmount settlementAmount)
		{
			return settlementAmount;
		}
	}
	
	/// <summary>
	/// This class provides the SettlementId data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class SettlementId : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.SettlementId, FluidTrade.Guardian.Schema.DebtHolderSettlement.SettlementId> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static SettlementId()
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.SettlementId.selectSelf = new System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.SettlementId, FluidTrade.Guardian.Schema.DebtHolderSettlement.SettlementId>(FluidTrade.Guardian.Schema.DebtHolderSettlement.SettlementId.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.DebtHolderSettlement.SettlementId records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.SettlementId, FluidTrade.Guardian.Schema.DebtHolderSettlement.SettlementId> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.DebtHolderSettlement.SettlementId.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.DebtHolderSettlement.SettlementId to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.SettlementId settlementId = ((FluidTrade.Guardian.Schema.DebtHolderSettlement.SettlementId)(iContent));
			if ((this.isActive != settlementId.isActive))
			{
				this.isActive = settlementId.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != settlementId.text))
			{
				this.text = settlementId.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.DebtHolderSettlement.SettlementId SelectFromSelf(FluidTrade.Guardian.Schema.DebtHolderSettlement.SettlementId settlementId)
		{
			return settlementId;
		}
	}
	
	/// <summary>
	/// This class provides the Status data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class Status : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		internal string mnemonic;
		
		private static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.Status, FluidTrade.Guardian.Schema.DebtHolderSettlement.Status> selectSelf;
		
		internal FluidTrade.Guardian.Status statusCode;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static Status()
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.Status.selectSelf = new System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.Status, FluidTrade.Guardian.Schema.DebtHolderSettlement.Status>(FluidTrade.Guardian.Schema.DebtHolderSettlement.Status.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Mnemonic
		/// </summary>
		public string Mnemonic
		{
			get
			{
				return this.mnemonic;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.DebtHolderSettlement.Status records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.Status, FluidTrade.Guardian.Schema.DebtHolderSettlement.Status> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.DebtHolderSettlement.Status.selectSelf;
			}
		}
		
		/// <summary>
		/// StatusCode
		/// </summary>
		public FluidTrade.Guardian.Status StatusCode
		{
			get
			{
				return this.statusCode;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.DebtHolderSettlement.Status to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.Status status = ((FluidTrade.Guardian.Schema.DebtHolderSettlement.Status)(iContent));
			if ((this.mnemonic != status.mnemonic))
			{
				this.mnemonic = status.mnemonic;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Mnemonic"));
				}
			}
			if ((this.isActive != status.isActive))
			{
				this.isActive = status.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.statusCode != status.statusCode))
			{
				this.statusCode = status.statusCode;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("StatusCode"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.DebtHolderSettlement.Status SelectFromSelf(FluidTrade.Guardian.Schema.DebtHolderSettlement.Status status)
		{
			return status;
		}
	}
	
	/// <summary>
	/// This class provides the Settlement data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class Settlement : FluidTrade.Core.IContent
	{
		
		internal FluidTrade.Guardian.Schema.DebtHolderSettlement.AccountBalance accountBalance;
		
		internal FluidTrade.Guardian.Schema.DebtHolderSettlement.CreatedBy createdBy;
		
		internal FluidTrade.Guardian.Schema.DebtHolderSettlement.CreatedDateTime createdDateTime;
		
		internal FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtHolder debtHolder;
		
		internal FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtNegotiator debtNegotiator;
		
		internal FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorAccountNumber debtorAccountNumber;
		
		internal FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorAddress1 debtorAddress1;
		
		internal FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorAddress2 debtorAddress2;
		
		internal FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorBankAccountNumber debtorBankAccountNumber;
		
		internal FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorBankRoutingNumber debtorBankRoutingNumber;
		
		internal FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorCity debtorCity;
		
		internal FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorFirstName debtorFirstName;
		
		internal FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorLastName debtorLastName;
		
		internal FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorMiddleName debtorMiddleName;
		
		internal FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorPostalCode debtorPostalCode;
		
		internal FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorProvince debtorProvince;
		
		internal FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorSalutation debtorSalutation;
		
		internal FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorSuffix debtorSuffix;
		
		internal object key;
		
		internal FluidTrade.Guardian.Schema.DebtHolderSettlement.ModifiedBy modifiedBy;
		
		internal FluidTrade.Guardian.Schema.DebtHolderSettlement.ModifiedDateTime modifiedDateTime;
		
		internal FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeAddress1 payeeAddress1;
		
		internal FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeAddress2 payeeAddress2;
		
		internal FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeBankAccountNumber payeeBankAccountNumber;
		
		internal FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeBankRoutingNumber payeeBankRoutingNumber;
		
		internal FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeBenefitOf payeeBenefitOf;
		
		internal FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeCity payeeCity;
		
		internal FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeCompanyName payeeCompanyName;
		
		internal FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeContactName payeeContactName;
		
		internal FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeDepartment payeeDepartment;
		
		internal FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeEmail payeeEmail;
		
		internal FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeFax payeeFax;
		
		internal FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeePhone payeePhone;
		
		internal FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeePostalCode payeePostalCode;
		
		internal FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeProvinceId payeeProvinceId;
		
		internal FluidTrade.Guardian.Schema.DebtHolderSettlement.PaymentMethod paymentMethod;
		
		internal FluidTrade.Guardian.Schema.DebtHolderSettlement.PayTermLength payTermLength;
		
		internal FluidTrade.Guardian.Schema.DebtHolderSettlement.PayTermStartDate payTermStartDate;
		
		internal FluidTrade.Guardian.Schema.DebtHolderSettlement.SelectRow selectRow;
		
		private static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.Settlement, FluidTrade.Guardian.Schema.DebtHolderSettlement.Settlement> selectSelf;
		
		internal FluidTrade.Guardian.Schema.DebtHolderSettlement.SettlementAmount settlementAmount;
		
		internal FluidTrade.Guardian.Schema.DebtHolderSettlement.SettlementId settlementId;
		
		internal FluidTrade.Guardian.Schema.DebtHolderSettlement.Status status;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static Settlement()
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.Settlement.selectSelf = new System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.Settlement, FluidTrade.Guardian.Schema.DebtHolderSettlement.Settlement>(FluidTrade.Guardian.Schema.DebtHolderSettlement.Settlement.SelectFromSelf);
		}
		
		/// <summary>
		/// Creates a FluidTrade.Guardian.Schema.DebtHolderSettlement.Settlement.
		/// </summary>
		public Settlement()
		{
			this.accountBalance = new FluidTrade.Guardian.Schema.DebtHolderSettlement.AccountBalance();
			this.createdBy = new FluidTrade.Guardian.Schema.DebtHolderSettlement.CreatedBy();
			this.createdDateTime = new FluidTrade.Guardian.Schema.DebtHolderSettlement.CreatedDateTime();
			this.debtHolder = new FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtHolder();
			this.debtNegotiator = new FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtNegotiator();
			this.debtorFirstName = new FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorFirstName();
			this.debtorMiddleName = new FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorMiddleName();
			this.debtorLastName = new FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorLastName();
			this.debtorAddress1 = new FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorAddress1();
			this.debtorAddress2 = new FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorAddress2();
			this.debtorCity = new FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorCity();
			this.debtorSalutation = new FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorSalutation();
			this.debtorProvince = new FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorProvince();
			this.debtorSuffix = new FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorSuffix();
			this.debtorPostalCode = new FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorPostalCode();
			this.debtorAccountNumber = new FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorAccountNumber();
			this.debtorBankRoutingNumber = new FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorBankRoutingNumber();
			this.debtorBankAccountNumber = new FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorBankAccountNumber();
			this.modifiedBy = new FluidTrade.Guardian.Schema.DebtHolderSettlement.ModifiedBy();
			this.modifiedDateTime = new FluidTrade.Guardian.Schema.DebtHolderSettlement.ModifiedDateTime();
			this.payeeCompanyName = new FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeCompanyName();
			this.payeeDepartment = new FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeDepartment();
			this.payeeBenefitOf = new FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeBenefitOf();
			this.payeeContactName = new FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeContactName();
			this.payeeAddress1 = new FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeAddress1();
			this.payeeAddress2 = new FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeAddress2();
			this.payeeCity = new FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeCity();
			this.payeeProvinceId = new FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeProvinceId();
			this.payeePostalCode = new FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeePostalCode();
			this.payeePhone = new FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeePhone();
			this.payeeFax = new FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeFax();
			this.payeeEmail = new FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeEmail();
			this.payeeBankRoutingNumber = new FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeBankRoutingNumber();
			this.payeeBankAccountNumber = new FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeBankAccountNumber();
			this.payTermLength = new FluidTrade.Guardian.Schema.DebtHolderSettlement.PayTermLength();
			this.payTermStartDate = new FluidTrade.Guardian.Schema.DebtHolderSettlement.PayTermStartDate();
			this.paymentMethod = new FluidTrade.Guardian.Schema.DebtHolderSettlement.PaymentMethod();
			this.selectRow = new FluidTrade.Guardian.Schema.DebtHolderSettlement.SelectRow();
			this.settlementAmount = new FluidTrade.Guardian.Schema.DebtHolderSettlement.SettlementAmount();
			this.settlementId = new FluidTrade.Guardian.Schema.DebtHolderSettlement.SettlementId();
			this.status = new FluidTrade.Guardian.Schema.DebtHolderSettlement.Status();
		}
		
		/// <summary>
		/// AccountBalance
		/// </summary>
		public FluidTrade.Guardian.Schema.DebtHolderSettlement.AccountBalance AccountBalance
		{
			get
			{
				return this.accountBalance;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// CreatedBy
		/// </summary>
		public FluidTrade.Guardian.Schema.DebtHolderSettlement.CreatedBy CreatedBy
		{
			get
			{
				return this.createdBy;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// CreatedDateTime
		/// </summary>
		public FluidTrade.Guardian.Schema.DebtHolderSettlement.CreatedDateTime CreatedDateTime
		{
			get
			{
				return this.createdDateTime;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// DebtHolder
		/// </summary>
		public FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtHolder DebtHolder
		{
			get
			{
				return this.debtHolder;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// DebtNegotiator
		/// </summary>
		public FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtNegotiator DebtNegotiator
		{
			get
			{
				return this.debtNegotiator;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// DebtorAccountNumber
		/// </summary>
		public FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorAccountNumber DebtorAccountNumber
		{
			get
			{
				return this.debtorAccountNumber;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// DebtorAddress1
		/// </summary>
		public FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorAddress1 DebtorAddress1
		{
			get
			{
				return this.debtorAddress1;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// DebtorAddress2
		/// </summary>
		public FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorAddress2 DebtorAddress2
		{
			get
			{
				return this.debtorAddress2;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// DebtorBankAccountNumber
		/// </summary>
		public FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorBankAccountNumber DebtorBankAccountNumber
		{
			get
			{
				return this.debtorBankAccountNumber;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// DebtorBankRoutingNumber
		/// </summary>
		public FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorBankRoutingNumber DebtorBankRoutingNumber
		{
			get
			{
				return this.debtorBankRoutingNumber;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// DebtorCity
		/// </summary>
		public FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorCity DebtorCity
		{
			get
			{
				return this.debtorCity;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// DebtorFirstName
		/// </summary>
		public FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorFirstName DebtorFirstName
		{
			get
			{
				return this.debtorFirstName;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// DebtorLastName
		/// </summary>
		public FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorLastName DebtorLastName
		{
			get
			{
				return this.debtorLastName;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// DebtorMiddleName
		/// </summary>
		public FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorMiddleName DebtorMiddleName
		{
			get
			{
				return this.debtorMiddleName;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// DebtorPostalCode
		/// </summary>
		public FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorPostalCode DebtorPostalCode
		{
			get
			{
				return this.debtorPostalCode;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// DebtorProvince
		/// </summary>
		public FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorProvince DebtorProvince
		{
			get
			{
				return this.debtorProvince;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// DebtorSalutation
		/// </summary>
		public FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorSalutation DebtorSalutation
		{
			get
			{
				return this.debtorSalutation;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// DebtorSuffix
		/// </summary>
		public FluidTrade.Guardian.Schema.DebtHolderSettlement.DebtorSuffix DebtorSuffix
		{
			get
			{
				return this.debtorSuffix;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// ModifiedBy
		/// </summary>
		public FluidTrade.Guardian.Schema.DebtHolderSettlement.ModifiedBy ModifiedBy
		{
			get
			{
				return this.modifiedBy;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// ModifiedDateTime
		/// </summary>
		public FluidTrade.Guardian.Schema.DebtHolderSettlement.ModifiedDateTime ModifiedDateTime
		{
			get
			{
				return this.modifiedDateTime;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// PayeeAddress1
		/// </summary>
		public FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeAddress1 PayeeAddress1
		{
			get
			{
				return this.payeeAddress1;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// PayeeAddress2
		/// </summary>
		public FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeAddress2 PayeeAddress2
		{
			get
			{
				return this.payeeAddress2;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// PayeeBankAccountNumber
		/// </summary>
		public FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeBankAccountNumber PayeeBankAccountNumber
		{
			get
			{
				return this.payeeBankAccountNumber;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// PayeeBankRoutingNumber
		/// </summary>
		public FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeBankRoutingNumber PayeeBankRoutingNumber
		{
			get
			{
				return this.payeeBankRoutingNumber;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// PayeeBenefitOf
		/// </summary>
		public FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeBenefitOf PayeeBenefitOf
		{
			get
			{
				return this.payeeBenefitOf;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// PayeeCity
		/// </summary>
		public FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeCity PayeeCity
		{
			get
			{
				return this.payeeCity;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// PayeeCompanyName
		/// </summary>
		public FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeCompanyName PayeeCompanyName
		{
			get
			{
				return this.payeeCompanyName;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// PayeeContactName
		/// </summary>
		public FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeContactName PayeeContactName
		{
			get
			{
				return this.payeeContactName;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// PayeeDepartment
		/// </summary>
		public FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeDepartment PayeeDepartment
		{
			get
			{
				return this.payeeDepartment;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// PayeeEmail
		/// </summary>
		public FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeEmail PayeeEmail
		{
			get
			{
				return this.payeeEmail;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// PayeeFax
		/// </summary>
		public FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeFax PayeeFax
		{
			get
			{
				return this.payeeFax;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// PayeePhone
		/// </summary>
		public FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeePhone PayeePhone
		{
			get
			{
				return this.payeePhone;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// PayeePostalCode
		/// </summary>
		public FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeePostalCode PayeePostalCode
		{
			get
			{
				return this.payeePostalCode;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// PayeeProvinceId
		/// </summary>
		public FluidTrade.Guardian.Schema.DebtHolderSettlement.PayeeProvinceId PayeeProvinceId
		{
			get
			{
				return this.payeeProvinceId;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// PaymentMethod
		/// </summary>
		public FluidTrade.Guardian.Schema.DebtHolderSettlement.PaymentMethod PaymentMethod
		{
			get
			{
				return this.paymentMethod;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// PayTermLength
		/// </summary>
		public FluidTrade.Guardian.Schema.DebtHolderSettlement.PayTermLength PayTermLength
		{
			get
			{
				return this.payTermLength;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// PayTermStartDate
		/// </summary>
		public FluidTrade.Guardian.Schema.DebtHolderSettlement.PayTermStartDate PayTermStartDate
		{
			get
			{
				return this.payTermStartDate;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// SelectRow
		/// </summary>
		public FluidTrade.Guardian.Schema.DebtHolderSettlement.SelectRow SelectRow
		{
			get
			{
				return this.selectRow;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.DebtHolderSettlement.Settlement records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.DebtHolderSettlement.Settlement, FluidTrade.Guardian.Schema.DebtHolderSettlement.Settlement> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.DebtHolderSettlement.Settlement.selectSelf;
			}
		}
		
		/// <summary>
		/// SettlementAmount
		/// </summary>
		public FluidTrade.Guardian.Schema.DebtHolderSettlement.SettlementAmount SettlementAmount
		{
			get
			{
				return this.settlementAmount;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// SettlementId
		/// </summary>
		public FluidTrade.Guardian.Schema.DebtHolderSettlement.SettlementId SettlementId
		{
			get
			{
				return this.settlementId;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Status
		/// </summary>
		public FluidTrade.Guardian.Schema.DebtHolderSettlement.Status Status
		{
			get
			{
				return this.status;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.DebtHolderSettlement.Settlement to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.DebtHolderSettlement.Settlement settlement = ((FluidTrade.Guardian.Schema.DebtHolderSettlement.Settlement)(iContent));
			this.accountBalance.Copy(settlement.accountBalance);
			this.createdBy.Copy(settlement.createdBy);
			this.createdDateTime.Copy(settlement.createdDateTime);
			this.debtHolder.Copy(settlement.debtHolder);
			this.debtNegotiator.Copy(settlement.debtNegotiator);
			this.debtorFirstName.Copy(settlement.debtorFirstName);
			this.debtorMiddleName.Copy(settlement.debtorMiddleName);
			this.debtorLastName.Copy(settlement.debtorLastName);
			this.debtorAddress1.Copy(settlement.debtorAddress1);
			this.debtorAddress2.Copy(settlement.debtorAddress2);
			this.debtorCity.Copy(settlement.debtorCity);
			this.debtorSalutation.Copy(settlement.debtorSalutation);
			this.debtorProvince.Copy(settlement.debtorProvince);
			this.debtorSuffix.Copy(settlement.debtorSuffix);
			this.debtorPostalCode.Copy(settlement.debtorPostalCode);
			this.debtorAccountNumber.Copy(settlement.debtorAccountNumber);
			this.debtorBankRoutingNumber.Copy(settlement.debtorBankRoutingNumber);
			this.debtorBankAccountNumber.Copy(settlement.debtorBankAccountNumber);
			this.modifiedBy.Copy(settlement.modifiedBy);
			this.modifiedDateTime.Copy(settlement.modifiedDateTime);
			this.payeeCompanyName.Copy(settlement.payeeCompanyName);
			this.payeeDepartment.Copy(settlement.payeeDepartment);
			this.payeeBenefitOf.Copy(settlement.payeeBenefitOf);
			this.payeeContactName.Copy(settlement.payeeContactName);
			this.payeeAddress1.Copy(settlement.payeeAddress1);
			this.payeeAddress2.Copy(settlement.payeeAddress2);
			this.payeeCity.Copy(settlement.payeeCity);
			this.payeeProvinceId.Copy(settlement.payeeProvinceId);
			this.payeePostalCode.Copy(settlement.payeePostalCode);
			this.payeePhone.Copy(settlement.payeePhone);
			this.payeeFax.Copy(settlement.payeeFax);
			this.payeeEmail.Copy(settlement.payeeEmail);
			this.payeeBankRoutingNumber.Copy(settlement.payeeBankRoutingNumber);
			this.payeeBankAccountNumber.Copy(settlement.payeeBankAccountNumber);
			this.payTermLength.Copy(settlement.payTermLength);
			this.payTermStartDate.Copy(settlement.payTermStartDate);
			this.paymentMethod.Copy(settlement.paymentMethod);
			this.selectRow.Copy(settlement.selectRow);
			this.settlementAmount.Copy(settlement.settlementAmount);
			this.settlementId.Copy(settlement.settlementId);
			this.status.Copy(settlement.status);
		}
		
		/// <summary>
		/// Creates a FluidTrade.Guardian.Schema.DebtHolderSettlement.Settlement.
		/// </summary>
		public FluidTrade.Guardian.Schema.DebtHolderSettlement.Settlement Select(FluidTrade.Guardian.ConsumerDebtSettlementRow settlementRow)
		{
			this.key = settlementRow;

						ConsumerDebtNegotiationRow consumerDebtTrustNegotiationRow =
						DataModel.ConsumerDebtNegotiation.ConsumerDebtNegotiationKey.Find(settlementRow.ConsumerDebtNegotiationId);

					;

						MatchRow matchRow = (consumerDebtTrustNegotiationRow != null) ? DataModel.Match.MatchKey.Find(consumerDebtTrustNegotiationRow.MatchId)
						: null;

						ProvinceRow debtorProvinceRow = DataModel.Province.ProvinceKey.Find(settlementRow.DebtorProvinceId);

						ProvinceRow payeeProvinceRow = DataModel.Province.ProvinceKey.Find(settlementRow.PayeeProvinceId);

					;
StatusRow statusRow = DataModel.Status.StatusKey.Find(settlementRow.StatusId);
;

						ConsumerDebtSettlementPaymentMethodRow[] ConsumerDebtSettlementPaymentMethodRows = settlementRow.GetConsumerDebtSettlementPaymentMethodRows();

						string paymentMethodsString = null;

						System.Collections.ArrayList paymentMethodTypeIdList = new System.Collections.ArrayList();


						System.Collections.Generic.List<System.Guid>
						PaymentMethodTypeIdGuids = new System.Collections.Generic.List<System.Guid>();


						foreach (ConsumerDebtSettlementPaymentMethodRow consumerDebtSettlementPaymentMethodRow in ConsumerDebtSettlementPaymentMethodRows)
						{
						PaymentMethodTypeRow paymentMethodTypeRow = DataModel.PaymentMethodType.PaymentMethodTypeKey.Find(consumerDebtSettlementPaymentMethodRow.PaymentMethodTypeId);

						PaymentMethodTypeIdGuids.Add(consumerDebtSettlementPaymentMethodRow.PaymentMethodTypeId);

						paymentMethodsString += paymentMethodTypeRow.Name;

						paymentMethodsString += ", ";

						}
					;
			this.accountBalance.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Accepted;
			this.accountBalance.key = new FluidTrade.Core.DataTableCoordinate(settlementRow, DataModel.ConsumerDebtSettlement.AccountBalanceColumn);
			this.accountBalance.text = settlementRow.AccountBalance;
			this.createdBy.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Accepted;
			this.createdBy.name = DataModel.Entity.EntityKey.Find(settlementRow.CreatedUserId).Name;
			this.createdBy.userId = settlementRow.CreatedUserId;
			this.createdDateTime.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Accepted;
			this.createdDateTime.key = new FluidTrade.Core.DataTableCoordinate(settlementRow, DataModel.ConsumerDebtSettlement.CreatedTimeColumn);
			this.createdDateTime.dateTime = settlementRow.CreatedTime.ToLocalTime();
			this.debtHolder.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Accepted;
			this.debtHolder.text = global::System.Guid.NewGuid();
			this.debtNegotiator.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Accepted;
			this.debtNegotiator.key = new FluidTrade.Core.DataTableCoordinate(settlementRow, DataModel.ConsumerDebtSettlement.ConsumerDebtNegotiationIdColumn);
			this.debtNegotiator.id = settlementRow.ConsumerDebtNegotiationId;
			this.debtorFirstName.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Accepted;
			this.debtorFirstName.key = new FluidTrade.Core.DataTableCoordinate(settlementRow, DataModel.ConsumerDebtSettlement.DebtorFirstNameColumn);
			this.debtorFirstName.text = (settlementRow.IsDebtorFirstNameNull() == false) ? settlementRow.DebtorFirstName : "";
			this.debtorMiddleName.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Accepted;
			this.debtorMiddleName.key = new FluidTrade.Core.DataTableCoordinate(settlementRow, DataModel.ConsumerDebtSettlement.DebtorMiddleNameColumn);
			this.debtorMiddleName.text = (settlementRow.IsDebtorMiddleNameNull() == false) ? settlementRow.DebtorMiddleName : "";
			this.debtorLastName.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Accepted;
			this.debtorLastName.key = new FluidTrade.Core.DataTableCoordinate(settlementRow, DataModel.ConsumerDebtSettlement.DebtorLastNameColumn);
			this.debtorLastName.text = (settlementRow.IsDebtorLastNameNull() == false) ? settlementRow.DebtorLastName : "";
			this.debtorAddress1.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Accepted;
			this.debtorAddress1.key = new FluidTrade.Core.DataTableCoordinate(settlementRow, DataModel.ConsumerDebtSettlement.DebtorAddress1Column);
			this.debtorAddress1.text = (settlementRow.IsDebtorAddress1Null() == false) ? settlementRow.DebtorAddress1 : "";
			this.debtorAddress2.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Accepted;
			this.debtorAddress2.key = new FluidTrade.Core.DataTableCoordinate(settlementRow, DataModel.ConsumerDebtSettlement.DebtorAddress2Column);
			this.debtorAddress2.text = (settlementRow.IsDebtorAddress2Null() == false) ? settlementRow.DebtorAddress2 : "";
			this.debtorCity.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Accepted;
			this.debtorCity.key = new FluidTrade.Core.DataTableCoordinate(settlementRow, DataModel.ConsumerDebtSettlement.DebtorCityColumn);
			this.debtorCity.text = (settlementRow.IsDebtorCityNull() == false) ? settlementRow.DebtorCity : "";
			this.debtorSalutation.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Accepted;
			this.debtorSalutation.key = new FluidTrade.Core.DataTableCoordinate(settlementRow, DataModel.ConsumerDebtSettlement.DebtorSalutationColumn);
			this.debtorSalutation.text = (settlementRow.IsDebtorSalutationNull() == false) ? settlementRow.DebtorSalutation : "";
			this.debtorProvince.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Accepted;
			this.debtorProvince.key = new FluidTrade.Core.DataTableCoordinate(debtorProvinceRow, DataModel.Province.AbbreviationColumn);
			this.debtorProvince.text = debtorProvinceRow != null ? debtorProvinceRow[DataModel.Province.AbbreviationColumn] : null;
			this.debtorSuffix.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Accepted;
			this.debtorSuffix.key = new FluidTrade.Core.DataTableCoordinate(settlementRow, DataModel.ConsumerDebtSettlement.DebtorSuffixColumn);
			this.debtorSuffix.text = (settlementRow.IsDebtorSuffixNull() == false) ? settlementRow.DebtorSuffix : "";
			this.debtorPostalCode.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Accepted;
			this.debtorPostalCode.key = new FluidTrade.Core.DataTableCoordinate(settlementRow, DataModel.ConsumerDebtSettlement.DebtorPostalCodeColumn);
			this.debtorPostalCode.text = (settlementRow.IsDebtorPostalCodeNull() == false) ? settlementRow.DebtorPostalCode : "";
			this.debtorAccountNumber.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Accepted;
			this.debtorAccountNumber.key = new FluidTrade.Core.DataTableCoordinate(settlementRow, DataModel.ConsumerDebtSettlement.DebtorAccountNumberColumn);
			this.debtorAccountNumber.text = (settlementRow.IsDebtorAccountNumberNull() == false) ? settlementRow.DebtorAccountNumber : "";
			this.debtorBankRoutingNumber.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Accepted;
			this.debtorBankRoutingNumber.key = new FluidTrade.Core.DataTableCoordinate(settlementRow, DataModel.ConsumerDebtSettlement.DebtorBankRoutingNumberColumn);
			this.debtorBankRoutingNumber.text = (settlementRow.IsDebtorBankRoutingNumberNull() == false) ? settlementRow.DebtorBankRoutingNumber : "";
			this.debtorBankAccountNumber.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Accepted;
			this.debtorBankAccountNumber.key = new FluidTrade.Core.DataTableCoordinate(settlementRow, DataModel.ConsumerDebtSettlement.DebtorBankAccountNumberColumn);
			this.debtorBankAccountNumber.text = (settlementRow.IsDebtorBankAccountNumberNull() == false) ? settlementRow.DebtorBankAccountNumber : "";
			this.modifiedBy.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Accepted;
			this.modifiedBy.name = DataModel.Entity.EntityKey.Find(settlementRow.ModifiedUserId).Name;
			this.modifiedBy.userId = settlementRow.ModifiedUserId;
			this.modifiedDateTime.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Accepted;
			this.modifiedDateTime.key = new FluidTrade.Core.DataTableCoordinate(settlementRow, DataModel.ConsumerDebtSettlement.ModifiedTimeColumn);
			this.modifiedDateTime.dateTime = settlementRow.ModifiedTime.ToLocalTime();
			this.payeeCompanyName.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Accepted;
			this.payeeCompanyName.key = new FluidTrade.Core.DataTableCoordinate(settlementRow, DataModel.ConsumerDebtSettlement.PayeeCompanyNameColumn);
			this.payeeCompanyName.text = (settlementRow.IsPayeeCompanyNameNull() == false) ? settlementRow.PayeeCompanyName : "";
			this.payeeDepartment.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Accepted;
			this.payeeDepartment.key = new FluidTrade.Core.DataTableCoordinate(settlementRow, DataModel.ConsumerDebtSettlement.PayeeDepartmentColumn);
			this.payeeDepartment.text = (settlementRow.IsPayeeDepartmentNull() == false) ? settlementRow.PayeeDepartment : "";
			this.payeeBenefitOf.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Accepted;
			this.payeeBenefitOf.key = new FluidTrade.Core.DataTableCoordinate(settlementRow, DataModel.ConsumerDebtSettlement.PayeeForBenefitOfColumn);
			this.payeeBenefitOf.text = (settlementRow.IsPayeeForBenefitOfNull() == false) ? settlementRow.PayeeForBenefitOf : "";
			this.payeeContactName.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Accepted;
			this.payeeContactName.key = new FluidTrade.Core.DataTableCoordinate(settlementRow, DataModel.ConsumerDebtSettlement.PayeeContactNameColumn);
			this.payeeContactName.text = (settlementRow.IsPayeeContactNameNull() == false) ? settlementRow.PayeeContactName : "";
			this.payeeAddress1.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Accepted;
			this.payeeAddress1.key = new FluidTrade.Core.DataTableCoordinate(settlementRow, DataModel.ConsumerDebtSettlement.PayeeAddress1Column);
			this.payeeAddress1.text = (settlementRow.IsPayeeAddress1Null() == false) ? settlementRow.PayeeAddress1 : "";
			this.payeeAddress2.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Accepted;
			this.payeeAddress2.key = new FluidTrade.Core.DataTableCoordinate(settlementRow, DataModel.ConsumerDebtSettlement.PayeeAddress2Column);
			this.payeeAddress2.text = (settlementRow.IsPayeeAddress2Null() == false) ? settlementRow.PayeeAddress2 : "";
			this.payeeCity.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Accepted;
			this.payeeCity.key = new FluidTrade.Core.DataTableCoordinate(settlementRow, DataModel.ConsumerDebtSettlement.PayeeCityColumn);
			this.payeeCity.text = (settlementRow.IsPayeeCityNull() == false) ? settlementRow.PayeeCity : "";
			this.payeeProvinceId.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Accepted;
			this.payeeProvinceId.key = new FluidTrade.Core.DataTableCoordinate(payeeProvinceRow, DataModel.Province.AbbreviationColumn);
			this.payeeProvinceId.text = payeeProvinceRow != null ? payeeProvinceRow[DataModel.Province.AbbreviationColumn] : null;
			this.payeePostalCode.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Accepted;
			this.payeePostalCode.key = new FluidTrade.Core.DataTableCoordinate(settlementRow, DataModel.ConsumerDebtSettlement.PayeePostalCodeColumn);
			this.payeePostalCode.text = (settlementRow.IsPayeePostalCodeNull() == false) ? settlementRow.PayeePostalCode : "";
			this.payeePhone.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Accepted;
			this.payeePhone.key = new FluidTrade.Core.DataTableCoordinate(settlementRow, DataModel.ConsumerDebtSettlement.CreatedTimeColumn);
			this.payeePhone.text = (settlementRow.IsPayeePhoneNull() == false) ? settlementRow.PayeePhone : "";
			this.payeeFax.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Accepted;
			this.payeeFax.key = new FluidTrade.Core.DataTableCoordinate(settlementRow, DataModel.ConsumerDebtSettlement.PayeeFaxColumn);
			this.payeeFax.text = (settlementRow.IsPayeeFaxNull() == false) ? settlementRow.PayeeFax : "";
			this.payeeEmail.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Accepted;
			this.payeeEmail.key = new FluidTrade.Core.DataTableCoordinate(settlementRow, DataModel.ConsumerDebtSettlement.PayeeEmailColumn);
			this.payeeEmail.text = (settlementRow.IsPayeeEmailNull() == false) ? settlementRow.PayeeEmail : "";
			this.payeeBankRoutingNumber.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Accepted;
			this.payeeBankRoutingNumber.key = new FluidTrade.Core.DataTableCoordinate(settlementRow, DataModel.ConsumerDebtSettlement.PayeeBankRoutingNumberColumn);
			this.payeeBankRoutingNumber.text = (settlementRow.IsPayeeBankRoutingNumberNull() == false) ? settlementRow.PayeeBankRoutingNumber : "";
			this.payeeBankAccountNumber.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Accepted;
			this.payeeBankAccountNumber.key = new FluidTrade.Core.DataTableCoordinate(settlementRow, DataModel.ConsumerDebtSettlement.PayeeBankAccountNumberColumn);
			this.payeeBankAccountNumber.text = (settlementRow.IsPayeeBankAccountNumberNull() == false) ? settlementRow.PayeeBankAccountNumber : "";
			this.payTermLength.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Accepted;
			this.payTermLength.key = new FluidTrade.Core.DataTableCoordinate(settlementRow, DataModel.ConsumerDebtSettlement.PaymentLengthColumn);
			this.payTermLength.text = settlementRow.PaymentLength;
			this.payTermStartDate.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Accepted;
			this.payTermStartDate.key = new FluidTrade.Core.DataTableCoordinate(settlementRow, DataModel.ConsumerDebtSettlement.PaymentStartDateColumn);
			this.payTermStartDate.dateTime = settlementRow.PaymentStartDate;
			this.paymentMethod.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Accepted;
			this.paymentMethod.text = paymentMethodsString;
			this.paymentMethod.paymentMethodTypeIds = PaymentMethodTypeIdGuids;
			this.selectRow.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Accepted;
			this.settlementAmount.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Accepted;
			this.settlementAmount.key = new FluidTrade.Core.DataTableCoordinate(settlementRow, DataModel.ConsumerDebtSettlement.SettlementAmountColumn);
			this.settlementAmount.text = settlementRow.SettlementAmount;
			this.settlementId.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Accepted;
			this.settlementId.text = settlementRow.ConsumerDebtSettlementId;
			this.status.mnemonic = statusRow.Mnemonic;
			this.status.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Accepted;
			this.status.statusCode = statusRow.StatusCode;
			return this;
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.DebtHolderSettlement.Settlement SelectFromSelf(FluidTrade.Guardian.Schema.DebtHolderSettlement.Settlement settlement)
		{
			return settlement;
		}
	}
}
