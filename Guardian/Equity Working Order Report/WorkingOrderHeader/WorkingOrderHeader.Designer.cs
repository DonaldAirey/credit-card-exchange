//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Windows.Markup.XmlnsDefinitionAttribute("urn:schemas-fluidtrade-com:guardian:equity-working-order-header", "FluidTrade.Guardian.Schema.EquityWorkingOrderHeader")]

namespace FluidTrade.Guardian.Schema.EquityWorkingOrderHeader
{
	
	
	/// <summary>
	/// This class provides the AskPrice data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class AskPrice : FluidTrade.Core.IContent
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.AskPrice, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.AskPrice> selectSelf;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static AskPrice()
		{
			FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.AskPrice.selectSelf = new System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.AskPrice, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.AskPrice>(FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.AskPrice.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.AskPrice records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.AskPrice, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.AskPrice> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.AskPrice.selectSelf;
			}
		}
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.AskPrice to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.AskPrice askPrice = ((FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.AskPrice)(iContent));
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.AskPrice SelectFromSelf(FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.AskPrice askPrice)
		{
			return askPrice;
		}
	}
	
	/// <summary>
	/// This class provides the AvailableQuantity data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class AvailableQuantity : FluidTrade.Core.IContent
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.AvailableQuantity, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.AvailableQuantity> selectSelf;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static AvailableQuantity()
		{
			FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.AvailableQuantity.selectSelf = new System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.AvailableQuantity, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.AvailableQuantity>(FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.AvailableQuantity.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.AvailableQuantity records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.AvailableQuantity, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.AvailableQuantity> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.AvailableQuantity.selectSelf;
			}
		}
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.AvailableQuantity to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.AvailableQuantity availableQuantity = ((FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.AvailableQuantity)(iContent));
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.AvailableQuantity SelectFromSelf(FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.AvailableQuantity availableQuantity)
		{
			return availableQuantity;
		}
	}
	
	/// <summary>
	/// This class provides the BidPrice data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class BidPrice : FluidTrade.Core.IContent
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.BidPrice, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.BidPrice> selectSelf;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static BidPrice()
		{
			FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.BidPrice.selectSelf = new System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.BidPrice, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.BidPrice>(FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.BidPrice.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.BidPrice records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.BidPrice, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.BidPrice> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.BidPrice.selectSelf;
			}
		}
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.BidPrice to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.BidPrice bidPrice = ((FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.BidPrice)(iContent));
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.BidPrice SelectFromSelf(FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.BidPrice bidPrice)
		{
			return bidPrice;
		}
	}
	
	/// <summary>
	/// This class provides the Blotter data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class Blotter : FluidTrade.Core.IContent
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Blotter, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Blotter> selectSelf;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static Blotter()
		{
			FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Blotter.selectSelf = new System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Blotter, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Blotter>(FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Blotter.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Blotter records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Blotter, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Blotter> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Blotter.selectSelf;
			}
		}
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Blotter to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Blotter blotter = ((FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Blotter)(iContent));
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Blotter SelectFromSelf(FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Blotter blotter)
		{
			return blotter;
		}
	}
	
	/// <summary>
	/// This class provides the BrokerMatch data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class BrokerMatch : FluidTrade.Core.IContent
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.BrokerMatch, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.BrokerMatch> selectSelf;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static BrokerMatch()
		{
			FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.BrokerMatch.selectSelf = new System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.BrokerMatch, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.BrokerMatch>(FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.BrokerMatch.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.BrokerMatch records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.BrokerMatch, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.BrokerMatch> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.BrokerMatch.selectSelf;
			}
		}
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.BrokerMatch to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.BrokerMatch brokerMatch = ((FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.BrokerMatch)(iContent));
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.BrokerMatch SelectFromSelf(FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.BrokerMatch brokerMatch)
		{
			return brokerMatch;
		}
	}
	
	/// <summary>
	/// This class provides the Crossing data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class Crossing : FluidTrade.Core.IContent
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Crossing, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Crossing> selectSelf;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static Crossing()
		{
			FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Crossing.selectSelf = new System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Crossing, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Crossing>(FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Crossing.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Crossing records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Crossing, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Crossing> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Crossing.selectSelf;
			}
		}
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Crossing to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Crossing crossing = ((FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Crossing)(iContent));
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Crossing SelectFromSelf(FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Crossing crossing)
		{
			return crossing;
		}
	}
	
	/// <summary>
	/// This class provides the CreatedBy data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class CreatedBy : FluidTrade.Core.IContent
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.CreatedBy, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.CreatedBy> selectSelf;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static CreatedBy()
		{
			FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.CreatedBy.selectSelf = new System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.CreatedBy, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.CreatedBy>(FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.CreatedBy.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.CreatedBy records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.CreatedBy, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.CreatedBy> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.CreatedBy.selectSelf;
			}
		}
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.CreatedBy to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.CreatedBy createdBy = ((FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.CreatedBy)(iContent));
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.CreatedBy SelectFromSelf(FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.CreatedBy createdBy)
		{
			return createdBy;
		}
	}
	
	/// <summary>
	/// This class provides the CreatedTime data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class CreatedTime : FluidTrade.Core.IContent
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.CreatedTime, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.CreatedTime> selectSelf;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static CreatedTime()
		{
			FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.CreatedTime.selectSelf = new System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.CreatedTime, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.CreatedTime>(FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.CreatedTime.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.CreatedTime records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.CreatedTime, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.CreatedTime> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.CreatedTime.selectSelf;
			}
		}
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.CreatedTime to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.CreatedTime createdTime = ((FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.CreatedTime)(iContent));
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.CreatedTime SelectFromSelf(FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.CreatedTime createdTime)
		{
			return createdTime;
		}
	}
	
	/// <summary>
	/// This class provides the DestinationOrderQuantity data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class DestinationOrderQuantity : FluidTrade.Core.IContent
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.DestinationOrderQuantity, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.DestinationOrderQuantity> selectSelf;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static DestinationOrderQuantity()
		{
			FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.DestinationOrderQuantity.selectSelf = new System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.DestinationOrderQuantity, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.DestinationOrderQuantity>(FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.DestinationOrderQuantity.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.DestinationOrderQuantity records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.DestinationOrderQuantity, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.DestinationOrderQuantity> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.DestinationOrderQuantity.selectSelf;
			}
		}
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.DestinationOrderQuantity to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.DestinationOrderQuantity destinationOrderQuantity = ((FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.DestinationOrderQuantity)(iContent));
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.DestinationOrderQuantity SelectFromSelf(FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.DestinationOrderQuantity destinationOrderQuantity)
		{
			return destinationOrderQuantity;
		}
	}
	
	/// <summary>
	/// This class provides the ExecutionQuantity data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class ExecutionQuantity : FluidTrade.Core.IContent
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.ExecutionQuantity, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.ExecutionQuantity> selectSelf;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static ExecutionQuantity()
		{
			FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.ExecutionQuantity.selectSelf = new System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.ExecutionQuantity, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.ExecutionQuantity>(FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.ExecutionQuantity.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.ExecutionQuantity records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.ExecutionQuantity, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.ExecutionQuantity> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.ExecutionQuantity.selectSelf;
			}
		}
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.ExecutionQuantity to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.ExecutionQuantity executionQuantity = ((FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.ExecutionQuantity)(iContent));
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.ExecutionQuantity SelectFromSelf(FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.ExecutionQuantity executionQuantity)
		{
			return executionQuantity;
		}
	}
	
	/// <summary>
	/// This class provides the HedgeMatch data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class HedgeMatch : FluidTrade.Core.IContent
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.HedgeMatch, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.HedgeMatch> selectSelf;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static HedgeMatch()
		{
			FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.HedgeMatch.selectSelf = new System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.HedgeMatch, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.HedgeMatch>(FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.HedgeMatch.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.HedgeMatch records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.HedgeMatch, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.HedgeMatch> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.HedgeMatch.selectSelf;
			}
		}
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.HedgeMatch to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.HedgeMatch hedgeMatch = ((FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.HedgeMatch)(iContent));
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.HedgeMatch SelectFromSelf(FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.HedgeMatch hedgeMatch)
		{
			return hedgeMatch;
		}
	}
	
	/// <summary>
	/// This class provides the InstitutionMatch data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class InstitutionMatch : FluidTrade.Core.IContent
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.InstitutionMatch, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.InstitutionMatch> selectSelf;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static InstitutionMatch()
		{
			FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.InstitutionMatch.selectSelf = new System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.InstitutionMatch, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.InstitutionMatch>(FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.InstitutionMatch.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.InstitutionMatch records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.InstitutionMatch, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.InstitutionMatch> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.InstitutionMatch.selectSelf;
			}
		}
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.InstitutionMatch to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.InstitutionMatch institutionMatch = ((FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.InstitutionMatch)(iContent));
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.InstitutionMatch SelectFromSelf(FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.InstitutionMatch institutionMatch)
		{
			return institutionMatch;
		}
	}
	
	/// <summary>
	/// This class provides the LastPrice data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class LastPrice : FluidTrade.Core.IContent
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.LastPrice, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.LastPrice> selectSelf;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static LastPrice()
		{
			FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.LastPrice.selectSelf = new System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.LastPrice, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.LastPrice>(FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.LastPrice.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.LastPrice records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.LastPrice, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.LastPrice> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.LastPrice.selectSelf;
			}
		}
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.LastPrice to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.LastPrice lastPrice = ((FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.LastPrice)(iContent));
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.LastPrice SelectFromSelf(FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.LastPrice lastPrice)
		{
			return lastPrice;
		}
	}
	
	/// <summary>
	/// This class provides the LeavesQuantity data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class LeavesQuantity : FluidTrade.Core.IContent
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.LeavesQuantity, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.LeavesQuantity> selectSelf;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static LeavesQuantity()
		{
			FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.LeavesQuantity.selectSelf = new System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.LeavesQuantity, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.LeavesQuantity>(FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.LeavesQuantity.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.LeavesQuantity records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.LeavesQuantity, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.LeavesQuantity> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.LeavesQuantity.selectSelf;
			}
		}
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.LeavesQuantity to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.LeavesQuantity leavesQuantity = ((FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.LeavesQuantity)(iContent));
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.LeavesQuantity SelectFromSelf(FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.LeavesQuantity leavesQuantity)
		{
			return leavesQuantity;
		}
	}
	
	/// <summary>
	/// This class provides the MarketValue data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class MarketValue : FluidTrade.Core.IContent
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.MarketValue, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.MarketValue> selectSelf;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static MarketValue()
		{
			FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.MarketValue.selectSelf = new System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.MarketValue, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.MarketValue>(FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.MarketValue.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.MarketValue records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.MarketValue, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.MarketValue> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.MarketValue.selectSelf;
			}
		}
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.MarketValue to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.MarketValue marketValue = ((FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.MarketValue)(iContent));
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.MarketValue SelectFromSelf(FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.MarketValue marketValue)
		{
			return marketValue;
		}
	}
	
	/// <summary>
	/// This class provides the ModifiedBy data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class ModifiedBy : FluidTrade.Core.IContent
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.ModifiedBy, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.ModifiedBy> selectSelf;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static ModifiedBy()
		{
			FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.ModifiedBy.selectSelf = new System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.ModifiedBy, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.ModifiedBy>(FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.ModifiedBy.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.ModifiedBy records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.ModifiedBy, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.ModifiedBy> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.ModifiedBy.selectSelf;
			}
		}
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.ModifiedBy to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.ModifiedBy modifiedBy = ((FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.ModifiedBy)(iContent));
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.ModifiedBy SelectFromSelf(FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.ModifiedBy modifiedBy)
		{
			return modifiedBy;
		}
	}
	
	/// <summary>
	/// This class provides the ModifiedTime data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class ModifiedTime : FluidTrade.Core.IContent
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.ModifiedTime, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.ModifiedTime> selectSelf;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static ModifiedTime()
		{
			FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.ModifiedTime.selectSelf = new System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.ModifiedTime, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.ModifiedTime>(FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.ModifiedTime.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.ModifiedTime records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.ModifiedTime, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.ModifiedTime> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.ModifiedTime.selectSelf;
			}
		}
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.ModifiedTime to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.ModifiedTime modifiedTime = ((FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.ModifiedTime)(iContent));
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.ModifiedTime SelectFromSelf(FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.ModifiedTime modifiedTime)
		{
			return modifiedTime;
		}
	}
	
	/// <summary>
	/// This class provides the OrderType data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class OrderType : FluidTrade.Core.IContent
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.OrderType, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.OrderType> selectSelf;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static OrderType()
		{
			FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.OrderType.selectSelf = new System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.OrderType, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.OrderType>(FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.OrderType.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.OrderType records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.OrderType, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.OrderType> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.OrderType.selectSelf;
			}
		}
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.OrderType to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.OrderType orderType = ((FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.OrderType)(iContent));
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.OrderType SelectFromSelf(FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.OrderType orderType)
		{
			return orderType;
		}
	}
	
	/// <summary>
	/// This class provides the SecurityName data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class SecurityName : FluidTrade.Core.IContent
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SecurityName, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SecurityName> selectSelf;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static SecurityName()
		{
			FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SecurityName.selectSelf = new System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SecurityName, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SecurityName>(FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SecurityName.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SecurityName records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SecurityName, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SecurityName> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SecurityName.selectSelf;
			}
		}
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SecurityName to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SecurityName securityName = ((FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SecurityName)(iContent));
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SecurityName SelectFromSelf(FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SecurityName securityName)
		{
			return securityName;
		}
	}
	
	/// <summary>
	/// This class provides the SecuritySymbol data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class SecuritySymbol : FluidTrade.Core.IContent
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SecuritySymbol, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SecuritySymbol> selectSelf;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static SecuritySymbol()
		{
			FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SecuritySymbol.selectSelf = new System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SecuritySymbol, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SecuritySymbol>(FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SecuritySymbol.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SecuritySymbol records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SecuritySymbol, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SecuritySymbol> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SecuritySymbol.selectSelf;
			}
		}
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SecuritySymbol to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SecuritySymbol securitySymbol = ((FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SecuritySymbol)(iContent));
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SecuritySymbol SelectFromSelf(FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SecuritySymbol securitySymbol)
		{
			return securitySymbol;
		}
	}
	
	/// <summary>
	/// This class provides the SettlementDate data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class SettlementDate : FluidTrade.Core.IContent
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SettlementDate, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SettlementDate> selectSelf;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static SettlementDate()
		{
			FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SettlementDate.selectSelf = new System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SettlementDate, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SettlementDate>(FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SettlementDate.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SettlementDate records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SettlementDate, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SettlementDate> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SettlementDate.selectSelf;
			}
		}
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SettlementDate to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SettlementDate settlementDate = ((FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SettlementDate)(iContent));
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SettlementDate SelectFromSelf(FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SettlementDate settlementDate)
		{
			return settlementDate;
		}
	}
	
	/// <summary>
	/// This class provides the Side data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class Side : FluidTrade.Core.IContent
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Side, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Side> selectSelf;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static Side()
		{
			FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Side.selectSelf = new System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Side, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Side>(FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Side.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Side records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Side, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Side> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Side.selectSelf;
			}
		}
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Side to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Side side = ((FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Side)(iContent));
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Side SelectFromSelf(FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Side side)
		{
			return side;
		}
	}
	
	/// <summary>
	/// This class provides the SourceOrderQuantity data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class SourceOrderQuantity : FluidTrade.Core.IContent
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SourceOrderQuantity, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SourceOrderQuantity> selectSelf;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static SourceOrderQuantity()
		{
			FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SourceOrderQuantity.selectSelf = new System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SourceOrderQuantity, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SourceOrderQuantity>(FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SourceOrderQuantity.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SourceOrderQuantity records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SourceOrderQuantity, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SourceOrderQuantity> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SourceOrderQuantity.selectSelf;
			}
		}
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SourceOrderQuantity to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SourceOrderQuantity sourceOrderQuantity = ((FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SourceOrderQuantity)(iContent));
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SourceOrderQuantity SelectFromSelf(FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SourceOrderQuantity sourceOrderQuantity)
		{
			return sourceOrderQuantity;
		}
	}
	
	/// <summary>
	/// This class provides the Status data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class Status : FluidTrade.Core.IContent
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Status, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Status> selectSelf;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static Status()
		{
			FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Status.selectSelf = new System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Status, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Status>(FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Status.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Status records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Status, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Status> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Status.selectSelf;
			}
		}
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Status to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Status status = ((FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Status)(iContent));
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Status SelectFromSelf(FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Status status)
		{
			return status;
		}
	}
	
	/// <summary>
	/// This class provides the TimeInForce data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class TimeInForce : FluidTrade.Core.IContent
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.TimeInForce, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.TimeInForce> selectSelf;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static TimeInForce()
		{
			FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.TimeInForce.selectSelf = new System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.TimeInForce, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.TimeInForce>(FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.TimeInForce.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.TimeInForce records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.TimeInForce, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.TimeInForce> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.TimeInForce.selectSelf;
			}
		}
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.TimeInForce to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.TimeInForce timeInForce = ((FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.TimeInForce)(iContent));
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.TimeInForce SelectFromSelf(FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.TimeInForce timeInForce)
		{
			return timeInForce;
		}
	}
	
	/// <summary>
	/// This class provides the TradeDate data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class TradeDate : FluidTrade.Core.IContent
	{
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.TradeDate, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.TradeDate> selectSelf;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static TradeDate()
		{
			FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.TradeDate.selectSelf = new System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.TradeDate, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.TradeDate>(FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.TradeDate.SelectFromSelf);
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.TradeDate records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.TradeDate, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.TradeDate> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.TradeDate.selectSelf;
			}
		}
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.TradeDate to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.TradeDate tradeDate = ((FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.TradeDate)(iContent));
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.TradeDate SelectFromSelf(FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.TradeDate tradeDate)
		{
			return tradeDate;
		}
	}
	
	/// <summary>
	/// This class provides the WorkingOrderHeader data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class WorkingOrderHeader : FluidTrade.Core.IContent
	{
		
		internal FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.AskPrice askPrice;
		
		internal FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.AvailableQuantity availableQuantity;
		
		internal FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.BidPrice bidPrice;
		
		internal FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Blotter blotter;
		
		internal FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.BrokerMatch brokerMatch;
		
		private FluidTrade.Core.ComplexComparer<FluidTrade.Guardian.Schema.EquityWorkingOrder.WorkingOrder> comparer;
		
		internal FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.CreatedBy createdBy;
		
		internal FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.CreatedTime createdTime;
		
		internal FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Crossing crossing;
		
		internal FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.DestinationOrderQuantity destinationOrderQuantity;
		
		internal FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.ExecutionQuantity executionQuantity;
		
		private FluidTrade.Core.ComplexFilter<FluidTrade.Guardian.Schema.EquityWorkingOrder.WorkingOrder> filter;
		
		internal FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.HedgeMatch hedgeMatch;
		
		internal FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.InstitutionMatch institutionMatch;
		
		internal object key;
		
		internal FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.LastPrice lastPrice;
		
		internal FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.LeavesQuantity leavesQuantity;
		
		internal FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.MarketValue marketValue;
		
		internal FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.ModifiedBy modifiedBy;
		
		internal FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.ModifiedTime modifiedTime;
		
		internal FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.OrderType orderType;
		
		private FluidTrade.Core.ComplexFilter<FluidTrade.Guardian.WorkingOrderRow> prefilter;
		
		internal FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SecurityName securityName;
		
		internal FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SecuritySymbol securitySymbol;
		
		private System.Func<FluidTrade.Guardian.WorkingOrderRow, FluidTrade.Guardian.Schema.EquityWorkingOrder.WorkingOrder> selector;
		
		private static System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.WorkingOrderHeader, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.WorkingOrderHeader> selectSelf;
		
		internal FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SettlementDate settlementDate;
		
		internal FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Side side;
		
		internal FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SourceOrderQuantity sourceOrderQuantity;
		
		internal FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Status status;
		
		internal FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.TimeInForce timeInForce;
		
		internal FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.TradeDate tradeDate;
		
		internal FluidTrade.Guardian.Schema.EquityWorkingOrder.WorkingOrder[] workingOrderList;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static WorkingOrderHeader()
		{
			FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.WorkingOrderHeader.selectSelf = new System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.WorkingOrderHeader, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.WorkingOrderHeader>(FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.WorkingOrderHeader.SelectFromSelf);
		}
		
		/// <summary>
		/// Creates a FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.WorkingOrderHeader.
		/// </summary>
		public WorkingOrderHeader()
		{
			this.askPrice = new FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.AskPrice();
			this.availableQuantity = new FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.AvailableQuantity();
			this.bidPrice = new FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.BidPrice();
			this.blotter = new FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Blotter();
			this.brokerMatch = new FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.BrokerMatch();
			this.createdBy = new FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.CreatedBy();
			this.createdTime = new FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.CreatedTime();
			this.crossing = new FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Crossing();
			this.destinationOrderQuantity = new FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.DestinationOrderQuantity();
			this.executionQuantity = new FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.ExecutionQuantity();
			this.hedgeMatch = new FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.HedgeMatch();
			this.institutionMatch = new FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.InstitutionMatch();
			this.lastPrice = new FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.LastPrice();
			this.leavesQuantity = new FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.LeavesQuantity();
			this.marketValue = new FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.MarketValue();
			this.modifiedBy = new FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.ModifiedBy();
			this.modifiedTime = new FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.ModifiedTime();
			this.orderType = new FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.OrderType();
			this.securityName = new FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SecurityName();
			this.securitySymbol = new FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SecuritySymbol();
			this.settlementDate = new FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SettlementDate();
			this.side = new FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Side();
			this.sourceOrderQuantity = new FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SourceOrderQuantity();
			this.status = new FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Status();
			this.timeInForce = new FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.TimeInForce();
			this.tradeDate = new FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.TradeDate();
		}
		
		/// <summary>
		/// AskPrice
		/// </summary>
		public FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.AskPrice AskPrice
		{
			get
			{
				return this.askPrice;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// AvailableQuantity
		/// </summary>
		public FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.AvailableQuantity AvailableQuantity
		{
			get
			{
				return this.availableQuantity;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// BidPrice
		/// </summary>
		public FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.BidPrice BidPrice
		{
			get
			{
				return this.bidPrice;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Blotter
		/// </summary>
		public FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Blotter Blotter
		{
			get
			{
				return this.blotter;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// BrokerMatch
		/// </summary>
		public FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.BrokerMatch BrokerMatch
		{
			get
			{
				return this.brokerMatch;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the complex comparison for ordering records from the result set.
		/// </summary>
		public FluidTrade.Core.ComplexComparer<FluidTrade.Guardian.Schema.EquityWorkingOrder.WorkingOrder> Comparer
		{
			get
			{
				return this.comparer;
			}
			set
			{
				this.comparer = value;
			}
		}
		
		/// <summary>
		/// CreatedBy
		/// </summary>
		public FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.CreatedBy CreatedBy
		{
			get
			{
				return this.createdBy;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// CreatedTime
		/// </summary>
		public FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.CreatedTime CreatedTime
		{
			get
			{
				return this.createdTime;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Crossing
		/// </summary>
		public FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Crossing Crossing
		{
			get
			{
				return this.crossing;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// DestinationOrderQuantity
		/// </summary>
		public FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.DestinationOrderQuantity DestinationOrderQuantity
		{
			get
			{
				return this.destinationOrderQuantity;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// ExecutionQuantity
		/// </summary>
		public FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.ExecutionQuantity ExecutionQuantity
		{
			get
			{
				return this.executionQuantity;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the complex filter used to remove records from the result set.
		/// </summary>
		public FluidTrade.Core.ComplexFilter<FluidTrade.Guardian.Schema.EquityWorkingOrder.WorkingOrder> Filter
		{
			get
			{
				return this.filter;
			}
			set
			{
				this.filter = value;
			}
		}
		
		/// <summary>
		/// HedgeMatch
		/// </summary>
		public FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.HedgeMatch HedgeMatch
		{
			get
			{
				return this.hedgeMatch;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// InstitutionMatch
		/// </summary>
		public FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.InstitutionMatch InstitutionMatch
		{
			get
			{
				return this.institutionMatch;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// LastPrice
		/// </summary>
		public FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.LastPrice LastPrice
		{
			get
			{
				return this.lastPrice;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// LeavesQuantity
		/// </summary>
		public FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.LeavesQuantity LeavesQuantity
		{
			get
			{
				return this.leavesQuantity;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// MarketValue
		/// </summary>
		public FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.MarketValue MarketValue
		{
			get
			{
				return this.marketValue;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// ModifiedBy
		/// </summary>
		public FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.ModifiedBy ModifiedBy
		{
			get
			{
				return this.modifiedBy;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// ModifiedTime
		/// </summary>
		public FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.ModifiedTime ModifiedTime
		{
			get
			{
				return this.modifiedTime;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// OrderType
		/// </summary>
		public FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.OrderType OrderType
		{
			get
			{
				return this.orderType;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the complex filter used to remove records from the result set.
		/// </summary>
		public FluidTrade.Core.ComplexFilter<FluidTrade.Guardian.WorkingOrderRow> Prefilter
		{
			get
			{
				return this.prefilter;
			}
			set
			{
				this.prefilter = value;
			}
		}
		
		/// <summary>
		/// SecurityName
		/// </summary>
		public FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SecurityName SecurityName
		{
			get
			{
				return this.securityName;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// SecuritySymbol
		/// </summary>
		public FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SecuritySymbol SecuritySymbol
		{
			get
			{
				return this.securitySymbol;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the delegate used to select a destination record from a source.
		/// </summary>
		public System.Func<FluidTrade.Guardian.WorkingOrderRow, FluidTrade.Guardian.Schema.EquityWorkingOrder.WorkingOrder> Selector
		{
			get
			{
				return this.selector;
			}
			set
			{
				this.selector = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.WorkingOrderHeader records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.WorkingOrderHeader, FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.WorkingOrderHeader> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.WorkingOrderHeader.selectSelf;
			}
		}
		
		/// <summary>
		/// SettlementDate
		/// </summary>
		public FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SettlementDate SettlementDate
		{
			get
			{
				return this.settlementDate;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Side
		/// </summary>
		public FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Side Side
		{
			get
			{
				return this.side;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// SourceOrderQuantity
		/// </summary>
		public FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.SourceOrderQuantity SourceOrderQuantity
		{
			get
			{
				return this.sourceOrderQuantity;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Status
		/// </summary>
		public FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.Status Status
		{
			get
			{
				return this.status;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// TimeInForce
		/// </summary>
		public FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.TimeInForce TimeInForce
		{
			get
			{
				return this.timeInForce;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// TradeDate
		/// </summary>
		public FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.TradeDate TradeDate
		{
			get
			{
				return this.tradeDate;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// WorkingOrderList
		/// </summary>
		public System.Collections.Generic.IEnumerable<FluidTrade.Guardian.Schema.EquityWorkingOrder.WorkingOrder> WorkingOrderList
		{
			get
			{
				return this.workingOrderList;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.WorkingOrderHeader to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.WorkingOrderHeader workingOrderHeader = ((FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.WorkingOrderHeader)(iContent));
			this.askPrice.Copy(workingOrderHeader.askPrice);
			this.availableQuantity.Copy(workingOrderHeader.availableQuantity);
			this.bidPrice.Copy(workingOrderHeader.bidPrice);
			this.blotter.Copy(workingOrderHeader.blotter);
			this.brokerMatch.Copy(workingOrderHeader.brokerMatch);
			this.createdBy.Copy(workingOrderHeader.createdBy);
			this.createdTime.Copy(workingOrderHeader.createdTime);
			this.crossing.Copy(workingOrderHeader.crossing);
			this.destinationOrderQuantity.Copy(workingOrderHeader.destinationOrderQuantity);
			this.executionQuantity.Copy(workingOrderHeader.executionQuantity);
			this.hedgeMatch.Copy(workingOrderHeader.hedgeMatch);
			this.institutionMatch.Copy(workingOrderHeader.institutionMatch);
			this.lastPrice.Copy(workingOrderHeader.lastPrice);
			this.leavesQuantity.Copy(workingOrderHeader.leavesQuantity);
			this.marketValue.Copy(workingOrderHeader.marketValue);
			this.modifiedBy.Copy(workingOrderHeader.modifiedBy);
			this.modifiedTime.Copy(workingOrderHeader.modifiedTime);
			this.orderType.Copy(workingOrderHeader.orderType);
			this.securityName.Copy(workingOrderHeader.securityName);
			this.securitySymbol.Copy(workingOrderHeader.securitySymbol);
			this.settlementDate.Copy(workingOrderHeader.settlementDate);
			this.side.Copy(workingOrderHeader.side);
			this.sourceOrderQuantity.Copy(workingOrderHeader.sourceOrderQuantity);
			this.status.Copy(workingOrderHeader.status);
			this.timeInForce.Copy(workingOrderHeader.timeInForce);
			this.tradeDate.Copy(workingOrderHeader.tradeDate);
		}
		
		/// <summary>
		/// Creates a FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.WorkingOrderHeader.
		/// </summary>
		public FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.WorkingOrderHeader Select(System.Guid guid)
		{
			this.key = guid;
			System.Collections.Generic.IEnumerable<FluidTrade.Guardian.WorkingOrderRow> m594c7542c80f492f81def561c67fce1b = System.Linq.Enumerable.Where<FluidTrade.Guardian.WorkingOrderRow>(DataModel.WorkingOrder, this.prefilter.Filter);
			System.Collections.Generic.IEnumerable<FluidTrade.Guardian.Schema.EquityWorkingOrder.WorkingOrder> ld67d27b384f14b47ad493b635d8891f0 = System.Linq.Enumerable.Select<FluidTrade.Guardian.WorkingOrderRow, FluidTrade.Guardian.Schema.EquityWorkingOrder.WorkingOrder>(m594c7542c80f492f81def561c67fce1b, this.selector);
			System.Collections.Generic.IEnumerable<FluidTrade.Guardian.Schema.EquityWorkingOrder.WorkingOrder> y840a5170b96b4a2889cb53ed129fd839 = System.Linq.Enumerable.Where<FluidTrade.Guardian.Schema.EquityWorkingOrder.WorkingOrder>(ld67d27b384f14b47ad493b635d8891f0, this.filter.Filter);
			System.Collections.Generic.IEnumerable<FluidTrade.Guardian.Schema.EquityWorkingOrder.WorkingOrder> r7c15612aad4946d2acc4228a11dc69e3 = System.Linq.Enumerable.OrderBy<FluidTrade.Guardian.Schema.EquityWorkingOrder.WorkingOrder, FluidTrade.Guardian.Schema.EquityWorkingOrder.WorkingOrder>(y840a5170b96b4a2889cb53ed129fd839, FluidTrade.Guardian.Schema.EquityWorkingOrder.WorkingOrder.SelectSelf, this.comparer);
			this.workingOrderList = System.Linq.Enumerable.ToArray(r7c15612aad4946d2acc4228a11dc69e3);
			return this;
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.WorkingOrderHeader SelectFromSelf(FluidTrade.Guardian.Schema.EquityWorkingOrderHeader.WorkingOrderHeader workingOrderHeader)
		{
			return workingOrderHeader;
		}
	}
}
