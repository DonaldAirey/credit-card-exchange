<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic">
	<Style x:Key="&#252;" TargetType="{x:Type RepeatButton}">
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Border Background="{TemplateBinding Background}"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="&#253;" TargetType="{x:Type Thumb}">
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="Foreground" Value="{x:Null}"/>
		<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
		<Setter Property="Height" Value="21"/>
		<Setter Property="Width" Value="11"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<theme:ClassicBorderDecorator BorderStyle="Raised"
                                                  Background="{TemplateBinding Background}"
                                                  BorderBrush="{x:Static theme:ClassicBorderDecorator.ClassicBorderBrush}"
                                                  BorderThickness="3">
						<Rectangle Name="ForegroundRect" Fill="{TemplateBinding Foreground}" Opacity="0.5" Margin="-1"/>
					</theme:ClassicBorderDecorator>
					<ControlTemplate.Triggers>
						<Trigger Property="IsDragging" Value="true">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="&#254;" TargetType="{x:Type Thumb}">
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="Foreground" Value="{x:Null}"/>
		<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
		<Setter Property="Height" Value="21"/>
		<Setter Property="Width" Value="11"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Canvas SnapsToDevicePixels="true">
						<!-- Fill Background Area including base border -->
						<Path Fill="{TemplateBinding Background}" Data="M 11 21 L 0 21 L 0 6 L 5 1 L 6 1 L 11 6 z"/>
						<!-- LeftTip/Left-OuterLine -->
						<Path Stroke="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"
                              StrokeThickness="1.0"
                              Data="M 0.5 20 L 0.5 5.5 L 5 0.5 L 5.5 0.5"/>
						<!-- Bottom/Right/RightTip-OuterLine -->
						<Path Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"
                              StrokeThickness="1.0"
                              Data="M 5.5 0.5 L 6 0.5 L 10.5 5.5 L 10.5 20.5 L 0 20.5"/>
						<!-- LeftTip/Left-InnerLine -->
						<Path Stroke="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}"
                              StrokeThickness="1.0"
                              Data="M 1.5 19 L 1.5 5.5 L 5 1.5 L 5.5 1.5"/>
						<!-- Bottom/Right/RightTip-InnerLine-->
						<Path Stroke="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"
                              StrokeThickness="1.0"
                              Data="M 5.5 1.5 L 6 1.5 L 9.5 5.5 L 9.5 19.5 L 1.0 19.5"/>
						<!-- Fill Inner Area -->
						<Path Fill="{TemplateBinding Foreground}"
                              Opacity="0.5"
                              Data="M 9 19 L 2 19 L 2 6 L 5.5 2 L 9 6 z"/>
					</Canvas>
					<ControlTemplate.Triggers>
						<Trigger Property="IsDragging" Value="true">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="&#255;" TargetType="{x:Type Thumb}">
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="Foreground" Value="{x:Null}"/>
		<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
		<Setter Property="Height" Value="21"/>
		<Setter Property="Width" Value="11"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Canvas SnapsToDevicePixels="true">
						<!-- Fill Background Area including base border -->
						<Path Fill="{TemplateBinding Background}"
                              Data="M 11 0 L 0 0 L 0 15 L 5 21 L 6 21 L 11 15 z"/>
						<!-- Top/Left/LeftTip OuterLine -->
						<Path Stroke="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"
                              StrokeThickness="1.0"
                              Data="M 10 0.5 L 0.5 0.5 L 0.5 15.5 L 5 20.5 L 5.5 20.5"/>
						<!-- Right/RightTip OuterLine -->
						<Path Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"
                              StrokeThickness="1.0"
                              Data="M 5.5 20.5 L 6 20.5 L 10.5 15.5 L 10.5 0"/>
						<!-- Top/Left/LeftTip InnerLine -->
						<Path Stroke="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}"
                              StrokeThickness="1.0"
                              Data="M 9 1.5 L 1.5 1.5 L 1.5 15.5 L 5 19.5 L 5.5 19.5"/>
						<!-- Right/RightTip InnerLine -->
						<Path Stroke="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"
                              StrokeThickness="1.0"
                              Data="M 5.5 19.5 L 6 19.5 L 9.5 15.5 L 9.5 1"/>
						<!-- Fill Inner Area -->
						<Path Fill="{TemplateBinding Foreground}"
                              Opacity="0.5"
                              Data="M 9 2 L 2 2 L 2 15 L 5.5 19 L 9 15 z"/>
					</Canvas>
					<ControlTemplate.Triggers>
						<Trigger Property="IsDragging" Value="true">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!--=================================================================
        VerticalSlider
    ==================================================================-->
	<Style x:Key="&#256;"
           TargetType="{x:Type Thumb}">
		<Setter Property="OverridesDefaultStyle"
                Value="true"/>
		<Setter Property="Foreground"
                Value="{x:Null}"/>
		<Setter Property="Background"
                Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
		<Setter Property="Width"
                Value="21"/>
		<Setter Property="Height"
                Value="11"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<theme:ClassicBorderDecorator BorderStyle="Raised"
                                                  Background="{TemplateBinding Background}"
                                                  BorderBrush="{x:Static theme:ClassicBorderDecorator.ClassicBorderBrush}"
                                                  BorderThickness="3">
						<Rectangle 
                                   Fill="{TemplateBinding Foreground}"
                                   Opacity="0.5"
                                   Margin="-1"/>
					</theme:ClassicBorderDecorator>
					<ControlTemplate.Triggers>
						<Trigger Property="IsDragging"
                                 Value="true">
							<Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
						</Trigger>
						<Trigger Property="IsEnabled"
                                 Value="false">
							<Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="&#257;" TargetType="{x:Type Thumb}">
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="Foreground" Value="{x:Null}"/>
		<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
		<Setter Property="Width" Value="21"/>
		<Setter Property="Height" Value="11"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Canvas SnapsToDevicePixels="true">
						<!-- Fill Background Area including base border -->
						<Path Fill="{TemplateBinding Background}"
                              Data="M 21 11 L 21 0 L 6 0 L 0 5 L 0 6 L 6 11 z"/>
						<!-- TopTip/Top OuterLine -->
						<Path Stroke="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"
                              StrokeThickness="1.0"
                              Data="M 20 0.5 L 5.5 0.5 L 0.5 5 L 0.5 5.5 "/>
						<!-- Right/Bottom/BottomTip OuterLine -->
						<Path Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"
                              StrokeThickness="1.0"
                              Data="M 0.5 5.5 L 0.5 6 L 5.5 10.5 L 20.5 10.5 L 20.5 0 "/>
						<!-- TopTip/Top InnerLine -->
						<Path Stroke="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}"
                              StrokeThickness="1.0"
                              Data="M 19 1.5 L 5.5 1.5 L 1.5 5 L 1.5 5.5 "/>
						<!-- Right/Bottom/BottomTip InnerLine-->
						<Path Stroke="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"
                              StrokeThickness="1.0"
                              Data="M 1.5 5.5 L 1.5 6 L 5.5 9.5 L 19.5 9.5 L 19.5 1.0 "/>
						<!-- Fill Inner Area -->
						<Path Fill="{TemplateBinding Foreground}"
                              Opacity="0.5"
                              Data="M 19 9 L 19 2 L 6 2 L 2 5.5 L 6 9 z"/>
					</Canvas>
					<ControlTemplate.Triggers>
						<Trigger Property="IsDragging" Value="true">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="&#258;"
           TargetType="{x:Type Thumb}">
		<Setter Property="OverridesDefaultStyle"
                Value="true"/>
		<Setter Property="BorderThickness"
                Value="0,0,0,0"/>
		<Setter Property="Foreground"
                Value="{x:Null}"/>
		<Setter Property="Background"
                Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
		<Setter Property="Width"
                Value="21"/>
		<Setter Property="Height"
                Value="11"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Canvas SnapsToDevicePixels="true">
						<!-- Fill Background Area including base border -->
						<Path Fill="{TemplateBinding Background}"
                              Data="M 0 11 L 0 0 L 15 0 L 21 5 L 21 6 L 15 11 z"/>
						<!-- Left/Top/TopTip OuterLine -->
						<Path Stroke="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"
                              StrokeThickness="1.0"
                              Data="M 0.5 10 L 0.5 0.5 L 15.5 0.5 L 20.5 5 L 20.5 5.5 "/>
						<!-- Bottom/BottomTip OuterLine -->
						<Path Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"
                              StrokeThickness="1.0"
                              Data="M 20.5 5.5 L 20.5 6 L 15.5 10.5 L 0 10.5 "/>
						<!-- Left/Top/TopTip InnerLine -->
						<Path Stroke="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}"
                              StrokeThickness="1.0"
                              Data="M 1.5 9 L 1.5 1.5 L 15.5 1.5 L 19.5 5 L 19.5 5.5 "/>
						<!-- Bottom/BottomTip InnerLine -->
						<Path Stroke="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"
                              StrokeThickness="1.0"
                              Data="M 19.5 5.5 L 19.5 6 L 15.5 9.5 L 1 9.5 "/>
						<!-- Fill Inner Area -->
						<Path Fill="{TemplateBinding Foreground}"
                              Opacity="0.5"
                              Data="M 2 9 L 2 2 L 15 2 L 19 5.5 L 15 9 "/>
					</Canvas>
					<ControlTemplate.Triggers>
						<Trigger Property="IsDragging"
                                 Value="true">
							<Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
						</Trigger>
						<Trigger Property="IsEnabled"
                                 Value="false">
							<Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ZoomSlider" TargetType="{x:Type Slider}">
		<Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Slider}">
					<Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Width="{TemplateBinding Width}">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*"/>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto"
                                               MinHeight="{TemplateBinding Slider.MinHeight}"/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>
							<!--
                                 #
                                 # Top TickMark: Will be shown only when Slider.TickPlacement = TopLeft or Both
                                 #
                             -->
							<TickBar x:Name="TopTick"
                                     Placement="Top"
                                     Fill="{TemplateBinding Foreground}"
                                     Height="4"
                                     Visibility="Collapsed"/>
							<!--
                                 #
                                 # Slider TrackBackground
                                 #
                                 # Draw Track Background. Usually, the track image is smaller than the size of
                                 # the channel. So, we need to put the background at center of the channel.
                                 #
                             -->
							<theme:ClassicBorderDecorator Name="TrackBackground"
                                                          Margin="0,0,0,1"
                                                          Height="4"
                                                          Grid.Row="1"
                                                          BorderStyle="Sunken"
                                                          BorderBrush="{x:Static theme:ClassicBorderDecorator.ClassicBorderBrush}"
                                                          BorderThickness="2">
								<!--
                                     #
                                     # SelectionRangeElement
                                     #
                                 -->
								<Canvas Margin="-2">
									<!--
                                         #
                                         # SelectionRangeElement
                                         #
                                     -->
									<Rectangle x:Name="PART_SelectionRange"
                                               Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                                               Height="4.0"
                                               Visibility="Hidden"/>
								</Canvas>
							</theme:ClassicBorderDecorator>

							<!--
                                 #
                                 # MainPartsPanel
                                 # ==============
                                 #   This is a panel that hold 2 transparent RepeatButtons and Thumb.
                                 #   This part usually lay on top of the Track background.
                               -->
							<Track Grid.Row="1"
                                   Name="PART_Track">
								<Track.DecreaseRepeatButton>
									<RepeatButton Style="{StaticResource &#252;}"
                                                  Command="{x:Static Slider.DecreaseLarge}"/>
								</Track.DecreaseRepeatButton>
								<Track.IncreaseRepeatButton>
									<RepeatButton Style="{StaticResource &#252;}"
                                                  Command="{x:Static Slider.IncreaseLarge}"/>
								</Track.IncreaseRepeatButton>
								<Track.Thumb>
									<Thumb x:Name="Thumb"
                                           Style="{StaticResource &#253;}"/>
								</Track.Thumb>
							</Track>

							<!--
                                 #
                                 # Bottom TickMark: Will be shown only when Slider.TickPlacement = BottomRight or Both
                                 #
                             -->
							<TickBar x:Name="BottomTick"
                                     Fill="{TemplateBinding Foreground}"
                                     Placement="Bottom"
                                     Height="4"
                                     Visibility="Collapsed"
                                     Grid.Row="2"/>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<!-- ShowTickMarkBands and Reposition the Track-->
						<Trigger Property="TickPlacement"
                                 Value="TopLeft">
							<Setter TargetName="TopTick"
                                    Property="Visibility"
                                    Value="Visible"/>
							<Setter TargetName="Thumb"
                                    Property="Style"
                                    Value="{StaticResource &#254;}"/>
							<Setter TargetName="TrackBackground"
                                    Property="Margin"
                                    Value="0,3,0,0"/>
						</Trigger>
						<Trigger Property="TickPlacement" Value="BottomRight">
							<Setter TargetName="BottomTick" Property="Visibility" Value="Visible"/>
							<Setter TargetName="Thumb" Property="Style" Value="{StaticResource &#255;}"/>
							<Setter TargetName="TrackBackground" Property="Margin" Value="0,0,0,3"/>
						</Trigger>
						<Trigger Property="TickPlacement" Value="Both">
							<Setter TargetName="TopTick" Property="Visibility" Value="Visible"/>
							<Setter TargetName="BottomTick" Property="Visibility" Value="Visible"/>
						</Trigger>
						<!-- Display SelectionRange background -->
						<Trigger Property="IsSelectionRangeEnabled" Value="true">
							<Setter TargetName="PART_SelectionRange" Property="Visibility" Value="Visible"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="Orientation" Value="Vertical">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Slider}">
							<Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Height="{TemplateBinding Height}">
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition Width="Auto" MinWidth="{TemplateBinding Slider.MinWidth}"/>
										<ColumnDefinition Width="Auto"/>
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition Height="*"/>
									</Grid.RowDefinitions>
									<!--
                                         #
                                         # Left TickMark: Will be shown only when Slider.TickPlacement = TopLeft or Both
                                         #
                                      -->
									<TickBar x:Name="LeftTick" Placement="Left" Fill="{TemplateBinding Foreground}" Width="4" Visibility="Collapsed"/>
									<!--
                                         #
                                         # Slider Track Background
                                         #
                                         # Draw Track Background. Usually, the track image is smaller than the size of
                                         # the channel. So, we need to put the background at center of the channel.
                                         #
                                     -->
									<theme:ClassicBorderDecorator Name="TrackBackground"
                                                                  Margin="0,0,1,0"
                                                                  Width="4"
                                                                  Grid.Column="1"
                                                                  BorderStyle="Sunken"
                                                                  BorderBrush="{x:Static theme:ClassicBorderDecorator.ClassicBorderBrush}"
                                                                  BorderThickness="2">
										<Canvas Margin="-2">
											<!--
                                             #
                                             # SelectionRangeElement
                                             #
                                         -->
											<Rectangle x:Name="PART_SelectionRange"
                                                       Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                                                       Width="4.0"
                                                       Visibility="Hidden"/>
										</Canvas>
									</theme:ClassicBorderDecorator>

									<!--
                                         #
                                         # MainPartsPanel
                                         # ==============
                                         #   This is a panel that hold 2 transparent RepeatButtons and Thumb.
                                         #   This part usually lay on top of the Track background.
                                     -->
									<Track Grid.Column="1"
                                           Name="PART_Track">
										<Track.DecreaseRepeatButton>
											<RepeatButton Style="{StaticResource &#252;}" Command="{x:Static Slider.DecreaseLarge}"/>
										</Track.DecreaseRepeatButton>
										<Track.IncreaseRepeatButton>
											<RepeatButton Style="{StaticResource &#252;}" Command="{x:Static Slider.IncreaseLarge}"/>
										</Track.IncreaseRepeatButton>
										<Track.Thumb>
											<Thumb x:Name="Thumb" Style="{StaticResource &#256;}"/>
										</Track.Thumb>
									</Track>

									<!--
                                         #
                                         # Right TickMark: Will be shown only when Slider.TickPlacement = BottomRight or Both
                                         #
                                     -->
									<TickBar x:Name="RightTick"
                                             Fill="{TemplateBinding Foreground}"
                                             Placement="Right"
                                             Width="4"
                                             Visibility="Collapsed"
                                             Grid.Column="2"
                                             Grid.RowSpan="3"/>
								</Grid>
							</Border>
							<ControlTemplate.Triggers>
								<!-- ShowTickMarkBands and Reposition the Track-->
								<Trigger Property="TickPlacement" Value="TopLeft">
									<Setter TargetName="LeftTick" Property="Visibility" Value="Visible"/>
									<Setter TargetName="Thumb" Property="Style" Value="{StaticResource &#257;}"/>
									<Setter TargetName="TrackBackground" Property="Margin" Value="3,0,0,0"/>
								</Trigger>
								<Trigger Property="TickPlacement" Value="BottomRight">
									<Setter TargetName="RightTick" Property="Visibility" Value="Visible"/>
									<Setter TargetName="Thumb" Property="Style" Value="{StaticResource &#258;}"/>
									<Setter TargetName="TrackBackground" Property="Margin" Value="0,0,3,0"/>
								</Trigger>
								<Trigger Property="TickPlacement" Value="Both">
									<Setter TargetName="LeftTick" Property="Visibility" Value="Visible"/>
									<Setter TargetName="RightTick" Property="Visibility" Value="Visible"/>
								</Trigger>
								<!-- Display SelectionRange background -->
								<Trigger Property="IsSelectionRangeEnabled" Value="true">
									<Setter TargetName="PART_SelectionRange" Property="Visibility" Value="Visible"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>
</ResourceDictionary>