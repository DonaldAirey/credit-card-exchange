//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FluidTrade.Guardian.AdminSupportReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MethodResponseguid", Namespace="http://schemas.datacontract.org/2004/07/FluidTrade.Guardian.Records")]
    [System.SerializableAttribute()]
    public partial class MethodResponseguid : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FluidTrade.Guardian.AdminSupportReference.ErrorInfo[] ErrorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessfulField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ResultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FluidTrade.Guardian.AdminSupportReference.ErrorInfo[] Errors {
            get {
                return this.ErrorsField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorsField, value) != true)) {
                    this.ErrorsField = value;
                    this.RaisePropertyChanged("Errors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccessful {
            get {
                return this.IsSuccessfulField;
            }
            set {
                if ((this.IsSuccessfulField.Equals(value) != true)) {
                    this.IsSuccessfulField = value;
                    this.RaisePropertyChanged("IsSuccessful");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ErrorInfo", Namespace="http://schemas.datacontract.org/2004/07/FluidTrade.Guardian.Records")]
    [System.SerializableAttribute()]
    public partial class ErrorInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BulkIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FluidTrade.Core.ErrorCode ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BulkIndex {
            get {
                return this.BulkIndexField;
            }
            set {
                if ((this.BulkIndexField.Equals(value) != true)) {
                    this.BulkIndexField = value;
                    this.RaisePropertyChanged("BulkIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FluidTrade.Core.ErrorCode ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((this.ErrorCodeField.Equals(value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MethodResponseErrorCode", Namespace="http://schemas.datacontract.org/2004/07/FluidTrade.Guardian.Records")]
    [System.SerializableAttribute()]
    public partial class MethodResponseErrorCode : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FluidTrade.Guardian.AdminSupportReference.ErrorInfo[] ErrorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessfulField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FluidTrade.Core.ErrorCode ResultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FluidTrade.Guardian.AdminSupportReference.ErrorInfo[] Errors {
            get {
                return this.ErrorsField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorsField, value) != true)) {
                    this.ErrorsField = value;
                    this.RaisePropertyChanged("Errors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccessful {
            get {
                return this.IsSuccessfulField;
            }
            set {
                if ((this.IsSuccessfulField.Equals(value) != true)) {
                    this.IsSuccessfulField = value;
                    this.RaisePropertyChanged("IsSuccessful");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FluidTrade.Core.ErrorCode Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/FluidTrade.Guardian")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(FluidTrade.Guardian.AdminSupportReference.UserContextData))]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid GroupIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LookupIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid OrganizationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailAddress {
            get {
                return this.EmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailAddressField, value) != true)) {
                    this.EmailAddressField = value;
                    this.RaisePropertyChanged("EmailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid GroupId {
            get {
                return this.GroupIdField;
            }
            set {
                if ((this.GroupIdField.Equals(value) != true)) {
                    this.GroupIdField = value;
                    this.RaisePropertyChanged("GroupId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LookupId {
            get {
                return this.LookupIdField;
            }
            set {
                if ((object.ReferenceEquals(this.LookupIdField, value) != true)) {
                    this.LookupIdField = value;
                    this.RaisePropertyChanged("LookupId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Organization {
            get {
                return this.OrganizationField;
            }
            set {
                if ((this.OrganizationField.Equals(value) != true)) {
                    this.OrganizationField = value;
                    this.RaisePropertyChanged("Organization");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserContextData", Namespace="http://schemas.datacontract.org/2004/07/FluidTrade.Guardian")]
    [System.SerializableAttribute()]
    public partial class UserContextData : FluidTrade.Guardian.AdminSupportReference.User {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AccountDisabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] AvailabeleOperationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPasswordExpiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PasswordExpiresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServerVersionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AccountDisabled {
            get {
                return this.AccountDisabledField;
            }
            set {
                if ((this.AccountDisabledField.Equals(value) != true)) {
                    this.AccountDisabledField = value;
                    this.RaisePropertyChanged("AccountDisabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] AvailabeleOperations {
            get {
                return this.AvailabeleOperationsField;
            }
            set {
                if ((object.ReferenceEquals(this.AvailabeleOperationsField, value) != true)) {
                    this.AvailabeleOperationsField = value;
                    this.RaisePropertyChanged("AvailabeleOperations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPasswordExpired {
            get {
                return this.IsPasswordExpiredField;
            }
            set {
                if ((this.IsPasswordExpiredField.Equals(value) != true)) {
                    this.IsPasswordExpiredField = value;
                    this.RaisePropertyChanged("IsPasswordExpired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PasswordExpires {
            get {
                return this.PasswordExpiresField;
            }
            set {
                if ((this.PasswordExpiresField.Equals(value) != true)) {
                    this.PasswordExpiresField = value;
                    this.RaisePropertyChanged("PasswordExpires");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServerVersion {
            get {
                return this.ServerVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerVersionField, value) != true)) {
                    this.ServerVersionField = value;
                    this.RaisePropertyChanged("ServerVersion");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MethodResponseArrayOfguid", Namespace="http://schemas.datacontract.org/2004/07/FluidTrade.Guardian.Records")]
    [System.SerializableAttribute()]
    public partial class MethodResponseArrayOfguid : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FluidTrade.Guardian.AdminSupportReference.ErrorInfo[] ErrorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessfulField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid[] ResultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FluidTrade.Guardian.AdminSupportReference.ErrorInfo[] Errors {
            get {
                return this.ErrorsField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorsField, value) != true)) {
                    this.ErrorsField = value;
                    this.RaisePropertyChanged("Errors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccessful {
            get {
                return this.IsSuccessfulField;
            }
            set {
                if ((this.IsSuccessfulField.Equals(value) != true)) {
                    this.IsSuccessfulField = value;
                    this.RaisePropertyChanged("IsSuccessful");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid[] Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MethodResponseUserContextData", Namespace="http://schemas.datacontract.org/2004/07/FluidTrade.Guardian.Records")]
    [System.SerializableAttribute()]
    public partial class MethodResponseUserContextData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FluidTrade.Guardian.AdminSupportReference.ErrorInfo[] ErrorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessfulField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FluidTrade.Guardian.AdminSupportReference.UserContextData ResultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FluidTrade.Guardian.AdminSupportReference.ErrorInfo[] Errors {
            get {
                return this.ErrorsField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorsField, value) != true)) {
                    this.ErrorsField = value;
                    this.RaisePropertyChanged("Errors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccessful {
            get {
                return this.IsSuccessfulField;
            }
            set {
                if ((this.IsSuccessfulField.Equals(value) != true)) {
                    this.IsSuccessfulField = value;
                    this.RaisePropertyChanged("IsSuccessful");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FluidTrade.Guardian.AdminSupportReference.UserContextData Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Organization", Namespace="http://schemas.datacontract.org/2004/07/FluidTrade.Guardian")]
    [System.SerializableAttribute()]
    public partial class Organization : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid OrganizationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid TenantIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TenantIdExternalId0Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TenantNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FluidTrade.Guardian.AdminSupportReference.OrganizationType TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactName {
            get {
                return this.ContactNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactNameField, value) != true)) {
                    this.ContactNameField = value;
                    this.RaisePropertyChanged("ContactName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid OrganizationId {
            get {
                return this.OrganizationIdField;
            }
            set {
                if ((this.OrganizationIdField.Equals(value) != true)) {
                    this.OrganizationIdField = value;
                    this.RaisePropertyChanged("OrganizationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid TenantId {
            get {
                return this.TenantIdField;
            }
            set {
                if ((this.TenantIdField.Equals(value) != true)) {
                    this.TenantIdField = value;
                    this.RaisePropertyChanged("TenantId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TenantIdExternalId0 {
            get {
                return this.TenantIdExternalId0Field;
            }
            set {
                if ((object.ReferenceEquals(this.TenantIdExternalId0Field, value) != true)) {
                    this.TenantIdExternalId0Field = value;
                    this.RaisePropertyChanged("TenantIdExternalId0");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TenantName {
            get {
                return this.TenantNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TenantNameField, value) != true)) {
                    this.TenantNameField = value;
                    this.RaisePropertyChanged("TenantName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FluidTrade.Guardian.AdminSupportReference.OrganizationType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrganizationType", Namespace="http://schemas.datacontract.org/2004/07/FluidTrade.Guardian")]
    public enum OrganizationType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DebtHolder = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DebtNegotiator = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MethodResponseArrayOfUserContextData", Namespace="http://schemas.datacontract.org/2004/07/FluidTrade.Guardian.Records")]
    [System.SerializableAttribute()]
    public partial class MethodResponseArrayOfUserContextData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FluidTrade.Guardian.AdminSupportReference.ErrorInfo[] ErrorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessfulField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FluidTrade.Guardian.AdminSupportReference.UserContextData[] ResultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FluidTrade.Guardian.AdminSupportReference.ErrorInfo[] Errors {
            get {
                return this.ErrorsField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorsField, value) != true)) {
                    this.ErrorsField = value;
                    this.RaisePropertyChanged("Errors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccessful {
            get {
                return this.IsSuccessfulField;
            }
            set {
                if ((this.IsSuccessfulField.Equals(value) != true)) {
                    this.IsSuccessfulField = value;
                    this.RaisePropertyChanged("IsSuccessful");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FluidTrade.Guardian.AdminSupportReference.UserContextData[] Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AdminSupportReference.IAdminSupport")]
    public interface IAdminSupport {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminSupport/AddOrganization", ReplyAction="http://tempuri.org/IAdminSupport/AddOrganizationResponse")]
        FluidTrade.Guardian.AdminSupportReference.MethodResponseguid AddOrganization(string organization, string parent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminSupport/AddUserToGroup", ReplyAction="http://tempuri.org/IAdminSupport/AddUserToGroupResponse")]
        FluidTrade.Guardian.AdminSupportReference.MethodResponseErrorCode AddUserToGroup(string lookupID, System.Guid groupId, System.Guid tenantId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminSupport/ChangePassword", ReplyAction="http://tempuri.org/IAdminSupport/ChangePasswordResponse")]
        FluidTrade.Guardian.AdminSupportReference.MethodResponseErrorCode ChangePassword(string currentPassword, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminSupport/CreateUsers", ReplyAction="http://tempuri.org/IAdminSupport/CreateUsersResponse")]
        [System.ServiceModel.TransactionFlowAttribute(System.ServiceModel.TransactionFlowOption.Allowed)]
        FluidTrade.Guardian.AdminSupportReference.MethodResponseArrayOfguid CreateUsers(FluidTrade.Guardian.AdminSupportReference.User[] user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminSupport/CreateUser", ReplyAction="http://tempuri.org/IAdminSupport/CreateUserResponse")]
        [System.ServiceModel.TransactionFlowAttribute(System.ServiceModel.TransactionFlowOption.Allowed)]
        FluidTrade.Guardian.AdminSupportReference.MethodResponseguid CreateUser(FluidTrade.Guardian.AdminSupportReference.User user, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminSupport/DeleteUserAccount", ReplyAction="http://tempuri.org/IAdminSupport/DeleteUserAccountResponse")]
        [System.ServiceModel.TransactionFlowAttribute(System.ServiceModel.TransactionFlowOption.Allowed)]
        FluidTrade.Guardian.AdminSupportReference.MethodResponseErrorCode DeleteUserAccount(string lookupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminSupport/DisableUserAccount", ReplyAction="http://tempuri.org/IAdminSupport/DisableUserAccountResponse")]
        [System.ServiceModel.TransactionFlowAttribute(System.ServiceModel.TransactionFlowOption.Allowed)]
        FluidTrade.Guardian.AdminSupportReference.MethodResponseErrorCode DisableUserAccount(string lookupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminSupport/FindUserByName", ReplyAction="http://tempuri.org/IAdminSupport/FindUserByNameResponse")]
        [System.ServiceModel.TransactionFlowAttribute(System.ServiceModel.TransactionFlowOption.Allowed)]
        FluidTrade.Guardian.AdminSupportReference.MethodResponseUserContextData FindUserByName(string lookupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminSupport/GetDebtOrganizations", ReplyAction="http://tempuri.org/IAdminSupport/GetDebtOrganizationsResponse")]
        [System.ServiceModel.TransactionFlowAttribute(System.ServiceModel.TransactionFlowOption.Allowed)]
        FluidTrade.Guardian.AdminSupportReference.Organization[] GetDebtOrganizations(string lookupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminSupport/GetAllUsers", ReplyAction="http://tempuri.org/IAdminSupport/GetAllUsersResponse")]
        [System.ServiceModel.TransactionFlowAttribute(System.ServiceModel.TransactionFlowOption.Allowed)]
        FluidTrade.Guardian.AdminSupportReference.MethodResponseArrayOfUserContextData GetAllUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminSupport/GetUserContext", ReplyAction="http://tempuri.org/IAdminSupport/GetUserContextResponse")]
        [System.ServiceModel.TransactionFlowAttribute(System.ServiceModel.TransactionFlowOption.Allowed)]
        FluidTrade.Guardian.AdminSupportReference.MethodResponseUserContextData GetUserContext();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminSupport/MustChangePasswordOnNextLogin", ReplyAction="http://tempuri.org/IAdminSupport/MustChangePasswordOnNextLoginResponse")]
        FluidTrade.Guardian.AdminSupportReference.MethodResponseErrorCode MustChangePasswordOnNextLogin(string lookupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminSupport/RemoveUserFromGroup", ReplyAction="http://tempuri.org/IAdminSupport/RemoveUserFromGroupResponse")]
        FluidTrade.Guardian.AdminSupportReference.MethodResponseErrorCode RemoveUserFromGroup(string lookupID, System.Guid groupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminSupport/ResetPassword", ReplyAction="http://tempuri.org/IAdminSupport/ResetPasswordResponse")]
        FluidTrade.Guardian.AdminSupportReference.MethodResponseErrorCode ResetPassword(string lookupID, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminSupport/UpdateUser", ReplyAction="http://tempuri.org/IAdminSupport/UpdateUserResponse")]
        FluidTrade.Guardian.AdminSupportReference.MethodResponseErrorCode UpdateUser(FluidTrade.Guardian.AdminSupportReference.User[] user);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAdminSupportChannel : FluidTrade.Guardian.AdminSupportReference.IAdminSupport, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AdminSupportClient : System.ServiceModel.ClientBase<FluidTrade.Guardian.AdminSupportReference.IAdminSupport>, FluidTrade.Guardian.AdminSupportReference.IAdminSupport {
        
        public AdminSupportClient() {
        }
        
        public AdminSupportClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AdminSupportClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdminSupportClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdminSupportClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public FluidTrade.Guardian.AdminSupportReference.MethodResponseguid AddOrganization(string organization, string parent) {
            return base.Channel.AddOrganization(organization, parent);
        }
        
        public FluidTrade.Guardian.AdminSupportReference.MethodResponseErrorCode AddUserToGroup(string lookupID, System.Guid groupId, System.Guid tenantId) {
            return base.Channel.AddUserToGroup(lookupID, groupId, tenantId);
        }
        
        public FluidTrade.Guardian.AdminSupportReference.MethodResponseErrorCode ChangePassword(string currentPassword, string newPassword) {
            return base.Channel.ChangePassword(currentPassword, newPassword);
        }
        
        public FluidTrade.Guardian.AdminSupportReference.MethodResponseArrayOfguid CreateUsers(FluidTrade.Guardian.AdminSupportReference.User[] user) {
            return base.Channel.CreateUsers(user);
        }
        
        public FluidTrade.Guardian.AdminSupportReference.MethodResponseguid CreateUser(FluidTrade.Guardian.AdminSupportReference.User user, string password) {
            return base.Channel.CreateUser(user, password);
        }
        
        public FluidTrade.Guardian.AdminSupportReference.MethodResponseErrorCode DeleteUserAccount(string lookupID) {
            return base.Channel.DeleteUserAccount(lookupID);
        }
        
        public FluidTrade.Guardian.AdminSupportReference.MethodResponseErrorCode DisableUserAccount(string lookupID) {
            return base.Channel.DisableUserAccount(lookupID);
        }
        
        public FluidTrade.Guardian.AdminSupportReference.MethodResponseUserContextData FindUserByName(string lookupId) {
            return base.Channel.FindUserByName(lookupId);
        }
        
        public FluidTrade.Guardian.AdminSupportReference.Organization[] GetDebtOrganizations(string lookupId) {
            return base.Channel.GetDebtOrganizations(lookupId);
        }
        
        public FluidTrade.Guardian.AdminSupportReference.MethodResponseArrayOfUserContextData GetAllUsers() {
            return base.Channel.GetAllUsers();
        }
        
        public FluidTrade.Guardian.AdminSupportReference.MethodResponseUserContextData GetUserContext() {
            return base.Channel.GetUserContext();
        }
        
        public FluidTrade.Guardian.AdminSupportReference.MethodResponseErrorCode MustChangePasswordOnNextLogin(string lookupID) {
            return base.Channel.MustChangePasswordOnNextLogin(lookupID);
        }
        
        public FluidTrade.Guardian.AdminSupportReference.MethodResponseErrorCode RemoveUserFromGroup(string lookupID, System.Guid groupId) {
            return base.Channel.RemoveUserFromGroup(lookupID, groupId);
        }
        
        public FluidTrade.Guardian.AdminSupportReference.MethodResponseErrorCode ResetPassword(string lookupID, string password) {
            return base.Channel.ResetPassword(lookupID, password);
        }
        
        public FluidTrade.Guardian.AdminSupportReference.MethodResponseErrorCode UpdateUser(FluidTrade.Guardian.AdminSupportReference.User[] user) {
            return base.Channel.UpdateUser(user);
        }
    }
}
