//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3074
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Windows.Markup.XmlnsDefinitionAttribute("urn:schemas-fluidtrade-com:guardian:settlement", "FluidTrade.Guardian.Schema.Settlement")]

namespace FluidTrade.Guardian.Schema.Settlement
{
	
	
	/// <summary>
	/// This class provides the AccountBalance data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class AccountBalance : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.Settlement.AccountBalance, FluidTrade.Guardian.Schema.Settlement.AccountBalance> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static AccountBalance()
		{
			FluidTrade.Guardian.Schema.Settlement.AccountBalance.selectSelf = new System.Func<FluidTrade.Guardian.Schema.Settlement.AccountBalance, FluidTrade.Guardian.Schema.Settlement.AccountBalance>(FluidTrade.Guardian.Schema.Settlement.AccountBalance.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.Settlement.AccountBalance records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.Settlement.AccountBalance, FluidTrade.Guardian.Schema.Settlement.AccountBalance> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.Settlement.AccountBalance.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.Settlement.AccountBalance to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.Settlement.AccountBalance accountBalance = ((FluidTrade.Guardian.Schema.Settlement.AccountBalance)(iContent));
			if ((this.isActive != accountBalance.isActive))
			{
				this.isActive = accountBalance.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != accountBalance.text))
			{
				this.text = accountBalance.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.Settlement.AccountBalance SelectFromSelf(FluidTrade.Guardian.Schema.Settlement.AccountBalance accountBalance)
		{
			return accountBalance;
		}
	}
	
	/// <summary>
	/// This class provides the DebtHolder data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class DebtHolder : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.Settlement.DebtHolder, FluidTrade.Guardian.Schema.Settlement.DebtHolder> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static DebtHolder()
		{
			FluidTrade.Guardian.Schema.Settlement.DebtHolder.selectSelf = new System.Func<FluidTrade.Guardian.Schema.Settlement.DebtHolder, FluidTrade.Guardian.Schema.Settlement.DebtHolder>(FluidTrade.Guardian.Schema.Settlement.DebtHolder.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.Settlement.DebtHolder records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.Settlement.DebtHolder, FluidTrade.Guardian.Schema.Settlement.DebtHolder> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.Settlement.DebtHolder.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.Settlement.DebtHolder to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.Settlement.DebtHolder debtHolder = ((FluidTrade.Guardian.Schema.Settlement.DebtHolder)(iContent));
			if ((this.isActive != debtHolder.isActive))
			{
				this.isActive = debtHolder.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != debtHolder.text))
			{
				this.text = debtHolder.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.Settlement.DebtHolder SelectFromSelf(FluidTrade.Guardian.Schema.Settlement.DebtHolder debtHolder)
		{
			return debtHolder;
		}
	}
	
	/// <summary>
	/// This class provides the DebtNegotiator data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class DebtNegotiator : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal System.Guid id;
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.Settlement.DebtNegotiator, FluidTrade.Guardian.Schema.Settlement.DebtNegotiator> selectSelf;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static DebtNegotiator()
		{
			FluidTrade.Guardian.Schema.Settlement.DebtNegotiator.selectSelf = new System.Func<FluidTrade.Guardian.Schema.Settlement.DebtNegotiator, FluidTrade.Guardian.Schema.Settlement.DebtNegotiator>(FluidTrade.Guardian.Schema.Settlement.DebtNegotiator.SelectFromSelf);
		}
		
		/// <summary>
		/// Id
		/// </summary>
		public System.Guid Id
		{
			get
			{
				return this.id;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.Settlement.DebtNegotiator records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.Settlement.DebtNegotiator, FluidTrade.Guardian.Schema.Settlement.DebtNegotiator> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.Settlement.DebtNegotiator.selectSelf;
			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.Settlement.DebtNegotiator to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.Settlement.DebtNegotiator debtNegotiator = ((FluidTrade.Guardian.Schema.Settlement.DebtNegotiator)(iContent));
			if ((this.isActive != debtNegotiator.isActive))
			{
				this.isActive = debtNegotiator.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.id != debtNegotiator.id))
			{
				this.id = debtNegotiator.id;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Id"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.Settlement.DebtNegotiator SelectFromSelf(FluidTrade.Guardian.Schema.Settlement.DebtNegotiator debtNegotiator)
		{
			return debtNegotiator;
		}
	}
	
	/// <summary>
	/// This class provides the DebtorFirstName data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class DebtorFirstName : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.Settlement.DebtorFirstName, FluidTrade.Guardian.Schema.Settlement.DebtorFirstName> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static DebtorFirstName()
		{
			FluidTrade.Guardian.Schema.Settlement.DebtorFirstName.selectSelf = new System.Func<FluidTrade.Guardian.Schema.Settlement.DebtorFirstName, FluidTrade.Guardian.Schema.Settlement.DebtorFirstName>(FluidTrade.Guardian.Schema.Settlement.DebtorFirstName.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.Settlement.DebtorFirstName records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.Settlement.DebtorFirstName, FluidTrade.Guardian.Schema.Settlement.DebtorFirstName> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.Settlement.DebtorFirstName.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.Settlement.DebtorFirstName to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.Settlement.DebtorFirstName debtorFirstName = ((FluidTrade.Guardian.Schema.Settlement.DebtorFirstName)(iContent));
			if ((this.isActive != debtorFirstName.isActive))
			{
				this.isActive = debtorFirstName.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != debtorFirstName.text))
			{
				this.text = debtorFirstName.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.Settlement.DebtorFirstName SelectFromSelf(FluidTrade.Guardian.Schema.Settlement.DebtorFirstName debtorFirstName)
		{
			return debtorFirstName;
		}
	}
	
	/// <summary>
	/// This class provides the DebtorMiddleName data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class DebtorMiddleName : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.Settlement.DebtorMiddleName, FluidTrade.Guardian.Schema.Settlement.DebtorMiddleName> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static DebtorMiddleName()
		{
			FluidTrade.Guardian.Schema.Settlement.DebtorMiddleName.selectSelf = new System.Func<FluidTrade.Guardian.Schema.Settlement.DebtorMiddleName, FluidTrade.Guardian.Schema.Settlement.DebtorMiddleName>(FluidTrade.Guardian.Schema.Settlement.DebtorMiddleName.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.Settlement.DebtorMiddleName records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.Settlement.DebtorMiddleName, FluidTrade.Guardian.Schema.Settlement.DebtorMiddleName> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.Settlement.DebtorMiddleName.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.Settlement.DebtorMiddleName to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.Settlement.DebtorMiddleName debtorMiddleName = ((FluidTrade.Guardian.Schema.Settlement.DebtorMiddleName)(iContent));
			if ((this.isActive != debtorMiddleName.isActive))
			{
				this.isActive = debtorMiddleName.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != debtorMiddleName.text))
			{
				this.text = debtorMiddleName.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.Settlement.DebtorMiddleName SelectFromSelf(FluidTrade.Guardian.Schema.Settlement.DebtorMiddleName debtorMiddleName)
		{
			return debtorMiddleName;
		}
	}
	
	/// <summary>
	/// This class provides the DebtorLastName data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class DebtorLastName : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.Settlement.DebtorLastName, FluidTrade.Guardian.Schema.Settlement.DebtorLastName> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static DebtorLastName()
		{
			FluidTrade.Guardian.Schema.Settlement.DebtorLastName.selectSelf = new System.Func<FluidTrade.Guardian.Schema.Settlement.DebtorLastName, FluidTrade.Guardian.Schema.Settlement.DebtorLastName>(FluidTrade.Guardian.Schema.Settlement.DebtorLastName.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.Settlement.DebtorLastName records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.Settlement.DebtorLastName, FluidTrade.Guardian.Schema.Settlement.DebtorLastName> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.Settlement.DebtorLastName.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.Settlement.DebtorLastName to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.Settlement.DebtorLastName debtorLastName = ((FluidTrade.Guardian.Schema.Settlement.DebtorLastName)(iContent));
			if ((this.isActive != debtorLastName.isActive))
			{
				this.isActive = debtorLastName.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != debtorLastName.text))
			{
				this.text = debtorLastName.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.Settlement.DebtorLastName SelectFromSelf(FluidTrade.Guardian.Schema.Settlement.DebtorLastName debtorLastName)
		{
			return debtorLastName;
		}
	}
	
	/// <summary>
	/// This class provides the DebtorAddress1 data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class DebtorAddress1 : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.Settlement.DebtorAddress1, FluidTrade.Guardian.Schema.Settlement.DebtorAddress1> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static DebtorAddress1()
		{
			FluidTrade.Guardian.Schema.Settlement.DebtorAddress1.selectSelf = new System.Func<FluidTrade.Guardian.Schema.Settlement.DebtorAddress1, FluidTrade.Guardian.Schema.Settlement.DebtorAddress1>(FluidTrade.Guardian.Schema.Settlement.DebtorAddress1.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.Settlement.DebtorAddress1 records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.Settlement.DebtorAddress1, FluidTrade.Guardian.Schema.Settlement.DebtorAddress1> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.Settlement.DebtorAddress1.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.Settlement.DebtorAddress1 to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.Settlement.DebtorAddress1 debtorAddress1 = ((FluidTrade.Guardian.Schema.Settlement.DebtorAddress1)(iContent));
			if ((this.isActive != debtorAddress1.isActive))
			{
				this.isActive = debtorAddress1.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != debtorAddress1.text))
			{
				this.text = debtorAddress1.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.Settlement.DebtorAddress1 SelectFromSelf(FluidTrade.Guardian.Schema.Settlement.DebtorAddress1 debtorAddress1)
		{
			return debtorAddress1;
		}
	}
	
	/// <summary>
	/// This class provides the DebtorAddress2 data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class DebtorAddress2 : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.Settlement.DebtorAddress2, FluidTrade.Guardian.Schema.Settlement.DebtorAddress2> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static DebtorAddress2()
		{
			FluidTrade.Guardian.Schema.Settlement.DebtorAddress2.selectSelf = new System.Func<FluidTrade.Guardian.Schema.Settlement.DebtorAddress2, FluidTrade.Guardian.Schema.Settlement.DebtorAddress2>(FluidTrade.Guardian.Schema.Settlement.DebtorAddress2.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.Settlement.DebtorAddress2 records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.Settlement.DebtorAddress2, FluidTrade.Guardian.Schema.Settlement.DebtorAddress2> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.Settlement.DebtorAddress2.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.Settlement.DebtorAddress2 to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.Settlement.DebtorAddress2 debtorAddress2 = ((FluidTrade.Guardian.Schema.Settlement.DebtorAddress2)(iContent));
			if ((this.isActive != debtorAddress2.isActive))
			{
				this.isActive = debtorAddress2.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != debtorAddress2.text))
			{
				this.text = debtorAddress2.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.Settlement.DebtorAddress2 SelectFromSelf(FluidTrade.Guardian.Schema.Settlement.DebtorAddress2 debtorAddress2)
		{
			return debtorAddress2;
		}
	}
	
	/// <summary>
	/// This class provides the DebtorCity data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class DebtorCity : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.Settlement.DebtorCity, FluidTrade.Guardian.Schema.Settlement.DebtorCity> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static DebtorCity()
		{
			FluidTrade.Guardian.Schema.Settlement.DebtorCity.selectSelf = new System.Func<FluidTrade.Guardian.Schema.Settlement.DebtorCity, FluidTrade.Guardian.Schema.Settlement.DebtorCity>(FluidTrade.Guardian.Schema.Settlement.DebtorCity.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.Settlement.DebtorCity records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.Settlement.DebtorCity, FluidTrade.Guardian.Schema.Settlement.DebtorCity> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.Settlement.DebtorCity.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.Settlement.DebtorCity to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.Settlement.DebtorCity debtorCity = ((FluidTrade.Guardian.Schema.Settlement.DebtorCity)(iContent));
			if ((this.isActive != debtorCity.isActive))
			{
				this.isActive = debtorCity.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != debtorCity.text))
			{
				this.text = debtorCity.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.Settlement.DebtorCity SelectFromSelf(FluidTrade.Guardian.Schema.Settlement.DebtorCity debtorCity)
		{
			return debtorCity;
		}
	}
	
	/// <summary>
	/// This class provides the DebtorProvince data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class DebtorProvince : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.Settlement.DebtorProvince, FluidTrade.Guardian.Schema.Settlement.DebtorProvince> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static DebtorProvince()
		{
			FluidTrade.Guardian.Schema.Settlement.DebtorProvince.selectSelf = new System.Func<FluidTrade.Guardian.Schema.Settlement.DebtorProvince, FluidTrade.Guardian.Schema.Settlement.DebtorProvince>(FluidTrade.Guardian.Schema.Settlement.DebtorProvince.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.Settlement.DebtorProvince records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.Settlement.DebtorProvince, FluidTrade.Guardian.Schema.Settlement.DebtorProvince> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.Settlement.DebtorProvince.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.Settlement.DebtorProvince to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.Settlement.DebtorProvince debtorProvince = ((FluidTrade.Guardian.Schema.Settlement.DebtorProvince)(iContent));
			if ((this.isActive != debtorProvince.isActive))
			{
				this.isActive = debtorProvince.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != debtorProvince.text))
			{
				this.text = debtorProvince.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.Settlement.DebtorProvince SelectFromSelf(FluidTrade.Guardian.Schema.Settlement.DebtorProvince debtorProvince)
		{
			return debtorProvince;
		}
	}
	
	/// <summary>
	/// This class provides the DebtorPostalCode data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class DebtorPostalCode : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.Settlement.DebtorPostalCode, FluidTrade.Guardian.Schema.Settlement.DebtorPostalCode> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static DebtorPostalCode()
		{
			FluidTrade.Guardian.Schema.Settlement.DebtorPostalCode.selectSelf = new System.Func<FluidTrade.Guardian.Schema.Settlement.DebtorPostalCode, FluidTrade.Guardian.Schema.Settlement.DebtorPostalCode>(FluidTrade.Guardian.Schema.Settlement.DebtorPostalCode.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.Settlement.DebtorPostalCode records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.Settlement.DebtorPostalCode, FluidTrade.Guardian.Schema.Settlement.DebtorPostalCode> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.Settlement.DebtorPostalCode.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.Settlement.DebtorPostalCode to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.Settlement.DebtorPostalCode debtorPostalCode = ((FluidTrade.Guardian.Schema.Settlement.DebtorPostalCode)(iContent));
			if ((this.isActive != debtorPostalCode.isActive))
			{
				this.isActive = debtorPostalCode.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != debtorPostalCode.text))
			{
				this.text = debtorPostalCode.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.Settlement.DebtorPostalCode SelectFromSelf(FluidTrade.Guardian.Schema.Settlement.DebtorPostalCode debtorPostalCode)
		{
			return debtorPostalCode;
		}
	}
	
	/// <summary>
	/// This class provides the DebtorAccountNumber data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class DebtorAccountNumber : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.Settlement.DebtorAccountNumber, FluidTrade.Guardian.Schema.Settlement.DebtorAccountNumber> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static DebtorAccountNumber()
		{
			FluidTrade.Guardian.Schema.Settlement.DebtorAccountNumber.selectSelf = new System.Func<FluidTrade.Guardian.Schema.Settlement.DebtorAccountNumber, FluidTrade.Guardian.Schema.Settlement.DebtorAccountNumber>(FluidTrade.Guardian.Schema.Settlement.DebtorAccountNumber.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.Settlement.DebtorAccountNumber records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.Settlement.DebtorAccountNumber, FluidTrade.Guardian.Schema.Settlement.DebtorAccountNumber> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.Settlement.DebtorAccountNumber.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.Settlement.DebtorAccountNumber to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.Settlement.DebtorAccountNumber debtorAccountNumber = ((FluidTrade.Guardian.Schema.Settlement.DebtorAccountNumber)(iContent));
			if ((this.isActive != debtorAccountNumber.isActive))
			{
				this.isActive = debtorAccountNumber.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != debtorAccountNumber.text))
			{
				this.text = debtorAccountNumber.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.Settlement.DebtorAccountNumber SelectFromSelf(FluidTrade.Guardian.Schema.Settlement.DebtorAccountNumber debtorAccountNumber)
		{
			return debtorAccountNumber;
		}
	}
	
	/// <summary>
	/// This class provides the DebtorBankRoutingNumber data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class DebtorBankRoutingNumber : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.Settlement.DebtorBankRoutingNumber, FluidTrade.Guardian.Schema.Settlement.DebtorBankRoutingNumber> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static DebtorBankRoutingNumber()
		{
			FluidTrade.Guardian.Schema.Settlement.DebtorBankRoutingNumber.selectSelf = new System.Func<FluidTrade.Guardian.Schema.Settlement.DebtorBankRoutingNumber, FluidTrade.Guardian.Schema.Settlement.DebtorBankRoutingNumber>(FluidTrade.Guardian.Schema.Settlement.DebtorBankRoutingNumber.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.Settlement.DebtorBankRoutingNumber records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.Settlement.DebtorBankRoutingNumber, FluidTrade.Guardian.Schema.Settlement.DebtorBankRoutingNumber> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.Settlement.DebtorBankRoutingNumber.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.Settlement.DebtorBankRoutingNumber to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.Settlement.DebtorBankRoutingNumber debtorBankRoutingNumber = ((FluidTrade.Guardian.Schema.Settlement.DebtorBankRoutingNumber)(iContent));
			if ((this.isActive != debtorBankRoutingNumber.isActive))
			{
				this.isActive = debtorBankRoutingNumber.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != debtorBankRoutingNumber.text))
			{
				this.text = debtorBankRoutingNumber.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.Settlement.DebtorBankRoutingNumber SelectFromSelf(FluidTrade.Guardian.Schema.Settlement.DebtorBankRoutingNumber debtorBankRoutingNumber)
		{
			return debtorBankRoutingNumber;
		}
	}
	
	/// <summary>
	/// This class provides the DebtorBankAccountNumber data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class DebtorBankAccountNumber : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.Settlement.DebtorBankAccountNumber, FluidTrade.Guardian.Schema.Settlement.DebtorBankAccountNumber> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static DebtorBankAccountNumber()
		{
			FluidTrade.Guardian.Schema.Settlement.DebtorBankAccountNumber.selectSelf = new System.Func<FluidTrade.Guardian.Schema.Settlement.DebtorBankAccountNumber, FluidTrade.Guardian.Schema.Settlement.DebtorBankAccountNumber>(FluidTrade.Guardian.Schema.Settlement.DebtorBankAccountNumber.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.Settlement.DebtorBankAccountNumber records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.Settlement.DebtorBankAccountNumber, FluidTrade.Guardian.Schema.Settlement.DebtorBankAccountNumber> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.Settlement.DebtorBankAccountNumber.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.Settlement.DebtorBankAccountNumber to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.Settlement.DebtorBankAccountNumber debtorBankAccountNumber = ((FluidTrade.Guardian.Schema.Settlement.DebtorBankAccountNumber)(iContent));
			if ((this.isActive != debtorBankAccountNumber.isActive))
			{
				this.isActive = debtorBankAccountNumber.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != debtorBankAccountNumber.text))
			{
				this.text = debtorBankAccountNumber.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.Settlement.DebtorBankAccountNumber SelectFromSelf(FluidTrade.Guardian.Schema.Settlement.DebtorBankAccountNumber debtorBankAccountNumber)
		{
			return debtorBankAccountNumber;
		}
	}
	
	/// <summary>
	/// This class provides the PayeeCompanyName data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class PayeeCompanyName : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.Settlement.PayeeCompanyName, FluidTrade.Guardian.Schema.Settlement.PayeeCompanyName> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static PayeeCompanyName()
		{
			FluidTrade.Guardian.Schema.Settlement.PayeeCompanyName.selectSelf = new System.Func<FluidTrade.Guardian.Schema.Settlement.PayeeCompanyName, FluidTrade.Guardian.Schema.Settlement.PayeeCompanyName>(FluidTrade.Guardian.Schema.Settlement.PayeeCompanyName.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.Settlement.PayeeCompanyName records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.Settlement.PayeeCompanyName, FluidTrade.Guardian.Schema.Settlement.PayeeCompanyName> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.Settlement.PayeeCompanyName.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.Settlement.PayeeCompanyName to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.Settlement.PayeeCompanyName payeeCompanyName = ((FluidTrade.Guardian.Schema.Settlement.PayeeCompanyName)(iContent));
			if ((this.isActive != payeeCompanyName.isActive))
			{
				this.isActive = payeeCompanyName.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != payeeCompanyName.text))
			{
				this.text = payeeCompanyName.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.Settlement.PayeeCompanyName SelectFromSelf(FluidTrade.Guardian.Schema.Settlement.PayeeCompanyName payeeCompanyName)
		{
			return payeeCompanyName;
		}
	}
	
	/// <summary>
	/// This class provides the PayeeDepartment data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class PayeeDepartment : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.Settlement.PayeeDepartment, FluidTrade.Guardian.Schema.Settlement.PayeeDepartment> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static PayeeDepartment()
		{
			FluidTrade.Guardian.Schema.Settlement.PayeeDepartment.selectSelf = new System.Func<FluidTrade.Guardian.Schema.Settlement.PayeeDepartment, FluidTrade.Guardian.Schema.Settlement.PayeeDepartment>(FluidTrade.Guardian.Schema.Settlement.PayeeDepartment.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.Settlement.PayeeDepartment records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.Settlement.PayeeDepartment, FluidTrade.Guardian.Schema.Settlement.PayeeDepartment> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.Settlement.PayeeDepartment.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.Settlement.PayeeDepartment to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.Settlement.PayeeDepartment payeeDepartment = ((FluidTrade.Guardian.Schema.Settlement.PayeeDepartment)(iContent));
			if ((this.isActive != payeeDepartment.isActive))
			{
				this.isActive = payeeDepartment.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != payeeDepartment.text))
			{
				this.text = payeeDepartment.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.Settlement.PayeeDepartment SelectFromSelf(FluidTrade.Guardian.Schema.Settlement.PayeeDepartment payeeDepartment)
		{
			return payeeDepartment;
		}
	}
	
	/// <summary>
	/// This class provides the PayeeBenefitOf data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class PayeeBenefitOf : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.Settlement.PayeeBenefitOf, FluidTrade.Guardian.Schema.Settlement.PayeeBenefitOf> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static PayeeBenefitOf()
		{
			FluidTrade.Guardian.Schema.Settlement.PayeeBenefitOf.selectSelf = new System.Func<FluidTrade.Guardian.Schema.Settlement.PayeeBenefitOf, FluidTrade.Guardian.Schema.Settlement.PayeeBenefitOf>(FluidTrade.Guardian.Schema.Settlement.PayeeBenefitOf.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.Settlement.PayeeBenefitOf records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.Settlement.PayeeBenefitOf, FluidTrade.Guardian.Schema.Settlement.PayeeBenefitOf> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.Settlement.PayeeBenefitOf.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.Settlement.PayeeBenefitOf to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.Settlement.PayeeBenefitOf payeeBenefitOf = ((FluidTrade.Guardian.Schema.Settlement.PayeeBenefitOf)(iContent));
			if ((this.isActive != payeeBenefitOf.isActive))
			{
				this.isActive = payeeBenefitOf.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != payeeBenefitOf.text))
			{
				this.text = payeeBenefitOf.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.Settlement.PayeeBenefitOf SelectFromSelf(FluidTrade.Guardian.Schema.Settlement.PayeeBenefitOf payeeBenefitOf)
		{
			return payeeBenefitOf;
		}
	}
	
	/// <summary>
	/// This class provides the PayeeContactName data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class PayeeContactName : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.Settlement.PayeeContactName, FluidTrade.Guardian.Schema.Settlement.PayeeContactName> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static PayeeContactName()
		{
			FluidTrade.Guardian.Schema.Settlement.PayeeContactName.selectSelf = new System.Func<FluidTrade.Guardian.Schema.Settlement.PayeeContactName, FluidTrade.Guardian.Schema.Settlement.PayeeContactName>(FluidTrade.Guardian.Schema.Settlement.PayeeContactName.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.Settlement.PayeeContactName records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.Settlement.PayeeContactName, FluidTrade.Guardian.Schema.Settlement.PayeeContactName> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.Settlement.PayeeContactName.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.Settlement.PayeeContactName to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.Settlement.PayeeContactName payeeContactName = ((FluidTrade.Guardian.Schema.Settlement.PayeeContactName)(iContent));
			if ((this.isActive != payeeContactName.isActive))
			{
				this.isActive = payeeContactName.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != payeeContactName.text))
			{
				this.text = payeeContactName.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.Settlement.PayeeContactName SelectFromSelf(FluidTrade.Guardian.Schema.Settlement.PayeeContactName payeeContactName)
		{
			return payeeContactName;
		}
	}
	
	/// <summary>
	/// This class provides the PayeeAddress1 data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class PayeeAddress1 : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.Settlement.PayeeAddress1, FluidTrade.Guardian.Schema.Settlement.PayeeAddress1> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static PayeeAddress1()
		{
			FluidTrade.Guardian.Schema.Settlement.PayeeAddress1.selectSelf = new System.Func<FluidTrade.Guardian.Schema.Settlement.PayeeAddress1, FluidTrade.Guardian.Schema.Settlement.PayeeAddress1>(FluidTrade.Guardian.Schema.Settlement.PayeeAddress1.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.Settlement.PayeeAddress1 records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.Settlement.PayeeAddress1, FluidTrade.Guardian.Schema.Settlement.PayeeAddress1> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.Settlement.PayeeAddress1.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.Settlement.PayeeAddress1 to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.Settlement.PayeeAddress1 payeeAddress1 = ((FluidTrade.Guardian.Schema.Settlement.PayeeAddress1)(iContent));
			if ((this.isActive != payeeAddress1.isActive))
			{
				this.isActive = payeeAddress1.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != payeeAddress1.text))
			{
				this.text = payeeAddress1.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.Settlement.PayeeAddress1 SelectFromSelf(FluidTrade.Guardian.Schema.Settlement.PayeeAddress1 payeeAddress1)
		{
			return payeeAddress1;
		}
	}
	
	/// <summary>
	/// This class provides the PayeeAddress2 data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class PayeeAddress2 : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.Settlement.PayeeAddress2, FluidTrade.Guardian.Schema.Settlement.PayeeAddress2> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static PayeeAddress2()
		{
			FluidTrade.Guardian.Schema.Settlement.PayeeAddress2.selectSelf = new System.Func<FluidTrade.Guardian.Schema.Settlement.PayeeAddress2, FluidTrade.Guardian.Schema.Settlement.PayeeAddress2>(FluidTrade.Guardian.Schema.Settlement.PayeeAddress2.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.Settlement.PayeeAddress2 records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.Settlement.PayeeAddress2, FluidTrade.Guardian.Schema.Settlement.PayeeAddress2> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.Settlement.PayeeAddress2.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.Settlement.PayeeAddress2 to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.Settlement.PayeeAddress2 payeeAddress2 = ((FluidTrade.Guardian.Schema.Settlement.PayeeAddress2)(iContent));
			if ((this.isActive != payeeAddress2.isActive))
			{
				this.isActive = payeeAddress2.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != payeeAddress2.text))
			{
				this.text = payeeAddress2.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.Settlement.PayeeAddress2 SelectFromSelf(FluidTrade.Guardian.Schema.Settlement.PayeeAddress2 payeeAddress2)
		{
			return payeeAddress2;
		}
	}
	
	/// <summary>
	/// This class provides the PayeeCity data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class PayeeCity : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.Settlement.PayeeCity, FluidTrade.Guardian.Schema.Settlement.PayeeCity> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static PayeeCity()
		{
			FluidTrade.Guardian.Schema.Settlement.PayeeCity.selectSelf = new System.Func<FluidTrade.Guardian.Schema.Settlement.PayeeCity, FluidTrade.Guardian.Schema.Settlement.PayeeCity>(FluidTrade.Guardian.Schema.Settlement.PayeeCity.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.Settlement.PayeeCity records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.Settlement.PayeeCity, FluidTrade.Guardian.Schema.Settlement.PayeeCity> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.Settlement.PayeeCity.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.Settlement.PayeeCity to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.Settlement.PayeeCity payeeCity = ((FluidTrade.Guardian.Schema.Settlement.PayeeCity)(iContent));
			if ((this.isActive != payeeCity.isActive))
			{
				this.isActive = payeeCity.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != payeeCity.text))
			{
				this.text = payeeCity.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.Settlement.PayeeCity SelectFromSelf(FluidTrade.Guardian.Schema.Settlement.PayeeCity payeeCity)
		{
			return payeeCity;
		}
	}
	
	/// <summary>
	/// This class provides the PayeeProvinceId data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class PayeeProvinceId : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.Settlement.PayeeProvinceId, FluidTrade.Guardian.Schema.Settlement.PayeeProvinceId> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static PayeeProvinceId()
		{
			FluidTrade.Guardian.Schema.Settlement.PayeeProvinceId.selectSelf = new System.Func<FluidTrade.Guardian.Schema.Settlement.PayeeProvinceId, FluidTrade.Guardian.Schema.Settlement.PayeeProvinceId>(FluidTrade.Guardian.Schema.Settlement.PayeeProvinceId.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.Settlement.PayeeProvinceId records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.Settlement.PayeeProvinceId, FluidTrade.Guardian.Schema.Settlement.PayeeProvinceId> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.Settlement.PayeeProvinceId.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.Settlement.PayeeProvinceId to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.Settlement.PayeeProvinceId payeeProvinceId = ((FluidTrade.Guardian.Schema.Settlement.PayeeProvinceId)(iContent));
			if ((this.isActive != payeeProvinceId.isActive))
			{
				this.isActive = payeeProvinceId.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != payeeProvinceId.text))
			{
				this.text = payeeProvinceId.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.Settlement.PayeeProvinceId SelectFromSelf(FluidTrade.Guardian.Schema.Settlement.PayeeProvinceId payeeProvinceId)
		{
			return payeeProvinceId;
		}
	}
	
	/// <summary>
	/// This class provides the PayeePostalCode data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class PayeePostalCode : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.Settlement.PayeePostalCode, FluidTrade.Guardian.Schema.Settlement.PayeePostalCode> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static PayeePostalCode()
		{
			FluidTrade.Guardian.Schema.Settlement.PayeePostalCode.selectSelf = new System.Func<FluidTrade.Guardian.Schema.Settlement.PayeePostalCode, FluidTrade.Guardian.Schema.Settlement.PayeePostalCode>(FluidTrade.Guardian.Schema.Settlement.PayeePostalCode.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.Settlement.PayeePostalCode records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.Settlement.PayeePostalCode, FluidTrade.Guardian.Schema.Settlement.PayeePostalCode> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.Settlement.PayeePostalCode.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.Settlement.PayeePostalCode to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.Settlement.PayeePostalCode payeePostalCode = ((FluidTrade.Guardian.Schema.Settlement.PayeePostalCode)(iContent));
			if ((this.isActive != payeePostalCode.isActive))
			{
				this.isActive = payeePostalCode.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != payeePostalCode.text))
			{
				this.text = payeePostalCode.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.Settlement.PayeePostalCode SelectFromSelf(FluidTrade.Guardian.Schema.Settlement.PayeePostalCode payeePostalCode)
		{
			return payeePostalCode;
		}
	}
	
	/// <summary>
	/// This class provides the PayeePhone data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class PayeePhone : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.Settlement.PayeePhone, FluidTrade.Guardian.Schema.Settlement.PayeePhone> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static PayeePhone()
		{
			FluidTrade.Guardian.Schema.Settlement.PayeePhone.selectSelf = new System.Func<FluidTrade.Guardian.Schema.Settlement.PayeePhone, FluidTrade.Guardian.Schema.Settlement.PayeePhone>(FluidTrade.Guardian.Schema.Settlement.PayeePhone.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.Settlement.PayeePhone records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.Settlement.PayeePhone, FluidTrade.Guardian.Schema.Settlement.PayeePhone> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.Settlement.PayeePhone.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.Settlement.PayeePhone to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.Settlement.PayeePhone payeePhone = ((FluidTrade.Guardian.Schema.Settlement.PayeePhone)(iContent));
			if ((this.isActive != payeePhone.isActive))
			{
				this.isActive = payeePhone.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != payeePhone.text))
			{
				this.text = payeePhone.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.Settlement.PayeePhone SelectFromSelf(FluidTrade.Guardian.Schema.Settlement.PayeePhone payeePhone)
		{
			return payeePhone;
		}
	}
	
	/// <summary>
	/// This class provides the PayeeFax data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class PayeeFax : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.Settlement.PayeeFax, FluidTrade.Guardian.Schema.Settlement.PayeeFax> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static PayeeFax()
		{
			FluidTrade.Guardian.Schema.Settlement.PayeeFax.selectSelf = new System.Func<FluidTrade.Guardian.Schema.Settlement.PayeeFax, FluidTrade.Guardian.Schema.Settlement.PayeeFax>(FluidTrade.Guardian.Schema.Settlement.PayeeFax.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.Settlement.PayeeFax records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.Settlement.PayeeFax, FluidTrade.Guardian.Schema.Settlement.PayeeFax> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.Settlement.PayeeFax.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.Settlement.PayeeFax to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.Settlement.PayeeFax payeeFax = ((FluidTrade.Guardian.Schema.Settlement.PayeeFax)(iContent));
			if ((this.isActive != payeeFax.isActive))
			{
				this.isActive = payeeFax.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != payeeFax.text))
			{
				this.text = payeeFax.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.Settlement.PayeeFax SelectFromSelf(FluidTrade.Guardian.Schema.Settlement.PayeeFax payeeFax)
		{
			return payeeFax;
		}
	}
	
	/// <summary>
	/// This class provides the PayeeEmail data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class PayeeEmail : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.Settlement.PayeeEmail, FluidTrade.Guardian.Schema.Settlement.PayeeEmail> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static PayeeEmail()
		{
			FluidTrade.Guardian.Schema.Settlement.PayeeEmail.selectSelf = new System.Func<FluidTrade.Guardian.Schema.Settlement.PayeeEmail, FluidTrade.Guardian.Schema.Settlement.PayeeEmail>(FluidTrade.Guardian.Schema.Settlement.PayeeEmail.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.Settlement.PayeeEmail records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.Settlement.PayeeEmail, FluidTrade.Guardian.Schema.Settlement.PayeeEmail> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.Settlement.PayeeEmail.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.Settlement.PayeeEmail to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.Settlement.PayeeEmail payeeEmail = ((FluidTrade.Guardian.Schema.Settlement.PayeeEmail)(iContent));
			if ((this.isActive != payeeEmail.isActive))
			{
				this.isActive = payeeEmail.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != payeeEmail.text))
			{
				this.text = payeeEmail.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.Settlement.PayeeEmail SelectFromSelf(FluidTrade.Guardian.Schema.Settlement.PayeeEmail payeeEmail)
		{
			return payeeEmail;
		}
	}
	
	/// <summary>
	/// This class provides the PayeeBankRoutingNumber data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class PayeeBankRoutingNumber : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.Settlement.PayeeBankRoutingNumber, FluidTrade.Guardian.Schema.Settlement.PayeeBankRoutingNumber> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static PayeeBankRoutingNumber()
		{
			FluidTrade.Guardian.Schema.Settlement.PayeeBankRoutingNumber.selectSelf = new System.Func<FluidTrade.Guardian.Schema.Settlement.PayeeBankRoutingNumber, FluidTrade.Guardian.Schema.Settlement.PayeeBankRoutingNumber>(FluidTrade.Guardian.Schema.Settlement.PayeeBankRoutingNumber.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.Settlement.PayeeBankRoutingNumber records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.Settlement.PayeeBankRoutingNumber, FluidTrade.Guardian.Schema.Settlement.PayeeBankRoutingNumber> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.Settlement.PayeeBankRoutingNumber.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.Settlement.PayeeBankRoutingNumber to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.Settlement.PayeeBankRoutingNumber payeeBankRoutingNumber = ((FluidTrade.Guardian.Schema.Settlement.PayeeBankRoutingNumber)(iContent));
			if ((this.isActive != payeeBankRoutingNumber.isActive))
			{
				this.isActive = payeeBankRoutingNumber.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != payeeBankRoutingNumber.text))
			{
				this.text = payeeBankRoutingNumber.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.Settlement.PayeeBankRoutingNumber SelectFromSelf(FluidTrade.Guardian.Schema.Settlement.PayeeBankRoutingNumber payeeBankRoutingNumber)
		{
			return payeeBankRoutingNumber;
		}
	}
	
	/// <summary>
	/// This class provides the PayeeBankAccountNumber data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class PayeeBankAccountNumber : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.Settlement.PayeeBankAccountNumber, FluidTrade.Guardian.Schema.Settlement.PayeeBankAccountNumber> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static PayeeBankAccountNumber()
		{
			FluidTrade.Guardian.Schema.Settlement.PayeeBankAccountNumber.selectSelf = new System.Func<FluidTrade.Guardian.Schema.Settlement.PayeeBankAccountNumber, FluidTrade.Guardian.Schema.Settlement.PayeeBankAccountNumber>(FluidTrade.Guardian.Schema.Settlement.PayeeBankAccountNumber.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.Settlement.PayeeBankAccountNumber records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.Settlement.PayeeBankAccountNumber, FluidTrade.Guardian.Schema.Settlement.PayeeBankAccountNumber> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.Settlement.PayeeBankAccountNumber.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.Settlement.PayeeBankAccountNumber to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.Settlement.PayeeBankAccountNumber payeeBankAccountNumber = ((FluidTrade.Guardian.Schema.Settlement.PayeeBankAccountNumber)(iContent));
			if ((this.isActive != payeeBankAccountNumber.isActive))
			{
				this.isActive = payeeBankAccountNumber.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != payeeBankAccountNumber.text))
			{
				this.text = payeeBankAccountNumber.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.Settlement.PayeeBankAccountNumber SelectFromSelf(FluidTrade.Guardian.Schema.Settlement.PayeeBankAccountNumber payeeBankAccountNumber)
		{
			return payeeBankAccountNumber;
		}
	}
	
	/// <summary>
	/// This class provides the PayTermLength data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class PayTermLength : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.Settlement.PayTermLength, FluidTrade.Guardian.Schema.Settlement.PayTermLength> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static PayTermLength()
		{
			FluidTrade.Guardian.Schema.Settlement.PayTermLength.selectSelf = new System.Func<FluidTrade.Guardian.Schema.Settlement.PayTermLength, FluidTrade.Guardian.Schema.Settlement.PayTermLength>(FluidTrade.Guardian.Schema.Settlement.PayTermLength.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.Settlement.PayTermLength records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.Settlement.PayTermLength, FluidTrade.Guardian.Schema.Settlement.PayTermLength> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.Settlement.PayTermLength.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.Settlement.PayTermLength to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.Settlement.PayTermLength payTermLength = ((FluidTrade.Guardian.Schema.Settlement.PayTermLength)(iContent));
			if ((this.isActive != payTermLength.isActive))
			{
				this.isActive = payTermLength.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != payTermLength.text))
			{
				this.text = payTermLength.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.Settlement.PayTermLength SelectFromSelf(FluidTrade.Guardian.Schema.Settlement.PayTermLength payTermLength)
		{
			return payTermLength;
		}
	}
	
	/// <summary>
	/// This class provides the PayTermStartDate data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class PayTermStartDate : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.Settlement.PayTermStartDate, FluidTrade.Guardian.Schema.Settlement.PayTermStartDate> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static PayTermStartDate()
		{
			FluidTrade.Guardian.Schema.Settlement.PayTermStartDate.selectSelf = new System.Func<FluidTrade.Guardian.Schema.Settlement.PayTermStartDate, FluidTrade.Guardian.Schema.Settlement.PayTermStartDate>(FluidTrade.Guardian.Schema.Settlement.PayTermStartDate.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.Settlement.PayTermStartDate records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.Settlement.PayTermStartDate, FluidTrade.Guardian.Schema.Settlement.PayTermStartDate> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.Settlement.PayTermStartDate.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.Settlement.PayTermStartDate to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.Settlement.PayTermStartDate payTermStartDate = ((FluidTrade.Guardian.Schema.Settlement.PayTermStartDate)(iContent));
			if ((this.isActive != payTermStartDate.isActive))
			{
				this.isActive = payTermStartDate.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != payTermStartDate.text))
			{
				this.text = payTermStartDate.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.Settlement.PayTermStartDate SelectFromSelf(FluidTrade.Guardian.Schema.Settlement.PayTermStartDate payTermStartDate)
		{
			return payTermStartDate;
		}
	}
	
	/// <summary>
	/// This class provides the PaymentMethod data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class PaymentMethod : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.Settlement.PaymentMethod, FluidTrade.Guardian.Schema.Settlement.PaymentMethod> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static PaymentMethod()
		{
			FluidTrade.Guardian.Schema.Settlement.PaymentMethod.selectSelf = new System.Func<FluidTrade.Guardian.Schema.Settlement.PaymentMethod, FluidTrade.Guardian.Schema.Settlement.PaymentMethod>(FluidTrade.Guardian.Schema.Settlement.PaymentMethod.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.Settlement.PaymentMethod records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.Settlement.PaymentMethod, FluidTrade.Guardian.Schema.Settlement.PaymentMethod> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.Settlement.PaymentMethod.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.Settlement.PaymentMethod to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.Settlement.PaymentMethod paymentMethod = ((FluidTrade.Guardian.Schema.Settlement.PaymentMethod)(iContent));
			if ((this.isActive != paymentMethod.isActive))
			{
				this.isActive = paymentMethod.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != paymentMethod.text))
			{
				this.text = paymentMethod.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.Settlement.PaymentMethod SelectFromSelf(FluidTrade.Guardian.Schema.Settlement.PaymentMethod paymentMethod)
		{
			return paymentMethod;
		}
	}
	
	/// <summary>
	/// This class provides the SettlementAmount data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class SettlementAmount : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.Settlement.SettlementAmount, FluidTrade.Guardian.Schema.Settlement.SettlementAmount> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static SettlementAmount()
		{
			FluidTrade.Guardian.Schema.Settlement.SettlementAmount.selectSelf = new System.Func<FluidTrade.Guardian.Schema.Settlement.SettlementAmount, FluidTrade.Guardian.Schema.Settlement.SettlementAmount>(FluidTrade.Guardian.Schema.Settlement.SettlementAmount.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.Settlement.SettlementAmount records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.Settlement.SettlementAmount, FluidTrade.Guardian.Schema.Settlement.SettlementAmount> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.Settlement.SettlementAmount.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.Settlement.SettlementAmount to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.Settlement.SettlementAmount settlementAmount = ((FluidTrade.Guardian.Schema.Settlement.SettlementAmount)(iContent));
			if ((this.isActive != settlementAmount.isActive))
			{
				this.isActive = settlementAmount.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != settlementAmount.text))
			{
				this.text = settlementAmount.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.Settlement.SettlementAmount SelectFromSelf(FluidTrade.Guardian.Schema.Settlement.SettlementAmount settlementAmount)
		{
			return settlementAmount;
		}
	}
	
	/// <summary>
	/// This class provides the SettlementId data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class SettlementId : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.Settlement.SettlementId, FluidTrade.Guardian.Schema.Settlement.SettlementId> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static SettlementId()
		{
			FluidTrade.Guardian.Schema.Settlement.SettlementId.selectSelf = new System.Func<FluidTrade.Guardian.Schema.Settlement.SettlementId, FluidTrade.Guardian.Schema.Settlement.SettlementId>(FluidTrade.Guardian.Schema.Settlement.SettlementId.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.Settlement.SettlementId records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.Settlement.SettlementId, FluidTrade.Guardian.Schema.Settlement.SettlementId> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.Settlement.SettlementId.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.Settlement.SettlementId to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.Settlement.SettlementId settlementId = ((FluidTrade.Guardian.Schema.Settlement.SettlementId)(iContent));
			if ((this.isActive != settlementId.isActive))
			{
				this.isActive = settlementId.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != settlementId.text))
			{
				this.text = settlementId.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.Settlement.SettlementId SelectFromSelf(FluidTrade.Guardian.Schema.Settlement.SettlementId settlementId)
		{
			return settlementId;
		}
	}
	
	/// <summary>
	/// This class provides the ReadStatus data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class ReadStatus : FluidTrade.Core.IContent, System.ComponentModel.INotifyPropertyChanged
	{
		
		internal bool isActive;
		
		internal object key;
		
		private static System.Func<FluidTrade.Guardian.Schema.Settlement.ReadStatus, FluidTrade.Guardian.Schema.Settlement.ReadStatus> selectSelf;
		
		internal object text;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static ReadStatus()
		{
			FluidTrade.Guardian.Schema.Settlement.ReadStatus.selectSelf = new System.Func<FluidTrade.Guardian.Schema.Settlement.ReadStatus, FluidTrade.Guardian.Schema.Settlement.ReadStatus>(FluidTrade.Guardian.Schema.Settlement.ReadStatus.SelectFromSelf);
		}
		
		/// <summary>
		/// IsActive
		/// </summary>
		public bool IsActive
		{
			get
			{
				return this.isActive;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.Settlement.ReadStatus records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.Settlement.ReadStatus, FluidTrade.Guardian.Schema.Settlement.ReadStatus> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.Settlement.ReadStatus.selectSelf;
			}
		}
		
		/// <summary>
		/// Text
		/// </summary>
		public object Text
		{
			get
			{
				return this.text;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Indicates that one of the object's properties has changed.
		/// </summary>
		public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.Settlement.ReadStatus to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.Settlement.ReadStatus readStatus = ((FluidTrade.Guardian.Schema.Settlement.ReadStatus)(iContent));
			if ((this.isActive != readStatus.isActive))
			{
				this.isActive = readStatus.isActive;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("IsActive"));
				}
			}
			if ((this.text != readStatus.text))
			{
				this.text = readStatus.text;
				if ((this.PropertyChanged != null))
				{
					this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs("Text"));
				}
			}
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.Settlement.ReadStatus SelectFromSelf(FluidTrade.Guardian.Schema.Settlement.ReadStatus readStatus)
		{
			return readStatus;
		}
	}
	
	/// <summary>
	/// This class provides the Settlement data for a report.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FluidTrade.PresentationGenerator.PresentationGenerator", "1.3.0.0")]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItemAttribute(true)]
	public class Settlement : FluidTrade.Core.IContent
	{
		
		internal FluidTrade.Guardian.Schema.Settlement.AccountBalance accountBalance;
		
		internal FluidTrade.Guardian.Schema.Settlement.DebtHolder debtHolder;
		
		internal FluidTrade.Guardian.Schema.Settlement.DebtNegotiator debtNegotiator;
		
		internal FluidTrade.Guardian.Schema.Settlement.DebtorAccountNumber debtorAccountNumber;
		
		internal FluidTrade.Guardian.Schema.Settlement.DebtorAddress1 debtorAddress1;
		
		internal FluidTrade.Guardian.Schema.Settlement.DebtorAddress2 debtorAddress2;
		
		internal FluidTrade.Guardian.Schema.Settlement.DebtorBankAccountNumber debtorBankAccountNumber;
		
		internal FluidTrade.Guardian.Schema.Settlement.DebtorBankRoutingNumber debtorBankRoutingNumber;
		
		internal FluidTrade.Guardian.Schema.Settlement.DebtorCity debtorCity;
		
		internal FluidTrade.Guardian.Schema.Settlement.DebtorFirstName debtorFirstName;
		
		internal FluidTrade.Guardian.Schema.Settlement.DebtorLastName debtorLastName;
		
		internal FluidTrade.Guardian.Schema.Settlement.DebtorMiddleName debtorMiddleName;
		
		internal FluidTrade.Guardian.Schema.Settlement.DebtorPostalCode debtorPostalCode;
		
		internal FluidTrade.Guardian.Schema.Settlement.DebtorProvince debtorProvince;
		
		internal object key;
		
		internal FluidTrade.Guardian.Schema.Settlement.PayeeAddress1 payeeAddress1;
		
		internal FluidTrade.Guardian.Schema.Settlement.PayeeAddress2 payeeAddress2;
		
		internal FluidTrade.Guardian.Schema.Settlement.PayeeBankAccountNumber payeeBankAccountNumber;
		
		internal FluidTrade.Guardian.Schema.Settlement.PayeeBankRoutingNumber payeeBankRoutingNumber;
		
		internal FluidTrade.Guardian.Schema.Settlement.PayeeBenefitOf payeeBenefitOf;
		
		internal FluidTrade.Guardian.Schema.Settlement.PayeeCity payeeCity;
		
		internal FluidTrade.Guardian.Schema.Settlement.PayeeCompanyName payeeCompanyName;
		
		internal FluidTrade.Guardian.Schema.Settlement.PayeeContactName payeeContactName;
		
		internal FluidTrade.Guardian.Schema.Settlement.PayeeDepartment payeeDepartment;
		
		internal FluidTrade.Guardian.Schema.Settlement.PayeeEmail payeeEmail;
		
		internal FluidTrade.Guardian.Schema.Settlement.PayeeFax payeeFax;
		
		internal FluidTrade.Guardian.Schema.Settlement.PayeePhone payeePhone;
		
		internal FluidTrade.Guardian.Schema.Settlement.PayeePostalCode payeePostalCode;
		
		internal FluidTrade.Guardian.Schema.Settlement.PayeeProvinceId payeeProvinceId;
		
		internal FluidTrade.Guardian.Schema.Settlement.PaymentMethod paymentMethod;
		
		internal FluidTrade.Guardian.Schema.Settlement.PayTermLength payTermLength;
		
		internal FluidTrade.Guardian.Schema.Settlement.PayTermStartDate payTermStartDate;
		
		internal FluidTrade.Guardian.Schema.Settlement.ReadStatus readStatus;
		
		private static System.Func<FluidTrade.Guardian.Schema.Settlement.Settlement, FluidTrade.Guardian.Schema.Settlement.Settlement> selectSelf;
		
		internal FluidTrade.Guardian.Schema.Settlement.SettlementAmount settlementAmount;
		
		internal FluidTrade.Guardian.Schema.Settlement.SettlementId settlementId;
		
		/// <summary>
		/// Creates the static resources required for this class.
		/// </summary>
		static Settlement()
		{
			FluidTrade.Guardian.Schema.Settlement.Settlement.selectSelf = new System.Func<FluidTrade.Guardian.Schema.Settlement.Settlement, FluidTrade.Guardian.Schema.Settlement.Settlement>(FluidTrade.Guardian.Schema.Settlement.Settlement.SelectFromSelf);
		}
		
		/// <summary>
		/// Creates a FluidTrade.Guardian.Schema.Settlement.Settlement.
		/// </summary>
		public Settlement()
		{
			this.accountBalance = new FluidTrade.Guardian.Schema.Settlement.AccountBalance();
			this.debtHolder = new FluidTrade.Guardian.Schema.Settlement.DebtHolder();
			this.debtNegotiator = new FluidTrade.Guardian.Schema.Settlement.DebtNegotiator();
			this.debtorFirstName = new FluidTrade.Guardian.Schema.Settlement.DebtorFirstName();
			this.debtorMiddleName = new FluidTrade.Guardian.Schema.Settlement.DebtorMiddleName();
			this.debtorLastName = new FluidTrade.Guardian.Schema.Settlement.DebtorLastName();
			this.debtorAddress1 = new FluidTrade.Guardian.Schema.Settlement.DebtorAddress1();
			this.debtorAddress2 = new FluidTrade.Guardian.Schema.Settlement.DebtorAddress2();
			this.debtorCity = new FluidTrade.Guardian.Schema.Settlement.DebtorCity();
			this.debtorProvince = new FluidTrade.Guardian.Schema.Settlement.DebtorProvince();
			this.debtorPostalCode = new FluidTrade.Guardian.Schema.Settlement.DebtorPostalCode();
			this.debtorAccountNumber = new FluidTrade.Guardian.Schema.Settlement.DebtorAccountNumber();
			this.debtorBankRoutingNumber = new FluidTrade.Guardian.Schema.Settlement.DebtorBankRoutingNumber();
			this.debtorBankAccountNumber = new FluidTrade.Guardian.Schema.Settlement.DebtorBankAccountNumber();
			this.payeeCompanyName = new FluidTrade.Guardian.Schema.Settlement.PayeeCompanyName();
			this.payeeDepartment = new FluidTrade.Guardian.Schema.Settlement.PayeeDepartment();
			this.payeeBenefitOf = new FluidTrade.Guardian.Schema.Settlement.PayeeBenefitOf();
			this.payeeContactName = new FluidTrade.Guardian.Schema.Settlement.PayeeContactName();
			this.payeeAddress1 = new FluidTrade.Guardian.Schema.Settlement.PayeeAddress1();
			this.payeeAddress2 = new FluidTrade.Guardian.Schema.Settlement.PayeeAddress2();
			this.payeeCity = new FluidTrade.Guardian.Schema.Settlement.PayeeCity();
			this.payeeProvinceId = new FluidTrade.Guardian.Schema.Settlement.PayeeProvinceId();
			this.payeePostalCode = new FluidTrade.Guardian.Schema.Settlement.PayeePostalCode();
			this.payeePhone = new FluidTrade.Guardian.Schema.Settlement.PayeePhone();
			this.payeeFax = new FluidTrade.Guardian.Schema.Settlement.PayeeFax();
			this.payeeEmail = new FluidTrade.Guardian.Schema.Settlement.PayeeEmail();
			this.payeeBankRoutingNumber = new FluidTrade.Guardian.Schema.Settlement.PayeeBankRoutingNumber();
			this.payeeBankAccountNumber = new FluidTrade.Guardian.Schema.Settlement.PayeeBankAccountNumber();
			this.payTermLength = new FluidTrade.Guardian.Schema.Settlement.PayTermLength();
			this.payTermStartDate = new FluidTrade.Guardian.Schema.Settlement.PayTermStartDate();
			this.paymentMethod = new FluidTrade.Guardian.Schema.Settlement.PaymentMethod();
			this.settlementAmount = new FluidTrade.Guardian.Schema.Settlement.SettlementAmount();
			this.settlementId = new FluidTrade.Guardian.Schema.Settlement.SettlementId();
			this.readStatus = new FluidTrade.Guardian.Schema.Settlement.ReadStatus();
		}
		
		/// <summary>
		/// AccountBalance
		/// </summary>
		public FluidTrade.Guardian.Schema.Settlement.AccountBalance AccountBalance
		{
			get
			{
				return this.accountBalance;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// DebtHolder
		/// </summary>
		public FluidTrade.Guardian.Schema.Settlement.DebtHolder DebtHolder
		{
			get
			{
				return this.debtHolder;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// DebtNegotiator
		/// </summary>
		public FluidTrade.Guardian.Schema.Settlement.DebtNegotiator DebtNegotiator
		{
			get
			{
				return this.debtNegotiator;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// DebtorAccountNumber
		/// </summary>
		public FluidTrade.Guardian.Schema.Settlement.DebtorAccountNumber DebtorAccountNumber
		{
			get
			{
				return this.debtorAccountNumber;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// DebtorAddress1
		/// </summary>
		public FluidTrade.Guardian.Schema.Settlement.DebtorAddress1 DebtorAddress1
		{
			get
			{
				return this.debtorAddress1;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// DebtorAddress2
		/// </summary>
		public FluidTrade.Guardian.Schema.Settlement.DebtorAddress2 DebtorAddress2
		{
			get
			{
				return this.debtorAddress2;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// DebtorBankAccountNumber
		/// </summary>
		public FluidTrade.Guardian.Schema.Settlement.DebtorBankAccountNumber DebtorBankAccountNumber
		{
			get
			{
				return this.debtorBankAccountNumber;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// DebtorBankRoutingNumber
		/// </summary>
		public FluidTrade.Guardian.Schema.Settlement.DebtorBankRoutingNumber DebtorBankRoutingNumber
		{
			get
			{
				return this.debtorBankRoutingNumber;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// DebtorCity
		/// </summary>
		public FluidTrade.Guardian.Schema.Settlement.DebtorCity DebtorCity
		{
			get
			{
				return this.debtorCity;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// DebtorFirstName
		/// </summary>
		public FluidTrade.Guardian.Schema.Settlement.DebtorFirstName DebtorFirstName
		{
			get
			{
				return this.debtorFirstName;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// DebtorLastName
		/// </summary>
		public FluidTrade.Guardian.Schema.Settlement.DebtorLastName DebtorLastName
		{
			get
			{
				return this.debtorLastName;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// DebtorMiddleName
		/// </summary>
		public FluidTrade.Guardian.Schema.Settlement.DebtorMiddleName DebtorMiddleName
		{
			get
			{
				return this.debtorMiddleName;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// DebtorPostalCode
		/// </summary>
		public FluidTrade.Guardian.Schema.Settlement.DebtorPostalCode DebtorPostalCode
		{
			get
			{
				return this.debtorPostalCode;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// DebtorProvince
		/// </summary>
		public FluidTrade.Guardian.Schema.Settlement.DebtorProvince DebtorProvince
		{
			get
			{
				return this.debtorProvince;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets or sets the unique identifier of this content.
		/// </summary>
		public object Key
		{
			get
			{
				return this.key;
			}
			set
			{
				this.key = value;
			}
		}
		
		/// <summary>
		/// PayeeAddress1
		/// </summary>
		public FluidTrade.Guardian.Schema.Settlement.PayeeAddress1 PayeeAddress1
		{
			get
			{
				return this.payeeAddress1;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// PayeeAddress2
		/// </summary>
		public FluidTrade.Guardian.Schema.Settlement.PayeeAddress2 PayeeAddress2
		{
			get
			{
				return this.payeeAddress2;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// PayeeBankAccountNumber
		/// </summary>
		public FluidTrade.Guardian.Schema.Settlement.PayeeBankAccountNumber PayeeBankAccountNumber
		{
			get
			{
				return this.payeeBankAccountNumber;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// PayeeBankRoutingNumber
		/// </summary>
		public FluidTrade.Guardian.Schema.Settlement.PayeeBankRoutingNumber PayeeBankRoutingNumber
		{
			get
			{
				return this.payeeBankRoutingNumber;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// PayeeBenefitOf
		/// </summary>
		public FluidTrade.Guardian.Schema.Settlement.PayeeBenefitOf PayeeBenefitOf
		{
			get
			{
				return this.payeeBenefitOf;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// PayeeCity
		/// </summary>
		public FluidTrade.Guardian.Schema.Settlement.PayeeCity PayeeCity
		{
			get
			{
				return this.payeeCity;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// PayeeCompanyName
		/// </summary>
		public FluidTrade.Guardian.Schema.Settlement.PayeeCompanyName PayeeCompanyName
		{
			get
			{
				return this.payeeCompanyName;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// PayeeContactName
		/// </summary>
		public FluidTrade.Guardian.Schema.Settlement.PayeeContactName PayeeContactName
		{
			get
			{
				return this.payeeContactName;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// PayeeDepartment
		/// </summary>
		public FluidTrade.Guardian.Schema.Settlement.PayeeDepartment PayeeDepartment
		{
			get
			{
				return this.payeeDepartment;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// PayeeEmail
		/// </summary>
		public FluidTrade.Guardian.Schema.Settlement.PayeeEmail PayeeEmail
		{
			get
			{
				return this.payeeEmail;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// PayeeFax
		/// </summary>
		public FluidTrade.Guardian.Schema.Settlement.PayeeFax PayeeFax
		{
			get
			{
				return this.payeeFax;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// PayeePhone
		/// </summary>
		public FluidTrade.Guardian.Schema.Settlement.PayeePhone PayeePhone
		{
			get
			{
				return this.payeePhone;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// PayeePostalCode
		/// </summary>
		public FluidTrade.Guardian.Schema.Settlement.PayeePostalCode PayeePostalCode
		{
			get
			{
				return this.payeePostalCode;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// PayeeProvinceId
		/// </summary>
		public FluidTrade.Guardian.Schema.Settlement.PayeeProvinceId PayeeProvinceId
		{
			get
			{
				return this.payeeProvinceId;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// PaymentMethod
		/// </summary>
		public FluidTrade.Guardian.Schema.Settlement.PaymentMethod PaymentMethod
		{
			get
			{
				return this.paymentMethod;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// PayTermLength
		/// </summary>
		public FluidTrade.Guardian.Schema.Settlement.PayTermLength PayTermLength
		{
			get
			{
				return this.payTermLength;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// PayTermStartDate
		/// </summary>
		public FluidTrade.Guardian.Schema.Settlement.PayTermStartDate PayTermStartDate
		{
			get
			{
				return this.payTermStartDate;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// ReadStatus
		/// </summary>
		public FluidTrade.Guardian.Schema.Settlement.ReadStatus ReadStatus
		{
			get
			{
				return this.readStatus;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Gets the selector delegate for FluidTrade.Guardian.Schema.Settlement.Settlement records.
		/// </summary>
		public static System.Func<FluidTrade.Guardian.Schema.Settlement.Settlement, FluidTrade.Guardian.Schema.Settlement.Settlement> SelectSelf
		{
			get
			{
				return FluidTrade.Guardian.Schema.Settlement.Settlement.selectSelf;
			}
		}
		
		/// <summary>
		/// SettlementAmount
		/// </summary>
		public FluidTrade.Guardian.Schema.Settlement.SettlementAmount SettlementAmount
		{
			get
			{
				return this.settlementAmount;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// SettlementId
		/// </summary>
		public FluidTrade.Guardian.Schema.Settlement.SettlementId SettlementId
		{
			get
			{
				return this.settlementId;
			}
			set
			{

			}
		}
		
		/// <summary>
		/// Copies one FluidTrade.Guardian.Schema.Settlement.Settlement to another.
		/// </summary>
		public void Copy(FluidTrade.Core.IContent iContent)
		{
			FluidTrade.Guardian.Schema.Settlement.Settlement settlement = ((FluidTrade.Guardian.Schema.Settlement.Settlement)(iContent));
			this.accountBalance.Copy(settlement.accountBalance);
			this.debtHolder.Copy(settlement.debtHolder);
			this.debtNegotiator.Copy(settlement.debtNegotiator);
			this.debtorFirstName.Copy(settlement.debtorFirstName);
			this.debtorMiddleName.Copy(settlement.debtorMiddleName);
			this.debtorLastName.Copy(settlement.debtorLastName);
			this.debtorAddress1.Copy(settlement.debtorAddress1);
			this.debtorAddress2.Copy(settlement.debtorAddress2);
			this.debtorCity.Copy(settlement.debtorCity);
			this.debtorProvince.Copy(settlement.debtorProvince);
			this.debtorPostalCode.Copy(settlement.debtorPostalCode);
			this.debtorAccountNumber.Copy(settlement.debtorAccountNumber);
			this.debtorBankRoutingNumber.Copy(settlement.debtorBankRoutingNumber);
			this.debtorBankAccountNumber.Copy(settlement.debtorBankAccountNumber);
			this.payeeCompanyName.Copy(settlement.payeeCompanyName);
			this.payeeDepartment.Copy(settlement.payeeDepartment);
			this.payeeBenefitOf.Copy(settlement.payeeBenefitOf);
			this.payeeContactName.Copy(settlement.payeeContactName);
			this.payeeAddress1.Copy(settlement.payeeAddress1);
			this.payeeAddress2.Copy(settlement.payeeAddress2);
			this.payeeCity.Copy(settlement.payeeCity);
			this.payeeProvinceId.Copy(settlement.payeeProvinceId);
			this.payeePostalCode.Copy(settlement.payeePostalCode);
			this.payeePhone.Copy(settlement.payeePhone);
			this.payeeFax.Copy(settlement.payeeFax);
			this.payeeEmail.Copy(settlement.payeeEmail);
			this.payeeBankRoutingNumber.Copy(settlement.payeeBankRoutingNumber);
			this.payeeBankAccountNumber.Copy(settlement.payeeBankAccountNumber);
			this.payTermLength.Copy(settlement.payTermLength);
			this.payTermStartDate.Copy(settlement.payTermStartDate);
			this.paymentMethod.Copy(settlement.paymentMethod);
			this.settlementAmount.Copy(settlement.settlementAmount);
			this.settlementId.Copy(settlement.settlementId);
			this.readStatus.Copy(settlement.readStatus);
		}
		
		/// <summary>
		/// Creates a FluidTrade.Guardian.Schema.Settlement.Settlement.
		/// </summary>
		public FluidTrade.Guardian.Schema.Settlement.Settlement Select(FluidTrade.Guardian.ConsumerDebtSettlementRow settlementRow)
		{
			this.key = settlementRow;

			  ConsumerDebtNegotiationRow consumerDebtTrustNegotiationRow =			  
			  DataModel.ConsumerDebtNegotiation.ConsumerDebtNegotiationKey.Find(settlementRow.ConsumerDebtNegotiationId);
;

			  MatchRow matchRow = (consumerDebtTrustNegotiationRow != null) ? DataModel.Match.MatchKey.Find(consumerDebtTrustNegotiationRow.MatchId)
			  : null;

			;
StatusRow statusRow = DataModel.Status.StatusKey.Find(settlementRow.StatusId);
;
			this.accountBalance.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Pending;
			this.accountBalance.text = settlementRow.AccountBalance;
			this.debtHolder.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Pending;
			this.debtHolder.text = global::System.Guid.NewGuid();
			this.debtNegotiator.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Pending;
			this.debtNegotiator.id = settlementRow.ConsumerDebtNegotiationId;
			this.debtorFirstName.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Pending;
			this.debtorFirstName.text = settlementRow.DebtorFirstName;
			this.debtorMiddleName.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Pending;
			this.debtorMiddleName.text = (settlementRow.IsDebtorMiddleNameNull() == false) ? settlementRow.DebtorMiddleName : "";
			this.debtorLastName.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Pending;
			this.debtorLastName.text = settlementRow.DebtorLastName;
			this.debtorAddress1.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Pending;
			this.debtorAddress1.text = settlementRow.DebtorAddress1;
			this.debtorAddress2.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Pending;
			this.debtorAddress2.text = (settlementRow.IsDebtorAddress2Null() == false) ? settlementRow.DebtorAddress2 : "";
			this.debtorCity.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Pending;
			this.debtorCity.text = settlementRow.DebtorCity;
			this.debtorProvince.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Pending;
			this.debtorProvince.text = "";
			this.debtorPostalCode.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Pending;
			this.debtorPostalCode.text = (settlementRow.IsDebtorPostalCodeNull() == false) ? settlementRow.DebtorPostalCode : "";
			this.debtorAccountNumber.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Pending;
			this.debtorAccountNumber.text = (settlementRow.IsDebtorAccountNumberNull() == false) ? settlementRow.DebtorAccountNumber : "";
			this.debtorBankRoutingNumber.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Pending;
			this.debtorBankRoutingNumber.text = (settlementRow.IsDebtorBankRoutingNumberNull() == false) ? settlementRow.DebtorBankRoutingNumber : "";
			this.debtorBankAccountNumber.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Pending;
			this.debtorBankAccountNumber.text = (settlementRow.IsDebtorBankAccountNumberNull() == false) ? settlementRow.DebtorBankAccountNumber : "";
			this.payeeCompanyName.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Pending;
			this.payeeCompanyName.text = (settlementRow.IsPayeeCompanyNameNull() == false) ? settlementRow.PayeeCompanyName : "";
			this.payeeDepartment.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Pending;
			this.payeeDepartment.text = (settlementRow.IsPayeeCompanyNameNull() == false) ? settlementRow.PayeeCompanyName : "";
			this.payeeBenefitOf.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Pending;
			this.payeeBenefitOf.text = (settlementRow.IsPayeeForBenefitOfNull() == false) ? settlementRow.PayeeForBenefitOf : "";
			this.payeeContactName.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Pending;
			this.payeeContactName.text = (settlementRow.IsPayeeContactNameNull() == false) ? settlementRow.PayeeContactName : "";
			this.payeeAddress1.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Pending;
			this.payeeAddress1.text = (settlementRow.IsPayeeAddress1Null() == false) ? settlementRow.PayeeAddress1 : "";
			this.payeeAddress2.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Pending;
			this.payeeAddress2.text = (settlementRow.IsPayeeAddress2Null() == false) ? settlementRow.PayeeAddress2 : "";
			this.payeeCity.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Pending;
			this.payeeCity.text = (settlementRow.IsPayeeCityNull() == false) ? settlementRow.PayeeCity : "";
			this.payeeProvinceId.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Pending;
			this.payeeProvinceId.text = "";
			this.payeePostalCode.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Pending;
			this.payeePostalCode.text = (settlementRow.IsPayeePostalCodeNull() == false) ? settlementRow.PayeePostalCode : "";
			this.payeePhone.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Pending;
			this.payeePhone.text = (settlementRow.IsPayeePhoneNull() == false) ? settlementRow.PayeePhone : "";
			this.payeeFax.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Pending;
			this.payeeFax.text = (settlementRow.IsPayeeFaxNull() == false) ? settlementRow.PayeeFax : "";
			this.payeeEmail.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Pending;
			this.payeeEmail.text = (settlementRow.IsPayeeEmailNull() == false) ? settlementRow.PayeeEmail : "";
			this.payeeBankRoutingNumber.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Pending;
			this.payeeBankRoutingNumber.text = (settlementRow.IsPayeeBankRoutingNumberNull() == false) ? settlementRow.PayeeBankRoutingNumber : "";
			this.payeeBankAccountNumber.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Pending;
			this.payeeBankAccountNumber.text = (settlementRow.IsPayeeBankAccountNumberNull() == false) ? settlementRow.PayeeBankAccountNumber : "";
			this.payTermLength.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Pending;
			this.payTermLength.text = settlementRow.PaymentLength;
			this.payTermStartDate.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Pending;
			this.payTermStartDate.text = settlementRow.PaymentStartDate;
			this.paymentMethod.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Pending;
			this.paymentMethod.text = "";
			this.settlementAmount.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Pending;
			this.settlementAmount.text = settlementRow.SettlementAmount;
			this.settlementId.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Pending;
			this.settlementId.text = settlementRow.ConsumerDebtSettlementId;
			this.readStatus.isActive = statusRow.StatusCode != FluidTrade.Guardian.Status.Pending;
			this.readStatus.text = statusRow.StatusCode.ToString();
			return this;
		}
		
		/// <summary>
		/// Selects a record from itself.
		/// </summary>
		private static FluidTrade.Guardian.Schema.Settlement.Settlement SelectFromSelf(FluidTrade.Guardian.Schema.Settlement.Settlement settlement)
		{
			return settlement;
		}
	}
}
